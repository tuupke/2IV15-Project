!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
APIENTRY	include/GL/gl.h	29;"	d
APIENTRY	include/GL/glext.h	43;"	d
APIENTRY	include/GL/glprocs.h	49;"	d
APIENTRY	include/GL/glut.h	151;"	d
APIENTRY	include/GL/glut.h	24;"	d
APIENTRY	include/GL/glut.h	26;"	d
APIENTRY	include/GL/glut.h	698;"	d
APIENTRY	include/GL/wglext.h	43;"	d
APIENTRYP	include/GL/glext.h	46;"	d
APIENTRYP	include/GL/wglext.h	46;"	d
ActiveStencilFaceEXT	include/GL/glprocs.h	/^  void (APIENTRY *ActiveStencilFaceEXT) (GLenum face);$/;"	m	struct:__anon1
ActiveTexture	include/GL/glprocs.h	/^  void (APIENTRY *ActiveTexture) (GLenum texture);$/;"	m	struct:__anon1
ActiveTextureARB	include/GL/glprocs.h	/^  void (APIENTRY *ActiveTextureARB) (GLenum texture);$/;"	m	struct:__anon1
AddField	ScalarField.cpp	/^void ScalarField::AddField(ScalarField *a_SrcField) {$/;"	f	class:ScalarField
AddField	VectorField.cpp	/^VectorField::AddField(VectorField *a_SrcField) {$/;"	f	class:VectorField
AddSwapHintRectWIN	include/GL/glprocs.h	/^  void (APIENTRY *AddSwapHintRectWIN) (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	m	struct:__anon1
AllocateMemoryNV	include/GL/glprocs.h	/^  void* (WINAPI *AllocateMemoryNV) (GLsizei size, GLfloat readfreq, GLfloat writefreq, GLfloat priority);$/;"	m	struct:__anon1
AlphaFragmentOp1ATI	include/GL/glprocs.h	/^  void (APIENTRY *AlphaFragmentOp1ATI) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);$/;"	m	struct:__anon1
AlphaFragmentOp2ATI	include/GL/glprocs.h	/^  void (APIENTRY *AlphaFragmentOp2ATI) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);$/;"	m	struct:__anon1
AlphaFragmentOp3ATI	include/GL/glprocs.h	/^  void (APIENTRY *AlphaFragmentOp3ATI) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);$/;"	m	struct:__anon1
AngularForce	particles/AngularForce.cpp	/^AngularForce::AngularForce(Particle *p1, Particle *p2, Particle *p3, double angle, double ks, double kd) :$/;"	f	class:AngularForce
AngularForce	particles/AngularForce.h	/^class AngularForce : public Force$/;"	c
ApplyTextureEXT	include/GL/glprocs.h	/^  void (APIENTRY *ApplyTextureEXT) (GLenum mode);$/;"	m	struct:__anon1
AreProgramsResidentNV	include/GL/glprocs.h	/^  GLboolean (APIENTRY *AreProgramsResidentNV) (GLsizei n, const GLuint *programs, GLboolean *residences);$/;"	m	struct:__anon1
AreTexturesResidentEXT	include/GL/glprocs.h	/^  GLboolean (APIENTRY *AreTexturesResidentEXT) (GLsizei n, const GLuint *textures, GLboolean *residences);$/;"	m	struct:__anon1
ArrayElementEXT	include/GL/glprocs.h	/^  void (APIENTRY *ArrayElementEXT) (GLint i);$/;"	m	struct:__anon1
ArrayObjectATI	include/GL/glprocs.h	/^  void (APIENTRY *ArrayObjectATI) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);$/;"	m	struct:__anon1
AssociateImageBufferEventsI3D	include/GL/glprocs.h	/^  BOOL (WINAPI *AssociateImageBufferEventsI3D) (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);$/;"	m	struct:__anon1
AsyncMarkerSGIX	include/GL/glprocs.h	/^  void (APIENTRY *AsyncMarkerSGIX) (GLuint marker);$/;"	m	struct:__anon1
AttachObjectARB	include/GL/glprocs.h	/^  void (APIENTRY *AttachObjectARB) (GLhandleARB containerObj, GLhandleARB obj);$/;"	m	struct:__anon1
BeginFragmentShaderATI	include/GL/glprocs.h	/^  void (APIENTRY *BeginFragmentShaderATI) (void);$/;"	m	struct:__anon1
BeginFrameTrackingI3D	include/GL/glprocs.h	/^  BOOL (WINAPI *BeginFrameTrackingI3D) (void);$/;"	m	struct:__anon1
BeginOcclusionQueryNV	include/GL/glprocs.h	/^  void (APIENTRY *BeginOcclusionQueryNV) (GLuint id);$/;"	m	struct:__anon1
BeginQuery	include/GL/glprocs.h	/^  void (APIENTRY *BeginQuery) (GLenum target, GLuint id);$/;"	m	struct:__anon1
BeginQueryARB	include/GL/glprocs.h	/^  void (APIENTRY *BeginQueryARB) (GLenum target, GLuint id);$/;"	m	struct:__anon1
BeginVertexShaderEXT	include/GL/glprocs.h	/^  void (APIENTRY *BeginVertexShaderEXT) (void);$/;"	m	struct:__anon1
BindAttribLocationARB	include/GL/glprocs.h	/^  void (APIENTRY *BindAttribLocationARB) (GLhandleARB programObj, GLuint index, const GLcharARB *name);$/;"	m	struct:__anon1
BindBuffer	include/GL/glprocs.h	/^  void (APIENTRY *BindBuffer) (GLenum target, GLuint buffer);$/;"	m	struct:__anon1
BindBufferARB	include/GL/glprocs.h	/^  void (APIENTRY *BindBufferARB) (GLenum target, GLuint buffer);$/;"	m	struct:__anon1
BindDisplayColorTableEXT	include/GL/glprocs.h	/^  GLboolean (WINAPI *BindDisplayColorTableEXT) (GLushort id);$/;"	m	struct:__anon1
BindFragmentShaderATI	include/GL/glprocs.h	/^  void (APIENTRY *BindFragmentShaderATI) (GLuint id);$/;"	m	struct:__anon1
BindLightParameterEXT	include/GL/glprocs.h	/^  GLuint (APIENTRY *BindLightParameterEXT) (GLenum light, GLenum value);$/;"	m	struct:__anon1
BindMaterialParameterEXT	include/GL/glprocs.h	/^  GLuint (APIENTRY *BindMaterialParameterEXT) (GLenum face, GLenum value);$/;"	m	struct:__anon1
BindParameterEXT	include/GL/glprocs.h	/^  GLuint (APIENTRY *BindParameterEXT) (GLenum value);$/;"	m	struct:__anon1
BindProgramARB	include/GL/glprocs.h	/^  void (APIENTRY *BindProgramARB) (GLenum target, GLuint program);$/;"	m	struct:__anon1
BindProgramNV	include/GL/glprocs.h	/^  void (APIENTRY *BindProgramNV) (GLenum target, GLuint id);$/;"	m	struct:__anon1
BindTexGenParameterEXT	include/GL/glprocs.h	/^  GLuint (APIENTRY *BindTexGenParameterEXT) (GLenum unit, GLenum coord, GLenum value);$/;"	m	struct:__anon1
BindTexImageARB	include/GL/glprocs.h	/^  BOOL (WINAPI *BindTexImageARB) (HPBUFFERARB hPbuffer, int iBuffer);$/;"	m	struct:__anon1
BindTextureEXT	include/GL/glprocs.h	/^  void (APIENTRY *BindTextureEXT) (GLenum target, GLuint texture);$/;"	m	struct:__anon1
BindTextureUnitParameterEXT	include/GL/glprocs.h	/^  GLuint (APIENTRY *BindTextureUnitParameterEXT) (GLenum unit, GLenum value);$/;"	m	struct:__anon1
BindVertexArrayAPPLE	include/GL/glprocs.h	/^  void (APIENTRY *BindVertexArrayAPPLE) (GLuint array);$/;"	m	struct:__anon1
BindVertexShaderEXT	include/GL/glprocs.h	/^  void (APIENTRY *BindVertexShaderEXT) (GLuint id);$/;"	m	struct:__anon1
Binormal3bEXT	include/GL/glprocs.h	/^  void (APIENTRY *Binormal3bEXT) (GLbyte bx, GLbyte by, GLbyte bz);$/;"	m	struct:__anon1
Binormal3bvEXT	include/GL/glprocs.h	/^  void (APIENTRY *Binormal3bvEXT) (const GLbyte *v);$/;"	m	struct:__anon1
Binormal3dEXT	include/GL/glprocs.h	/^  void (APIENTRY *Binormal3dEXT) (GLdouble bx, GLdouble by, GLdouble bz);$/;"	m	struct:__anon1
Binormal3dvEXT	include/GL/glprocs.h	/^  void (APIENTRY *Binormal3dvEXT) (const GLdouble *v);$/;"	m	struct:__anon1
Binormal3fEXT	include/GL/glprocs.h	/^  void (APIENTRY *Binormal3fEXT) (GLfloat bx, GLfloat by, GLfloat bz);$/;"	m	struct:__anon1
Binormal3fvEXT	include/GL/glprocs.h	/^  void (APIENTRY *Binormal3fvEXT) (const GLfloat *v);$/;"	m	struct:__anon1
Binormal3iEXT	include/GL/glprocs.h	/^  void (APIENTRY *Binormal3iEXT) (GLint bx, GLint by, GLint bz);$/;"	m	struct:__anon1
Binormal3ivEXT	include/GL/glprocs.h	/^  void (APIENTRY *Binormal3ivEXT) (const GLint *v);$/;"	m	struct:__anon1
Binormal3sEXT	include/GL/glprocs.h	/^  void (APIENTRY *Binormal3sEXT) (GLshort bx, GLshort by, GLshort bz);$/;"	m	struct:__anon1
Binormal3svEXT	include/GL/glprocs.h	/^  void (APIENTRY *Binormal3svEXT) (const GLshort *v);$/;"	m	struct:__anon1
BinormalPointerEXT	include/GL/glprocs.h	/^  void (APIENTRY *BinormalPointerEXT) (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	m	struct:__anon1
BlendColor	include/GL/glprocs.h	/^  void (APIENTRY *BlendColor) (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);$/;"	m	struct:__anon1
BlendColorEXT	include/GL/glprocs.h	/^  void (APIENTRY *BlendColorEXT) (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);$/;"	m	struct:__anon1
BlendEquation	include/GL/glprocs.h	/^  void (APIENTRY *BlendEquation) (GLenum mode);$/;"	m	struct:__anon1
BlendEquationEXT	include/GL/glprocs.h	/^  void (APIENTRY *BlendEquationEXT) (GLenum mode);$/;"	m	struct:__anon1
BlendEquationSeparateEXT	include/GL/glprocs.h	/^  void (APIENTRY *BlendEquationSeparateEXT) (GLenum modeRGB, GLenum modeAlpha);$/;"	m	struct:__anon1
BlendFuncSeparate	include/GL/glprocs.h	/^  void (APIENTRY *BlendFuncSeparate) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	m	struct:__anon1
BlendFuncSeparateEXT	include/GL/glprocs.h	/^  void (APIENTRY *BlendFuncSeparateEXT) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	m	struct:__anon1
BlendFuncSeparateINGR	include/GL/glprocs.h	/^  void (APIENTRY *BlendFuncSeparateINGR) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	m	struct:__anon1
BufferData	include/GL/glprocs.h	/^  void (APIENTRY *BufferData) (GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage);$/;"	m	struct:__anon1
BufferDataARB	include/GL/glprocs.h	/^  void (APIENTRY *BufferDataARB) (GLenum target, GLsizeiptrARB size, const GLvoid *data, GLenum usage);$/;"	m	struct:__anon1
BufferSubData	include/GL/glprocs.h	/^  void (APIENTRY *BufferSubData) (GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data);$/;"	m	struct:__anon1
BufferSubDataARB	include/GL/glprocs.h	/^  void (APIENTRY *BufferSubDataARB) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, const GLvoid *data);$/;"	m	struct:__anon1
Byte	include/zconf.h	/^typedef unsigned char  Byte;  \/* 8 bits *\/$/;"	t
Byte	include/zconf.h	50;"	d
Bytef	include/zconf.h	/^   typedef Byte  FAR Bytef;$/;"	t
Bytef	include/zconf.h	268;"	d
Bytef	include/zconf.h	53;"	d
CALLBACK	include/GL/glut.h	153;"	d
CALLBACK	include/GL/glut.h	32;"	d
CALLBACK	include/GL/glut.h	34;"	d
CHECK	include/pngconf.h	1430;"	d
CODE_CONSTRAINTSOLVER_H	particles/ConstraintSolver.h	7;"	d
CODE_MULTIPLY_H	particles/Multiply.h	6;"	d
CREATE_DIM	ScalarField.cpp	6;"	d	file:
CREATE_DIM	VectorField.cpp	9;"	d	file:
CREATE_DIM1	ScalarField.cpp	4;"	d	file:
CREATE_DIM1	VectorField.cpp	7;"	d	file:
CREATE_DIM2	ScalarField.cpp	5;"	d	file:
CREATE_DIM2	VectorField.cpp	8;"	d	file:
CVT_PTR	include/pngconf.h	1432;"	d
CVT_PTR	include/pngconf.h	1440;"	d
CVT_PTR_NOCHECK	include/pngconf.h	1433;"	d
CVT_PTR_NOCHECK	include/pngconf.h	1441;"	d
CXX	Makefile	/^CXX = g++$/;"	m
CXX	particles/Makefile	/^CXX = g++$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS = -g -O2 -Wall -Wno-sign-compare -Iinclude -DHAVE_CONFIG_H -g$/;"	m
CXXFLAGS	particles/Makefile	/^CXXFLAGS = -O2 -Wall -Wno-sign-compare -Iinclude -DHAVE_CONFIG_H -g$/;"	m
CalcForces	particles/Solver.cpp	/^void CalcForces(std::vector< Particle * > pVector, std::vector< Force * > fVector, std::vector< Constraint * > constraints) {$/;"	f
ChoosePixelFormatARB	include/GL/glprocs.h	/^  BOOL (WINAPI *ChoosePixelFormatARB) (HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats);$/;"	m	struct:__anon1
ChoosePixelFormatEXT	include/GL/glprocs.h	/^  BOOL (WINAPI *ChoosePixelFormatEXT) (HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats);$/;"	m	struct:__anon1
CircularWireConstraint	particles/CircularWireConstraint.cpp	/^CircularWireConstraint::CircularWireConstraint(Particle *p, const Vec2f &center, const double radius,$/;"	f	class:CircularWireConstraint
CircularWireConstraint	particles/CircularWireConstraint.h	/^class CircularWireConstraint : public Constraint {$/;"	c
ClientActiveTexture	include/GL/glprocs.h	/^  void (APIENTRY *ClientActiveTexture) (GLenum texture);$/;"	m	struct:__anon1
ClientActiveTextureARB	include/GL/glprocs.h	/^  void (APIENTRY *ClientActiveTextureARB) (GLenum texture);$/;"	m	struct:__anon1
ClientActiveVertexStreamATI	include/GL/glprocs.h	/^  void (APIENTRY *ClientActiveVertexStreamATI) (GLenum stream);$/;"	m	struct:__anon1
Color3fVertex3fSUN	include/GL/glprocs.h	/^  void (APIENTRY *Color3fVertex3fSUN) (GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	m	struct:__anon1
Color3fVertex3fvSUN	include/GL/glprocs.h	/^  void (APIENTRY *Color3fVertex3fvSUN) (const GLfloat *c, const GLfloat *v);$/;"	m	struct:__anon1
Color3hNV	include/GL/glprocs.h	/^  void (APIENTRY *Color3hNV) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	m	struct:__anon1
Color3hvNV	include/GL/glprocs.h	/^  void (APIENTRY *Color3hvNV) (const GLhalfNV *v);$/;"	m	struct:__anon1
Color4fNormal3fVertex3fSUN	include/GL/glprocs.h	/^  void (APIENTRY *Color4fNormal3fVertex3fSUN) (GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	m	struct:__anon1
Color4fNormal3fVertex3fvSUN	include/GL/glprocs.h	/^  void (APIENTRY *Color4fNormal3fVertex3fvSUN) (const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	m	struct:__anon1
Color4hNV	include/GL/glprocs.h	/^  void (APIENTRY *Color4hNV) (GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);$/;"	m	struct:__anon1
Color4hvNV	include/GL/glprocs.h	/^  void (APIENTRY *Color4hvNV) (const GLhalfNV *v);$/;"	m	struct:__anon1
Color4ubVertex2fSUN	include/GL/glprocs.h	/^  void (APIENTRY *Color4ubVertex2fSUN) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);$/;"	m	struct:__anon1
Color4ubVertex2fvSUN	include/GL/glprocs.h	/^  void (APIENTRY *Color4ubVertex2fvSUN) (const GLubyte *c, const GLfloat *v);$/;"	m	struct:__anon1
Color4ubVertex3fSUN	include/GL/glprocs.h	/^  void (APIENTRY *Color4ubVertex3fSUN) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	m	struct:__anon1
Color4ubVertex3fvSUN	include/GL/glprocs.h	/^  void (APIENTRY *Color4ubVertex3fvSUN) (const GLubyte *c, const GLfloat *v);$/;"	m	struct:__anon1
ColorFragmentOp1ATI	include/GL/glprocs.h	/^  void (APIENTRY *ColorFragmentOp1ATI) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);$/;"	m	struct:__anon1
ColorFragmentOp2ATI	include/GL/glprocs.h	/^  void (APIENTRY *ColorFragmentOp2ATI) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);$/;"	m	struct:__anon1
ColorFragmentOp3ATI	include/GL/glprocs.h	/^  void (APIENTRY *ColorFragmentOp3ATI) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);$/;"	m	struct:__anon1
ColorPointerEXT	include/GL/glprocs.h	/^  void (APIENTRY *ColorPointerEXT) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	m	struct:__anon1
ColorPointerListIBM	include/GL/glprocs.h	/^  void (APIENTRY *ColorPointerListIBM) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	m	struct:__anon1
ColorPointervINTEL	include/GL/glprocs.h	/^  void (APIENTRY *ColorPointervINTEL) (GLint size, GLenum type, const GLvoid* *pointer);$/;"	m	struct:__anon1
ColorSubTable	include/GL/glprocs.h	/^  void (APIENTRY *ColorSubTable) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);$/;"	m	struct:__anon1
ColorSubTableEXT	include/GL/glprocs.h	/^  void (APIENTRY *ColorSubTableEXT) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);$/;"	m	struct:__anon1
ColorTable	include/GL/glprocs.h	/^  void (APIENTRY *ColorTable) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);$/;"	m	struct:__anon1
ColorTableEXT	include/GL/glprocs.h	/^  void (APIENTRY *ColorTableEXT) (GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);$/;"	m	struct:__anon1
ColorTableParameterfv	include/GL/glprocs.h	/^  void (APIENTRY *ColorTableParameterfv) (GLenum target, GLenum pname, const GLfloat *params);$/;"	m	struct:__anon1
ColorTableParameterfvSGI	include/GL/glprocs.h	/^  void (APIENTRY *ColorTableParameterfvSGI) (GLenum target, GLenum pname, const GLfloat *params);$/;"	m	struct:__anon1
ColorTableParameteriv	include/GL/glprocs.h	/^  void (APIENTRY *ColorTableParameteriv) (GLenum target, GLenum pname, const GLint *params);$/;"	m	struct:__anon1
ColorTableParameterivSGI	include/GL/glprocs.h	/^  void (APIENTRY *ColorTableParameterivSGI) (GLenum target, GLenum pname, const GLint *params);$/;"	m	struct:__anon1
ColorTableSGI	include/GL/glprocs.h	/^  void (APIENTRY *ColorTableSGI) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);$/;"	m	struct:__anon1
CombinerInputNV	include/GL/glprocs.h	/^  void (APIENTRY *CombinerInputNV) (GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);$/;"	m	struct:__anon1
CombinerOutputNV	include/GL/glprocs.h	/^  void (APIENTRY *CombinerOutputNV) (GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);$/;"	m	struct:__anon1
CombinerParameterfNV	include/GL/glprocs.h	/^  void (APIENTRY *CombinerParameterfNV) (GLenum pname, GLfloat param);$/;"	m	struct:__anon1
CombinerParameterfvNV	include/GL/glprocs.h	/^  void (APIENTRY *CombinerParameterfvNV) (GLenum pname, const GLfloat *params);$/;"	m	struct:__anon1
CombinerParameteriNV	include/GL/glprocs.h	/^  void (APIENTRY *CombinerParameteriNV) (GLenum pname, GLint param);$/;"	m	struct:__anon1
CombinerParameterivNV	include/GL/glprocs.h	/^  void (APIENTRY *CombinerParameterivNV) (GLenum pname, const GLint *params);$/;"	m	struct:__anon1
CombinerStageParameterfvNV	include/GL/glprocs.h	/^  void (APIENTRY *CombinerStageParameterfvNV) (GLenum stage, GLenum pname, const GLfloat *params);$/;"	m	struct:__anon1
CompileShaderARB	include/GL/glprocs.h	/^  void (APIENTRY *CompileShaderARB) (GLhandleARB shaderObj);$/;"	m	struct:__anon1
CompressedTexImage1D	include/GL/glprocs.h	/^  void (APIENTRY *CompressedTexImage1D) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	m	struct:__anon1
CompressedTexImage1DARB	include/GL/glprocs.h	/^  void (APIENTRY *CompressedTexImage1DARB) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	m	struct:__anon1
CompressedTexImage2D	include/GL/glprocs.h	/^  void (APIENTRY *CompressedTexImage2D) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	m	struct:__anon1
CompressedTexImage2DARB	include/GL/glprocs.h	/^  void (APIENTRY *CompressedTexImage2DARB) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	m	struct:__anon1
CompressedTexImage3D	include/GL/glprocs.h	/^  void (APIENTRY *CompressedTexImage3D) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	m	struct:__anon1
CompressedTexImage3DARB	include/GL/glprocs.h	/^  void (APIENTRY *CompressedTexImage3DARB) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	m	struct:__anon1
CompressedTexSubImage1D	include/GL/glprocs.h	/^  void (APIENTRY *CompressedTexSubImage1D) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	m	struct:__anon1
CompressedTexSubImage1DARB	include/GL/glprocs.h	/^  void (APIENTRY *CompressedTexSubImage1DARB) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	m	struct:__anon1
CompressedTexSubImage2D	include/GL/glprocs.h	/^  void (APIENTRY *CompressedTexSubImage2D) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	m	struct:__anon1
CompressedTexSubImage2DARB	include/GL/glprocs.h	/^  void (APIENTRY *CompressedTexSubImage2DARB) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	m	struct:__anon1
CompressedTexSubImage3D	include/GL/glprocs.h	/^  void (APIENTRY *CompressedTexSubImage3D) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	m	struct:__anon1
CompressedTexSubImage3DARB	include/GL/glprocs.h	/^  void (APIENTRY *CompressedTexSubImage3DARB) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	m	struct:__anon1
ConjGrad	particles/linearSolver.cpp	/^double ConjGrad(int n, implicitMatrix *A, double x[], double b[],$/;"	f
Constraint	particles/Constraint.h	/^class Constraint {$/;"	c
ConvolutionFilter1D	include/GL/glprocs.h	/^  void (APIENTRY *ConvolutionFilter1D) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);$/;"	m	struct:__anon1
ConvolutionFilter1DEXT	include/GL/glprocs.h	/^  void (APIENTRY *ConvolutionFilter1DEXT) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);$/;"	m	struct:__anon1
ConvolutionFilter2D	include/GL/glprocs.h	/^  void (APIENTRY *ConvolutionFilter2D) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);$/;"	m	struct:__anon1
ConvolutionFilter2DEXT	include/GL/glprocs.h	/^  void (APIENTRY *ConvolutionFilter2DEXT) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);$/;"	m	struct:__anon1
ConvolutionParameterf	include/GL/glprocs.h	/^  void (APIENTRY *ConvolutionParameterf) (GLenum target, GLenum pname, GLfloat params);$/;"	m	struct:__anon1
ConvolutionParameterfEXT	include/GL/glprocs.h	/^  void (APIENTRY *ConvolutionParameterfEXT) (GLenum target, GLenum pname, GLfloat params);$/;"	m	struct:__anon1
ConvolutionParameterfv	include/GL/glprocs.h	/^  void (APIENTRY *ConvolutionParameterfv) (GLenum target, GLenum pname, const GLfloat *params);$/;"	m	struct:__anon1
ConvolutionParameterfvEXT	include/GL/glprocs.h	/^  void (APIENTRY *ConvolutionParameterfvEXT) (GLenum target, GLenum pname, const GLfloat *params);$/;"	m	struct:__anon1
ConvolutionParameteri	include/GL/glprocs.h	/^  void (APIENTRY *ConvolutionParameteri) (GLenum target, GLenum pname, GLint params);$/;"	m	struct:__anon1
ConvolutionParameteriEXT	include/GL/glprocs.h	/^  void (APIENTRY *ConvolutionParameteriEXT) (GLenum target, GLenum pname, GLint params);$/;"	m	struct:__anon1
ConvolutionParameteriv	include/GL/glprocs.h	/^  void (APIENTRY *ConvolutionParameteriv) (GLenum target, GLenum pname, const GLint *params);$/;"	m	struct:__anon1
ConvolutionParameterivEXT	include/GL/glprocs.h	/^  void (APIENTRY *ConvolutionParameterivEXT) (GLenum target, GLenum pname, const GLint *params);$/;"	m	struct:__anon1
CopyColorSubTable	include/GL/glprocs.h	/^  void (APIENTRY *CopyColorSubTable) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);$/;"	m	struct:__anon1
CopyColorSubTableEXT	include/GL/glprocs.h	/^  void (APIENTRY *CopyColorSubTableEXT) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);$/;"	m	struct:__anon1
CopyColorTable	include/GL/glprocs.h	/^  void (APIENTRY *CopyColorTable) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	m	struct:__anon1
CopyColorTableSGI	include/GL/glprocs.h	/^  void (APIENTRY *CopyColorTableSGI) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	m	struct:__anon1
CopyConvolutionFilter1D	include/GL/glprocs.h	/^  void (APIENTRY *CopyConvolutionFilter1D) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	m	struct:__anon1
CopyConvolutionFilter1DEXT	include/GL/glprocs.h	/^  void (APIENTRY *CopyConvolutionFilter1DEXT) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	m	struct:__anon1
CopyConvolutionFilter2D	include/GL/glprocs.h	/^  void (APIENTRY *CopyConvolutionFilter2D) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	m	struct:__anon1
CopyConvolutionFilter2DEXT	include/GL/glprocs.h	/^  void (APIENTRY *CopyConvolutionFilter2DEXT) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	m	struct:__anon1
CopyTexImage1DEXT	include/GL/glprocs.h	/^  void (APIENTRY *CopyTexImage1DEXT) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	m	struct:__anon1
CopyTexImage2DEXT	include/GL/glprocs.h	/^  void (APIENTRY *CopyTexImage2DEXT) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	m	struct:__anon1
CopyTexSubImage1DEXT	include/GL/glprocs.h	/^  void (APIENTRY *CopyTexSubImage1DEXT) (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	m	struct:__anon1
CopyTexSubImage2DEXT	include/GL/glprocs.h	/^  void (APIENTRY *CopyTexSubImage2DEXT) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	m	struct:__anon1
CopyTexSubImage3D	include/GL/glprocs.h	/^  void (APIENTRY *CopyTexSubImage3D) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	m	struct:__anon1
CopyTexSubImage3DEXT	include/GL/glprocs.h	/^  void (APIENTRY *CopyTexSubImage3DEXT) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	m	struct:__anon1
Create	include/Singleton.h	/^	static inline void Create()$/;"	f	class:Singleton
CreateBufferRegionARB	include/GL/glprocs.h	/^  HANDLE (WINAPI *CreateBufferRegionARB) (HDC hDC, int iLayerPlane, UINT uType);$/;"	m	struct:__anon1
CreateDisplayColorTableEXT	include/GL/glprocs.h	/^  GLboolean (WINAPI *CreateDisplayColorTableEXT) (GLushort id);$/;"	m	struct:__anon1
CreateImageBufferI3D	include/GL/glprocs.h	/^  LPVOID (WINAPI *CreateImageBufferI3D) (HDC hDC, DWORD dwSize, UINT uFlags);$/;"	m	struct:__anon1
CreatePbufferARB	include/GL/glprocs.h	/^  HPBUFFERARB (WINAPI *CreatePbufferARB) (HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList);$/;"	m	struct:__anon1
CreatePbufferEXT	include/GL/glprocs.h	/^  HPBUFFEREXT (WINAPI *CreatePbufferEXT) (HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList);$/;"	m	struct:__anon1
CreateProgramObjectARB	include/GL/glprocs.h	/^  GLhandleARB (APIENTRY *CreateProgramObjectARB) (void);$/;"	m	struct:__anon1
CreateShaderObjectARB	include/GL/glprocs.h	/^  GLhandleARB (APIENTRY *CreateShaderObjectARB) (GLenum shaderType);$/;"	m	struct:__anon1
CullParameterdvEXT	include/GL/glprocs.h	/^  void (APIENTRY *CullParameterdvEXT) (GLenum pname, GLdouble *params);$/;"	m	struct:__anon1
CullParameterfvEXT	include/GL/glprocs.h	/^  void (APIENTRY *CullParameterfvEXT) (GLenum pname, GLfloat *params);$/;"	m	struct:__anon1
CurrentPaletteMatrixARB	include/GL/glprocs.h	/^  void (APIENTRY *CurrentPaletteMatrixARB) (GLint index);$/;"	m	struct:__anon1
DAMP	particles/Solver.cpp	21;"	d	file:
DeformSGIX	include/GL/glprocs.h	/^  void (APIENTRY *DeformSGIX) (GLbitfield mask);$/;"	m	struct:__anon1
DeformationMap3dSGIX	include/GL/glprocs.h	/^  void (APIENTRY *DeformationMap3dSGIX) (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points);$/;"	m	struct:__anon1
DeformationMap3fSGIX	include/GL/glprocs.h	/^  void (APIENTRY *DeformationMap3fSGIX) (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points);$/;"	m	struct:__anon1
DeleteAsyncMarkersSGIX	include/GL/glprocs.h	/^  void (APIENTRY *DeleteAsyncMarkersSGIX) (GLuint marker, GLsizei range);$/;"	m	struct:__anon1
DeleteBufferRegionARB	include/GL/glprocs.h	/^  VOID (WINAPI *DeleteBufferRegionARB) (HANDLE hRegion);$/;"	m	struct:__anon1
DeleteBuffers	include/GL/glprocs.h	/^  void (APIENTRY *DeleteBuffers) (GLsizei n, const GLuint *buffers);$/;"	m	struct:__anon1
DeleteBuffersARB	include/GL/glprocs.h	/^  void (APIENTRY *DeleteBuffersARB) (GLsizei n, const GLuint *buffers);$/;"	m	struct:__anon1
DeleteFencesAPPLE	include/GL/glprocs.h	/^  void (APIENTRY *DeleteFencesAPPLE) (GLsizei n, const GLuint *fences);$/;"	m	struct:__anon1
DeleteFencesNV	include/GL/glprocs.h	/^  void (APIENTRY *DeleteFencesNV) (GLsizei n, const GLuint *fences);$/;"	m	struct:__anon1
DeleteFragmentShaderATI	include/GL/glprocs.h	/^  void (APIENTRY *DeleteFragmentShaderATI) (GLuint id);$/;"	m	struct:__anon1
DeleteObjectARB	include/GL/glprocs.h	/^  void (APIENTRY *DeleteObjectARB) (GLhandleARB obj);$/;"	m	struct:__anon1
DeleteOcclusionQueriesNV	include/GL/glprocs.h	/^  void (APIENTRY *DeleteOcclusionQueriesNV) (GLsizei n, const GLuint *ids);$/;"	m	struct:__anon1
DeleteProgramsARB	include/GL/glprocs.h	/^  void (APIENTRY *DeleteProgramsARB) (GLsizei n, const GLuint *programs);$/;"	m	struct:__anon1
DeleteProgramsNV	include/GL/glprocs.h	/^  void (APIENTRY *DeleteProgramsNV) (GLsizei n, const GLuint *programs);$/;"	m	struct:__anon1
DeleteQueries	include/GL/glprocs.h	/^  void (APIENTRY *DeleteQueries) (GLsizei n, const GLuint *ids);$/;"	m	struct:__anon1
DeleteQueriesARB	include/GL/glprocs.h	/^  void (APIENTRY *DeleteQueriesARB) (GLsizei n, const GLuint *ids);$/;"	m	struct:__anon1
DeleteTexturesEXT	include/GL/glprocs.h	/^  void (APIENTRY *DeleteTexturesEXT) (GLsizei n, const GLuint *textures);$/;"	m	struct:__anon1
DeleteVertexArraysAPPLE	include/GL/glprocs.h	/^  void (APIENTRY *DeleteVertexArraysAPPLE) (GLsizei n, const GLuint *arrays);$/;"	m	struct:__anon1
DeleteVertexShaderEXT	include/GL/glprocs.h	/^  void (APIENTRY *DeleteVertexShaderEXT) (GLuint id);$/;"	m	struct:__anon1
DensityField	StableFluids.cpp	/^static ScalarField *DensityField, *PrevDensityField;$/;"	v	file:
DepthBoundsEXT	include/GL/glprocs.h	/^  void (APIENTRY *DepthBoundsEXT) (GLclampd zmin, GLclampd zmax);$/;"	m	struct:__anon1
DestroyDisplayColorTableEXT	include/GL/glprocs.h	/^  VOID (WINAPI *DestroyDisplayColorTableEXT) (GLushort id);$/;"	m	struct:__anon1
DestroyImageBufferI3D	include/GL/glprocs.h	/^  BOOL (WINAPI *DestroyImageBufferI3D) (HDC hDC, LPVOID pAddress);$/;"	m	struct:__anon1
DestroyPbufferARB	include/GL/glprocs.h	/^  BOOL (WINAPI *DestroyPbufferARB) (HPBUFFERARB hPbuffer);$/;"	m	struct:__anon1
DestroyPbufferEXT	include/GL/glprocs.h	/^  BOOL (WINAPI *DestroyPbufferEXT) (HPBUFFEREXT hPbuffer);$/;"	m	struct:__anon1
DetachObjectARB	include/GL/glprocs.h	/^  void (APIENTRY *DetachObjectARB) (GLhandleARB containerObj, GLhandleARB attachedObj);$/;"	m	struct:__anon1
DetailTexFuncSGIS	include/GL/glprocs.h	/^  void (APIENTRY *DetailTexFuncSGIS) (GLenum target, GLsizei n, const GLfloat *points);$/;"	m	struct:__anon1
DisableFrameLockI3D	include/GL/glprocs.h	/^  BOOL (WINAPI *DisableFrameLockI3D) (void);$/;"	m	struct:__anon1
DisableGenlockI3D	include/GL/glprocs.h	/^  BOOL (WINAPI *DisableGenlockI3D) (HDC hDC);$/;"	m	struct:__anon1
DisableVariantClientStateEXT	include/GL/glprocs.h	/^  void (APIENTRY *DisableVariantClientStateEXT) (GLuint id);$/;"	m	struct:__anon1
DisableVertexAttribArrayARB	include/GL/glprocs.h	/^  void (APIENTRY *DisableVertexAttribArrayARB) (GLuint index);$/;"	m	struct:__anon1
Drag	particles/Gravity.cpp	/^Drag::Drag(Particle *p, float drag) :$/;"	f	class:Drag
Drag	particles/Gravity.h	/^class Drag : public Force $/;"	c
DrawArraysEXT	include/GL/glprocs.h	/^  void (APIENTRY *DrawArraysEXT) (GLenum mode, GLint first, GLsizei count);$/;"	m	struct:__anon1
DrawBuffersATI	include/GL/glprocs.h	/^  void (APIENTRY *DrawBuffersATI) (GLsizei n, const GLenum *bufs);$/;"	m	struct:__anon1
DrawElementArrayAPPLE	include/GL/glprocs.h	/^  void (APIENTRY *DrawElementArrayAPPLE) (GLenum mode, GLint first, GLsizei count);$/;"	m	struct:__anon1
DrawElementArrayATI	include/GL/glprocs.h	/^  void (APIENTRY *DrawElementArrayATI) (GLenum mode, GLsizei count);$/;"	m	struct:__anon1
DrawMeshArraysSUN	include/GL/glprocs.h	/^  void (APIENTRY *DrawMeshArraysSUN) (GLenum mode, GLint first, GLsizei count, GLsizei width);$/;"	m	struct:__anon1
DrawRangeElementArrayAPPLE	include/GL/glprocs.h	/^  void (APIENTRY *DrawRangeElementArrayAPPLE) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);$/;"	m	struct:__anon1
DrawRangeElementArrayATI	include/GL/glprocs.h	/^  void (APIENTRY *DrawRangeElementArrayATI) (GLenum mode, GLuint start, GLuint end, GLsizei count);$/;"	m	struct:__anon1
DrawRangeElements	include/GL/glprocs.h	/^  void (APIENTRY *DrawRangeElements) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);$/;"	m	struct:__anon1
DrawRangeElementsEXT	include/GL/glprocs.h	/^  void (APIENTRY *DrawRangeElementsEXT) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);$/;"	m	struct:__anon1
ENDITER_DIM	FieldToolbox.cpp	5;"	d	file:
ENDITER_DIM	ScalarField.cpp	9;"	d	file:
ENDITER_DIM	VectorField.cpp	12;"	d	file:
ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB	include/GL/wglext.h	128;"	d
ERROR_INVALID_PIXEL_TYPE_ARB	include/GL/wglext.h	127;"	d
ERROR_INVALID_PIXEL_TYPE_EXT	include/GL/wglext.h	179;"	d
EdgeFlagPointerEXT	include/GL/glprocs.h	/^  void (APIENTRY *EdgeFlagPointerEXT) (GLsizei stride, GLsizei count, const GLboolean *pointer);$/;"	m	struct:__anon1
EdgeFlagPointerListIBM	include/GL/glprocs.h	/^  void (APIENTRY *EdgeFlagPointerListIBM) (GLint stride, const GLboolean* *pointer, GLint ptrstride);$/;"	m	struct:__anon1
ElementPointerAPPLE	include/GL/glprocs.h	/^  void (APIENTRY *ElementPointerAPPLE) (GLenum type, const GLvoid *pointer);$/;"	m	struct:__anon1
ElementPointerATI	include/GL/glprocs.h	/^  void (APIENTRY *ElementPointerATI) (GLenum type, const GLvoid *pointer);$/;"	m	struct:__anon1
EnableFrameLockI3D	include/GL/glprocs.h	/^  BOOL (WINAPI *EnableFrameLockI3D) (void);$/;"	m	struct:__anon1
EnableGenlockI3D	include/GL/glprocs.h	/^  BOOL (WINAPI *EnableGenlockI3D) (HDC hDC);$/;"	m	struct:__anon1
EnableVariantClientStateEXT	include/GL/glprocs.h	/^  void (APIENTRY *EnableVariantClientStateEXT) (GLuint id);$/;"	m	struct:__anon1
EnableVertexAttribArrayARB	include/GL/glprocs.h	/^  void (APIENTRY *EnableVertexAttribArrayARB) (GLuint index);$/;"	m	struct:__anon1
EndFragmentShaderATI	include/GL/glprocs.h	/^  void (APIENTRY *EndFragmentShaderATI) (void);$/;"	m	struct:__anon1
EndFrameTrackingI3D	include/GL/glprocs.h	/^  BOOL (WINAPI *EndFrameTrackingI3D) (void);$/;"	m	struct:__anon1
EndOcclusionQueryNV	include/GL/glprocs.h	/^  void (APIENTRY *EndOcclusionQueryNV) (void);$/;"	m	struct:__anon1
EndQuery	include/GL/glprocs.h	/^  void (APIENTRY *EndQuery) (GLenum target);$/;"	m	struct:__anon1
EndQueryARB	include/GL/glprocs.h	/^  void (APIENTRY *EndQueryARB) (GLenum target);$/;"	m	struct:__anon1
EndVertexShaderEXT	include/GL/glprocs.h	/^  void (APIENTRY *EndVertexShaderEXT) (void);$/;"	m	struct:__anon1
Euler	particles/Solver.cpp	/^void Euler(std::vector< Particle * > pVector, std::vector< Force * > fVector, float dt, std::vector< Constraint * > constraints) {$/;"	f
EvalMapsNV	include/GL/glprocs.h	/^  void (APIENTRY *EvalMapsNV) (GLenum target, GLenum mode);$/;"	m	struct:__anon1
ExecuteProgramNV	include/GL/glprocs.h	/^  void (APIENTRY *ExecuteProgramNV) (GLenum target, GLuint id, const GLfloat *params);$/;"	m	struct:__anon1
ExtractComponentEXT	include/GL/glprocs.h	/^  void (APIENTRY *ExtractComponentEXT) (GLuint res, GLuint src, GLuint num);$/;"	m	struct:__anon1
FAR	include/pngconf.h	1154;"	d
FAR	include/pngconf.h	1183;"	d
FAR	include/zconf.h	185;"	d
FAR	include/zconf.h	187;"	d
FAR	include/zconf.h	194;"	d
FAR	include/zconf.h	196;"	d
FAR	include/zconf.h	220;"	d
FAR	include/zconf.h	257;"	d
FAR	include/zconf.h	311;"	d
FARDATA	include/pngconf.h	1176;"	d
FARDATA	include/pngconf.h	1188;"	d
FEQ	include/gfx/gfx.h	/^inline bool  FEQ(double a, double b, double e=FEQ_EPS)  {return fabs(a-b)<e;}$/;"	f	namespace:gfx
FEQ2	include/gfx/gfx.h	/^inline bool FEQ2(double a, double b, double e=FEQ_EPS2) {return fabs(a-b)<e;}$/;"	f	namespace:gfx
FEQ_EPS	include/gfx/gfx.h	/^const double FEQ_EPS = 1e-6;$/;"	m	namespace:gfx
FEQ_EPS2	include/gfx/gfx.h	/^const double FEQ_EPS2 = 1e-12;$/;"	m	namespace:gfx
FieldToolbox	FieldToolbox.cpp	/^FieldToolbox::FieldToolbox(void) {$/;"	f	class:FieldToolbox
FieldToolbox	FieldToolbox.h	/^class FieldToolbox : public Singleton<FieldToolbox>$/;"	c
FinalCombinerInputNV	include/GL/glprocs.h	/^  void (APIENTRY *FinalCombinerInputNV) (GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);$/;"	m	struct:__anon1
FinishAsyncSGIX	include/GL/glprocs.h	/^  GLint (APIENTRY *FinishAsyncSGIX) (GLuint *markerp);$/;"	m	struct:__anon1
FinishFenceAPPLE	include/GL/glprocs.h	/^  void (APIENTRY *FinishFenceAPPLE) (GLuint fence);$/;"	m	struct:__anon1
FinishFenceNV	include/GL/glprocs.h	/^  void (APIENTRY *FinishFenceNV) (GLuint fence);$/;"	m	struct:__anon1
FinishObjectAPPLE	include/GL/glprocs.h	/^  void (APIENTRY *FinishObjectAPPLE) (GLenum object, GLint name);$/;"	m	struct:__anon1
FinishTextureSUNX	include/GL/glprocs.h	/^  void (APIENTRY *FinishTextureSUNX) (void);$/;"	m	struct:__anon1
FlushPixelDataRangeNV	include/GL/glprocs.h	/^  void (APIENTRY *FlushPixelDataRangeNV) (GLenum target);$/;"	m	struct:__anon1
FlushRasterSGIX	include/GL/glprocs.h	/^  void (APIENTRY *FlushRasterSGIX) (void);$/;"	m	struct:__anon1
FlushVertexArrayRangeAPPLE	include/GL/glprocs.h	/^  void (APIENTRY *FlushVertexArrayRangeAPPLE) (GLsizei length, GLvoid *pointer);$/;"	m	struct:__anon1
FlushVertexArrayRangeNV	include/GL/glprocs.h	/^  void (APIENTRY *FlushVertexArrayRangeNV) (void);$/;"	m	struct:__anon1
FogCoordPointer	include/GL/glprocs.h	/^  void (APIENTRY *FogCoordPointer) (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	m	struct:__anon1
FogCoordPointerEXT	include/GL/glprocs.h	/^  void (APIENTRY *FogCoordPointerEXT) (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	m	struct:__anon1
FogCoordPointerListIBM	include/GL/glprocs.h	/^  void (APIENTRY *FogCoordPointerListIBM) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	m	struct:__anon1
FogCoordd	include/GL/glprocs.h	/^  void (APIENTRY *FogCoordd) (GLdouble coord);$/;"	m	struct:__anon1
FogCoorddEXT	include/GL/glprocs.h	/^  void (APIENTRY *FogCoorddEXT) (GLdouble coord);$/;"	m	struct:__anon1
FogCoorddv	include/GL/glprocs.h	/^  void (APIENTRY *FogCoorddv) (const GLdouble *coord);$/;"	m	struct:__anon1
FogCoorddvEXT	include/GL/glprocs.h	/^  void (APIENTRY *FogCoorddvEXT) (const GLdouble *coord);$/;"	m	struct:__anon1
FogCoordf	include/GL/glprocs.h	/^  void (APIENTRY *FogCoordf) (GLfloat coord);$/;"	m	struct:__anon1
FogCoordfEXT	include/GL/glprocs.h	/^  void (APIENTRY *FogCoordfEXT) (GLfloat coord);$/;"	m	struct:__anon1
FogCoordfv	include/GL/glprocs.h	/^  void (APIENTRY *FogCoordfv) (const GLfloat *coord);$/;"	m	struct:__anon1
FogCoordfvEXT	include/GL/glprocs.h	/^  void (APIENTRY *FogCoordfvEXT) (const GLfloat *coord);$/;"	m	struct:__anon1
FogCoordhNV	include/GL/glprocs.h	/^  void (APIENTRY *FogCoordhNV) (GLhalfNV fog);$/;"	m	struct:__anon1
FogCoordhvNV	include/GL/glprocs.h	/^  void (APIENTRY *FogCoordhvNV) (const GLhalfNV *fog);$/;"	m	struct:__anon1
FogFuncSGIS	include/GL/glprocs.h	/^  void (APIENTRY *FogFuncSGIS) (GLsizei n, const GLfloat *points);$/;"	m	struct:__anon1
Force	particles/Force.h	/^class Force$/;"	c
FragmentColorMaterialSGIX	include/GL/glprocs.h	/^  void (APIENTRY *FragmentColorMaterialSGIX) (GLenum face, GLenum mode);$/;"	m	struct:__anon1
FragmentLightModelfSGIX	include/GL/glprocs.h	/^  void (APIENTRY *FragmentLightModelfSGIX) (GLenum pname, GLfloat param);$/;"	m	struct:__anon1
FragmentLightModelfvSGIX	include/GL/glprocs.h	/^  void (APIENTRY *FragmentLightModelfvSGIX) (GLenum pname, const GLfloat *params);$/;"	m	struct:__anon1
FragmentLightModeliSGIX	include/GL/glprocs.h	/^  void (APIENTRY *FragmentLightModeliSGIX) (GLenum pname, GLint param);$/;"	m	struct:__anon1
FragmentLightModelivSGIX	include/GL/glprocs.h	/^  void (APIENTRY *FragmentLightModelivSGIX) (GLenum pname, const GLint *params);$/;"	m	struct:__anon1
FragmentLightfSGIX	include/GL/glprocs.h	/^  void (APIENTRY *FragmentLightfSGIX) (GLenum light, GLenum pname, GLfloat param);$/;"	m	struct:__anon1
FragmentLightfvSGIX	include/GL/glprocs.h	/^  void (APIENTRY *FragmentLightfvSGIX) (GLenum light, GLenum pname, const GLfloat *params);$/;"	m	struct:__anon1
FragmentLightiSGIX	include/GL/glprocs.h	/^  void (APIENTRY *FragmentLightiSGIX) (GLenum light, GLenum pname, GLint param);$/;"	m	struct:__anon1
FragmentLightivSGIX	include/GL/glprocs.h	/^  void (APIENTRY *FragmentLightivSGIX) (GLenum light, GLenum pname, const GLint *params);$/;"	m	struct:__anon1
FragmentMaterialfSGIX	include/GL/glprocs.h	/^  void (APIENTRY *FragmentMaterialfSGIX) (GLenum face, GLenum pname, GLfloat param);$/;"	m	struct:__anon1
FragmentMaterialfvSGIX	include/GL/glprocs.h	/^  void (APIENTRY *FragmentMaterialfvSGIX) (GLenum face, GLenum pname, const GLfloat *params);$/;"	m	struct:__anon1
FragmentMaterialiSGIX	include/GL/glprocs.h	/^  void (APIENTRY *FragmentMaterialiSGIX) (GLenum face, GLenum pname, GLint param);$/;"	m	struct:__anon1
FragmentMaterialivSGIX	include/GL/glprocs.h	/^  void (APIENTRY *FragmentMaterialivSGIX) (GLenum face, GLenum pname, const GLint *params);$/;"	m	struct:__anon1
FrameZoomSGIX	include/GL/glprocs.h	/^  void (APIENTRY *FrameZoomSGIX) (GLint factor);$/;"	m	struct:__anon1
FreeMemoryNV	include/GL/glprocs.h	/^  void (WINAPI *FreeMemoryNV) (void);$/;"	m	struct:__anon1
FreeObjectBufferATI	include/GL/glprocs.h	/^  void (APIENTRY *FreeObjectBufferATI) (GLuint buffer);$/;"	m	struct:__anon1
GFXGEOM3D_INCLUDED	include/gfx/geom3d.h	2;"	d
GFXGEOM4D_INCLUDED	include/gfx/geom4d.h	2;"	d
GFXMAT2_INCLUDED	include/gfx/mat2.h	2;"	d
GFXMAT3_INCLUDED	include/gfx/mat3.h	2;"	d
GFXMAT4_INCLUDED	include/gfx/mat4.h	2;"	d
GFXQUAT_INCLUDED	include/gfx/quat.h	2;"	d
GFXSYMMAT2_INCLUDED	include/gfx/symmat2.h	2;"	d
GFXSYMMAT3_INCLUDED	include/gfx/symmat3.h	2;"	d
GFXSYMMAT4_INCLUDED	include/gfx/symmat4.h	2;"	d
GFXVEC2_INCLUDED	include/gfx/vec2.h	2;"	d
GFXVEC3_INCLUDED	include/gfx/vec3.h	2;"	d
GFXVEC4_INCLUDED	include/gfx/vec4.h	2;"	d
GFX_INCLUDED	include/gfx/gfx.h	2;"	d
GLAPI	include/GL/glext.h	49;"	d
GLAPI	include/GL/wglext.h	49;"	d
GLUTAPI	include/GL/glut.h	123;"	d
GLUTAPI	include/GL/glut.h	126;"	d
GLUTAPI	include/GL/glut.h	128;"	d
GLUTAPI	include/GL/glut.h	155;"	d
GLUTCALLBACK	include/GL/glut.h	133;"	d
GLUTCALLBACK	include/GL/glut.h	156;"	d
GLUT_ACCUM	include/GL/glut.h	232;"	d
GLUT_ACTIVE_ALT	include/GL/glut.h	446;"	d
GLUT_ACTIVE_CTRL	include/GL/glut.h	445;"	d
GLUT_ACTIVE_SHIFT	include/GL/glut.h	444;"	d
GLUT_ALPHA	include/GL/glut.h	233;"	d
GLUT_APIENTRY_DEFINED	include/GL/glut.h	152;"	d
GLUT_APIENTRY_DEFINED	include/GL/glut.h	22;"	d
GLUT_APIENTRY_DEFINED	include/GL/glut.h	697;"	d
GLUT_API_VERSION	include/GL/glut.h	183;"	d
GLUT_BITMAP_8_BY_13	include/GL/glut.h	309;"	d
GLUT_BITMAP_8_BY_13	include/GL/glut.h	337;"	d
GLUT_BITMAP_9_BY_15	include/GL/glut.h	308;"	d
GLUT_BITMAP_9_BY_15	include/GL/glut.h	336;"	d
GLUT_BITMAP_HELVETICA_10	include/GL/glut.h	313;"	d
GLUT_BITMAP_HELVETICA_10	include/GL/glut.h	341;"	d
GLUT_BITMAP_HELVETICA_12	include/GL/glut.h	314;"	d
GLUT_BITMAP_HELVETICA_12	include/GL/glut.h	342;"	d
GLUT_BITMAP_HELVETICA_18	include/GL/glut.h	315;"	d
GLUT_BITMAP_HELVETICA_18	include/GL/glut.h	343;"	d
GLUT_BITMAP_TIMES_ROMAN_10	include/GL/glut.h	310;"	d
GLUT_BITMAP_TIMES_ROMAN_10	include/GL/glut.h	338;"	d
GLUT_BITMAP_TIMES_ROMAN_24	include/GL/glut.h	311;"	d
GLUT_BITMAP_TIMES_ROMAN_24	include/GL/glut.h	339;"	d
GLUT_BLUE	include/GL/glut.h	300;"	d
GLUT_CURSOR_BOTTOM_LEFT_CORNER	include/GL/glut.h	472;"	d
GLUT_CURSOR_BOTTOM_RIGHT_CORNER	include/GL/glut.h	471;"	d
GLUT_CURSOR_BOTTOM_SIDE	include/GL/glut.h	466;"	d
GLUT_CURSOR_CROSSHAIR	include/GL/glut.h	460;"	d
GLUT_CURSOR_CYCLE	include/GL/glut.h	456;"	d
GLUT_CURSOR_DESTROY	include/GL/glut.h	454;"	d
GLUT_CURSOR_FULL_CROSSHAIR	include/GL/glut.h	478;"	d
GLUT_CURSOR_HELP	include/GL/glut.h	455;"	d
GLUT_CURSOR_INFO	include/GL/glut.h	453;"	d
GLUT_CURSOR_INHERIT	include/GL/glut.h	474;"	d
GLUT_CURSOR_LEFT_ARROW	include/GL/glut.h	451;"	d
GLUT_CURSOR_LEFT_RIGHT	include/GL/glut.h	463;"	d
GLUT_CURSOR_LEFT_SIDE	include/GL/glut.h	467;"	d
GLUT_CURSOR_NONE	include/GL/glut.h	476;"	d
GLUT_CURSOR_RIGHT_ARROW	include/GL/glut.h	450;"	d
GLUT_CURSOR_RIGHT_SIDE	include/GL/glut.h	468;"	d
GLUT_CURSOR_SPRAY	include/GL/glut.h	457;"	d
GLUT_CURSOR_TEXT	include/GL/glut.h	459;"	d
GLUT_CURSOR_TOP_LEFT_CORNER	include/GL/glut.h	469;"	d
GLUT_CURSOR_TOP_RIGHT_CORNER	include/GL/glut.h	470;"	d
GLUT_CURSOR_TOP_SIDE	include/GL/glut.h	465;"	d
GLUT_CURSOR_UP_DOWN	include/GL/glut.h	462;"	d
GLUT_CURSOR_WAIT	include/GL/glut.h	458;"	d
GLUT_DEFINED__CRTIMP	include/GL/glut.h	118;"	d
GLUT_DEFINED__CRTIMP	include/GL/glut.h	712;"	d
GLUT_DEFINED___CDECL	include/GL/glut.h	104;"	d
GLUT_DEFINED___CDECL	include/GL/glut.h	707;"	d
GLUT_DEPTH	include/GL/glut.h	234;"	d
GLUT_DEVICE_IGNORE_KEY_REPEAT	include/GL/glut.h	407;"	d
GLUT_DEVICE_KEY_REPEAT	include/GL/glut.h	408;"	d
GLUT_DISPLAY_MODE_POSSIBLE	include/GL/glut.h	380;"	d
GLUT_DOUBLE	include/GL/glut.h	231;"	d
GLUT_DOWN	include/GL/glut.h	250;"	d
GLUT_ELAPSED_TIME	include/GL/glut.h	387;"	d
GLUT_ENTERED	include/GL/glut.h	281;"	d
GLUT_FULLY_COVERED	include/GL/glut.h	295;"	d
GLUT_FULLY_RETAINED	include/GL/glut.h	293;"	d
GLUT_GAME_MODE_ACTIVE	include/GL/glut.h	677;"	d
GLUT_GAME_MODE_DISPLAY_CHANGED	include/GL/glut.h	683;"	d
GLUT_GAME_MODE_HEIGHT	include/GL/glut.h	680;"	d
GLUT_GAME_MODE_PIXEL_DEPTH	include/GL/glut.h	681;"	d
GLUT_GAME_MODE_POSSIBLE	include/GL/glut.h	678;"	d
GLUT_GAME_MODE_REFRESH_RATE	include/GL/glut.h	682;"	d
GLUT_GAME_MODE_WIDTH	include/GL/glut.h	679;"	d
GLUT_GREEN	include/GL/glut.h	299;"	d
GLUT_HAS_DIAL_AND_BUTTON_BOX	include/GL/glut.h	398;"	d
GLUT_HAS_JOYSTICK	include/GL/glut.h	409;"	d
GLUT_HAS_KEYBOARD	include/GL/glut.h	395;"	d
GLUT_HAS_MOUSE	include/GL/glut.h	396;"	d
GLUT_HAS_OVERLAY	include/GL/glut.h	420;"	d
GLUT_HAS_SPACEBALL	include/GL/glut.h	397;"	d
GLUT_HAS_TABLET	include/GL/glut.h	399;"	d
GLUT_HIDDEN	include/GL/glut.h	292;"	d
GLUT_INDEX	include/GL/glut.h	229;"	d
GLUT_INIT_DISPLAY_MODE	include/GL/glut.h	385;"	d
GLUT_INIT_WINDOW_HEIGHT	include/GL/glut.h	384;"	d
GLUT_INIT_WINDOW_WIDTH	include/GL/glut.h	383;"	d
GLUT_INIT_WINDOW_X	include/GL/glut.h	381;"	d
GLUT_INIT_WINDOW_Y	include/GL/glut.h	382;"	d
GLUT_JOYSTICK_AXES	include/GL/glut.h	412;"	d
GLUT_JOYSTICK_BUTTONS	include/GL/glut.h	411;"	d
GLUT_JOYSTICK_BUTTON_A	include/GL/glut.h	666;"	d
GLUT_JOYSTICK_BUTTON_B	include/GL/glut.h	667;"	d
GLUT_JOYSTICK_BUTTON_C	include/GL/glut.h	668;"	d
GLUT_JOYSTICK_BUTTON_D	include/GL/glut.h	669;"	d
GLUT_JOYSTICK_POLL_RATE	include/GL/glut.h	413;"	d
GLUT_KEY_DOWN	include/GL/glut.h	271;"	d
GLUT_KEY_END	include/GL/glut.h	275;"	d
GLUT_KEY_F1	include/GL/glut.h	255;"	d
GLUT_KEY_F10	include/GL/glut.h	264;"	d
GLUT_KEY_F11	include/GL/glut.h	265;"	d
GLUT_KEY_F12	include/GL/glut.h	266;"	d
GLUT_KEY_F2	include/GL/glut.h	256;"	d
GLUT_KEY_F3	include/GL/glut.h	257;"	d
GLUT_KEY_F4	include/GL/glut.h	258;"	d
GLUT_KEY_F5	include/GL/glut.h	259;"	d
GLUT_KEY_F6	include/GL/glut.h	260;"	d
GLUT_KEY_F7	include/GL/glut.h	261;"	d
GLUT_KEY_F8	include/GL/glut.h	262;"	d
GLUT_KEY_F9	include/GL/glut.h	263;"	d
GLUT_KEY_HOME	include/GL/glut.h	274;"	d
GLUT_KEY_INSERT	include/GL/glut.h	276;"	d
GLUT_KEY_LEFT	include/GL/glut.h	268;"	d
GLUT_KEY_PAGE_DOWN	include/GL/glut.h	273;"	d
GLUT_KEY_PAGE_UP	include/GL/glut.h	272;"	d
GLUT_KEY_REPEAT_DEFAULT	include/GL/glut.h	663;"	d
GLUT_KEY_REPEAT_OFF	include/GL/glut.h	661;"	d
GLUT_KEY_REPEAT_ON	include/GL/glut.h	662;"	d
GLUT_KEY_RIGHT	include/GL/glut.h	270;"	d
GLUT_KEY_UP	include/GL/glut.h	269;"	d
GLUT_LAYER_IN_USE	include/GL/glut.h	419;"	d
GLUT_LEFT	include/GL/glut.h	280;"	d
GLUT_LEFT_BUTTON	include/GL/glut.h	245;"	d
GLUT_LUMINANCE	include/GL/glut.h	241;"	d
GLUT_MENU_IN_USE	include/GL/glut.h	285;"	d
GLUT_MENU_NOT_IN_USE	include/GL/glut.h	284;"	d
GLUT_MENU_NUM_ITEMS	include/GL/glut.h	379;"	d
GLUT_MIDDLE_BUTTON	include/GL/glut.h	246;"	d
GLUT_MULTISAMPLE	include/GL/glut.h	237;"	d
GLUT_NORMAL	include/GL/glut.h	440;"	d
GLUT_NORMAL_DAMAGED	include/GL/glut.h	422;"	d
GLUT_NOT_VISIBLE	include/GL/glut.h	288;"	d
GLUT_NUM_BUTTON_BOX_BUTTONS	include/GL/glut.h	402;"	d
GLUT_NUM_DIALS	include/GL/glut.h	403;"	d
GLUT_NUM_MOUSE_BUTTONS	include/GL/glut.h	400;"	d
GLUT_NUM_SPACEBALL_BUTTONS	include/GL/glut.h	401;"	d
GLUT_NUM_TABLET_BUTTONS	include/GL/glut.h	404;"	d
GLUT_OVERLAY	include/GL/glut.h	441;"	d
GLUT_OVERLAY_DAMAGED	include/GL/glut.h	423;"	d
GLUT_OVERLAY_POSSIBLE	include/GL/glut.h	418;"	d
GLUT_OWNS_JOYSTICK	include/GL/glut.h	410;"	d
GLUT_PARTIALLY_RETAINED	include/GL/glut.h	294;"	d
GLUT_RED	include/GL/glut.h	298;"	d
GLUT_RGB	include/GL/glut.h	227;"	d
GLUT_RGBA	include/GL/glut.h	228;"	d
GLUT_RIGHT_BUTTON	include/GL/glut.h	247;"	d
GLUT_SCREEN_HEIGHT	include/GL/glut.h	376;"	d
GLUT_SCREEN_HEIGHT_MM	include/GL/glut.h	378;"	d
GLUT_SCREEN_WIDTH	include/GL/glut.h	375;"	d
GLUT_SCREEN_WIDTH_MM	include/GL/glut.h	377;"	d
GLUT_SINGLE	include/GL/glut.h	230;"	d
GLUT_STENCIL	include/GL/glut.h	235;"	d
GLUT_STEREO	include/GL/glut.h	238;"	d
GLUT_STROKE_MONO_ROMAN	include/GL/glut.h	305;"	d
GLUT_STROKE_MONO_ROMAN	include/GL/glut.h	324;"	d
GLUT_STROKE_ROMAN	include/GL/glut.h	304;"	d
GLUT_STROKE_ROMAN	include/GL/glut.h	323;"	d
GLUT_TRANSPARENT_INDEX	include/GL/glut.h	421;"	d
GLUT_UP	include/GL/glut.h	251;"	d
GLUT_VIDEO_RESIZE_HEIGHT	include/GL/glut.h	436;"	d
GLUT_VIDEO_RESIZE_HEIGHT_DELTA	include/GL/glut.h	432;"	d
GLUT_VIDEO_RESIZE_IN_USE	include/GL/glut.h	428;"	d
GLUT_VIDEO_RESIZE_POSSIBLE	include/GL/glut.h	427;"	d
GLUT_VIDEO_RESIZE_WIDTH	include/GL/glut.h	435;"	d
GLUT_VIDEO_RESIZE_WIDTH_DELTA	include/GL/glut.h	431;"	d
GLUT_VIDEO_RESIZE_X	include/GL/glut.h	433;"	d
GLUT_VIDEO_RESIZE_X_DELTA	include/GL/glut.h	429;"	d
GLUT_VIDEO_RESIZE_Y	include/GL/glut.h	434;"	d
GLUT_VIDEO_RESIZE_Y_DELTA	include/GL/glut.h	430;"	d
GLUT_VISIBLE	include/GL/glut.h	289;"	d
GLUT_WINDOW_ACCUM_ALPHA_SIZE	include/GL/glut.h	362;"	d
GLUT_WINDOW_ACCUM_BLUE_SIZE	include/GL/glut.h	361;"	d
GLUT_WINDOW_ACCUM_GREEN_SIZE	include/GL/glut.h	360;"	d
GLUT_WINDOW_ACCUM_RED_SIZE	include/GL/glut.h	359;"	d
GLUT_WINDOW_ALPHA_SIZE	include/GL/glut.h	358;"	d
GLUT_WINDOW_BLUE_SIZE	include/GL/glut.h	357;"	d
GLUT_WINDOW_BUFFER_SIZE	include/GL/glut.h	352;"	d
GLUT_WINDOW_COLORMAP_SIZE	include/GL/glut.h	367;"	d
GLUT_WINDOW_CURSOR	include/GL/glut.h	373;"	d
GLUT_WINDOW_DEPTH_SIZE	include/GL/glut.h	354;"	d
GLUT_WINDOW_DOUBLEBUFFER	include/GL/glut.h	363;"	d
GLUT_WINDOW_FORMAT_ID	include/GL/glut.h	390;"	d
GLUT_WINDOW_GREEN_SIZE	include/GL/glut.h	356;"	d
GLUT_WINDOW_HEIGHT	include/GL/glut.h	351;"	d
GLUT_WINDOW_NUM_CHILDREN	include/GL/glut.h	366;"	d
GLUT_WINDOW_NUM_SAMPLES	include/GL/glut.h	369;"	d
GLUT_WINDOW_PARENT	include/GL/glut.h	365;"	d
GLUT_WINDOW_RED_SIZE	include/GL/glut.h	355;"	d
GLUT_WINDOW_RGBA	include/GL/glut.h	364;"	d
GLUT_WINDOW_STENCIL_SIZE	include/GL/glut.h	353;"	d
GLUT_WINDOW_STEREO	include/GL/glut.h	370;"	d
GLUT_WINDOW_WIDTH	include/GL/glut.h	350;"	d
GLUT_WINDOW_X	include/GL/glut.h	348;"	d
GLUT_WINDOW_Y	include/GL/glut.h	349;"	d
GLUT_WINGDIAPI_DEFINED	include/GL/glut.h	44;"	d
GLUT_WINGDIAPI_DEFINED	include/GL/glut.h	702;"	d
GLUT_XLIB_IMPLEMENTATION	include/GL/glut.h	223;"	d
GL_1PASS_EXT	include/GL/glext.h	1949;"	d
GL_1PASS_SGIS	include/GL/glext.h	1035;"	d
GL_2D	include/GL/gl.h	354;"	d
GL_2PASS_0_EXT	include/GL/glext.h	1950;"	d
GL_2PASS_0_SGIS	include/GL/glext.h	1036;"	d
GL_2PASS_1_EXT	include/GL/glext.h	1951;"	d
GL_2PASS_1_SGIS	include/GL/glext.h	1037;"	d
GL_2X_BIT_ATI	include/GL/glext.h	2372;"	d
GL_2_BYTES	include/GL/gl.h	234;"	d
GL_3D	include/GL/gl.h	355;"	d
GL_3DFX_multisample	include/GL/glext.h	4956;"	d
GL_3DFX_tbuffer	include/GL/glext.h	4960;"	d
GL_3DFX_texture_compression_FXT1	include/GL/glext.h	4952;"	d
GL_3D_COLOR	include/GL/gl.h	356;"	d
GL_3D_COLOR_TEXTURE	include/GL/gl.h	357;"	d
GL_3_BYTES	include/GL/gl.h	235;"	d
GL_422_AVERAGE_EXT	include/GL/glext.h	1714;"	d
GL_422_EXT	include/GL/glext.h	1712;"	d
GL_422_REV_AVERAGE_EXT	include/GL/glext.h	1715;"	d
GL_422_REV_EXT	include/GL/glext.h	1713;"	d
GL_4D_COLOR_TEXTURE	include/GL/gl.h	358;"	d
GL_4PASS_0_EXT	include/GL/glext.h	1952;"	d
GL_4PASS_0_SGIS	include/GL/glext.h	1038;"	d
GL_4PASS_1_EXT	include/GL/glext.h	1953;"	d
GL_4PASS_1_SGIS	include/GL/glext.h	1039;"	d
GL_4PASS_2_EXT	include/GL/glext.h	1954;"	d
GL_4PASS_2_SGIS	include/GL/glext.h	1040;"	d
GL_4PASS_3_EXT	include/GL/glext.h	1955;"	d
GL_4PASS_3_SGIS	include/GL/glext.h	1041;"	d
GL_4X_BIT_ATI	include/GL/glext.h	2373;"	d
GL_4_BYTES	include/GL/gl.h	236;"	d
GL_8X_BIT_ATI	include/GL/glext.h	2374;"	d
GL_ABGR_EXT	include/GL/gl.h	1525;"	d
GL_ABGR_EXT	include/GL/glext.h	793;"	d
GL_ACCUM	include/GL/gl.h	59;"	d
GL_ACCUM_ALPHA_BITS	include/GL/gl.h	633;"	d
GL_ACCUM_BLUE_BITS	include/GL/gl.h	632;"	d
GL_ACCUM_BUFFER_BIT	include/GL/gl.h	85;"	d
GL_ACCUM_CLEAR_VALUE	include/GL/gl.h	508;"	d
GL_ACCUM_GREEN_BITS	include/GL/gl.h	631;"	d
GL_ACCUM_RED_BITS	include/GL/gl.h	630;"	d
GL_ACTIVE_STENCIL_FACE_EXT	include/GL/glext.h	2597;"	d
GL_ACTIVE_TEXTURE	include/GL/glext.h	214;"	d
GL_ACTIVE_TEXTURE_ARB	include/GL/gl.h	1512;"	d
GL_ACTIVE_TEXTURE_ARB	include/GL/glext.h	409;"	d
GL_ACTIVE_VERTEX_UNITS_ARB	include/GL/glext.h	478;"	d
GL_ADD	include/GL/gl.h	63;"	d
GL_ADD_ATI	include/GL/glext.h	2344;"	d
GL_ADD_SIGNED	include/GL/glext.h	271;"	d
GL_ADD_SIGNED_ARB	include/GL/glext.h	551;"	d
GL_ADD_SIGNED_EXT	include/GL/gl.h	1549;"	d
GL_ADD_SIGNED_EXT	include/GL/glext.h	1619;"	d
GL_ALIASED_LINE_WIDTH_RANGE	include/GL/gl.h	1477;"	d
GL_ALIASED_LINE_WIDTH_RANGE	include/GL/glext.h	100;"	d
GL_ALIASED_POINT_SIZE_RANGE	include/GL/gl.h	1476;"	d
GL_ALIASED_POINT_SIZE_RANGE	include/GL/glext.h	99;"	d
GL_ALLOW_DRAW_FRG_HINT_PGI	include/GL/glext.h	1334;"	d
GL_ALLOW_DRAW_MEM_HINT_PGI	include/GL/glext.h	1335;"	d
GL_ALLOW_DRAW_OBJ_HINT_PGI	include/GL/glext.h	1332;"	d
GL_ALLOW_DRAW_WIN_HINT_PGI	include/GL/glext.h	1333;"	d
GL_ALL_ATTRIB_BITS	include/GL/gl.h	96;"	d
GL_ALL_COMPLETED_NV	include/GL/glext.h	2007;"	d
GL_ALPHA	include/GL/gl.h	932;"	d
GL_ALPHA12	include/GL/gl.h	1243;"	d
GL_ALPHA12_EXT	include/GL/glext.h	813;"	d
GL_ALPHA16	include/GL/gl.h	1244;"	d
GL_ALPHA16_EXT	include/GL/glext.h	814;"	d
GL_ALPHA4	include/GL/gl.h	1241;"	d
GL_ALPHA4_EXT	include/GL/glext.h	811;"	d
GL_ALPHA8	include/GL/gl.h	1242;"	d
GL_ALPHA8_EXT	include/GL/glext.h	812;"	d
GL_ALPHA_BIAS	include/GL/gl.h	607;"	d
GL_ALPHA_BITS	include/GL/gl.h	627;"	d
GL_ALPHA_FLOAT16_ATI	include/GL/glext.h	2680;"	d
GL_ALPHA_FLOAT32_ATI	include/GL/glext.h	2674;"	d
GL_ALPHA_MAX_CLAMP_INGR	include/GL/glext.h	1699;"	d
GL_ALPHA_MAX_SGIX	include/GL/glext.h	1486;"	d
GL_ALPHA_MIN_CLAMP_INGR	include/GL/glext.h	1695;"	d
GL_ALPHA_MIN_SGIX	include/GL/glext.h	1485;"	d
GL_ALPHA_SCALE	include/GL/gl.h	606;"	d
GL_ALPHA_TEST	include/GL/gl.h	529;"	d
GL_ALPHA_TEST_FUNC	include/GL/gl.h	530;"	d
GL_ALPHA_TEST_REF	include/GL/gl.h	531;"	d
GL_ALWAYS	include/GL/gl.h	73;"	d
GL_ALWAYS_FAST_HINT_PGI	include/GL/glext.h	1330;"	d
GL_ALWAYS_SOFT_HINT_PGI	include/GL/glext.h	1331;"	d
GL_AMBIENT	include/GL/gl.h	801;"	d
GL_AMBIENT_AND_DIFFUSE	include/GL/gl.h	890;"	d
GL_AND	include/GL/gl.h	846;"	d
GL_AND_INVERTED	include/GL/gl.h	849;"	d
GL_AND_REVERSE	include/GL/gl.h	847;"	d
GL_APPLE_client_storage	include/GL/glext.h	5614;"	d
GL_APPLE_element_array	include/GL/glext.h	5618;"	d
GL_APPLE_fence	include/GL/glext.h	5634;"	d
GL_APPLE_specular_vector	include/GL/glext.h	4564;"	d
GL_APPLE_transform_hint	include/GL/glext.h	4568;"	d
GL_APPLE_vertex_array_object	include/GL/glext.h	5656;"	d
GL_APPLE_vertex_array_range	include/GL/glext.h	5670;"	d
GL_APPLE_ycbcr_422	include/GL/glext.h	5682;"	d
GL_ARB_depth_texture	include/GL/glext.h	3321;"	d
GL_ARB_fragment_program	include/GL/glext.h	3501;"	d
GL_ARB_fragment_program_shadow	include/GL/glext.h	3668;"	d
GL_ARB_fragment_shader	include/GL/glext.h	3652;"	d
GL_ARB_imaging	include/GL/gl.h	55;"	d
GL_ARB_matrix_palette	include/GL/glext.h	3289;"	d
GL_ARB_multisample	include/GL/glext.h	3213;"	d
GL_ARB_multitexture	include/GL/gl.h	56;"	d
GL_ARB_multitexture	include/GL/glext.h	3125;"	d
GL_ARB_occlusion_query	include/GL/glext.h	3534;"	d
GL_ARB_point_parameters	include/GL/glext.h	3253;"	d
GL_ARB_point_sprite	include/GL/glext.h	3664;"	d
GL_ARB_shader_objects	include/GL/glext.h	3556;"	d
GL_ARB_shading_language_100	include/GL/glext.h	3656;"	d
GL_ARB_shadow	include/GL/glext.h	3325;"	d
GL_ARB_shadow_ambient	include/GL/glext.h	3329;"	d
GL_ARB_texture_border_clamp	include/GL/glext.h	3249;"	d
GL_ARB_texture_compression	include/GL/glext.h	3229;"	d
GL_ARB_texture_cube_map	include/GL/glext.h	3225;"	d
GL_ARB_texture_env_add	include/GL/glext.h	3221;"	d
GL_ARB_texture_env_combine	include/GL/glext.h	3305;"	d
GL_ARB_texture_env_crossbar	include/GL/glext.h	3309;"	d
GL_ARB_texture_env_dot3	include/GL/glext.h	3313;"	d
GL_ARB_texture_mirrored_repeat	include/GL/glext.h	3317;"	d
GL_ARB_texture_non_power_of_two	include/GL/glext.h	3660;"	d
GL_ARB_transpose_matrix	include/GL/glext.h	3199;"	d
GL_ARB_vertex_blend	include/GL/glext.h	3263;"	d
GL_ARB_vertex_buffer_object	include/GL/glext.h	3506;"	d
GL_ARB_vertex_program	include/GL/glext.h	3371;"	d
GL_ARB_vertex_shader	include/GL/glext.h	3640;"	d
GL_ARB_window_pos	include/GL/glext.h	3333;"	d
GL_ARRAY_BUFFER	include/GL/glext.h	330;"	d
GL_ARRAY_BUFFER_ARB	include/GL/glext.h	695;"	d
GL_ARRAY_BUFFER_BINDING	include/GL/glext.h	332;"	d
GL_ARRAY_BUFFER_BINDING_ARB	include/GL/glext.h	697;"	d
GL_ARRAY_ELEMENT_LOCK_COUNT_EXT	include/GL/glext.h	1410;"	d
GL_ARRAY_ELEMENT_LOCK_FIRST_EXT	include/GL/glext.h	1409;"	d
GL_ARRAY_OBJECT_BUFFER_ATI	include/GL/glext.h	2403;"	d
GL_ARRAY_OBJECT_OFFSET_ATI	include/GL/glext.h	2404;"	d
GL_ASYNC_DRAW_PIXELS_SGIX	include/GL/glext.h	1510;"	d
GL_ASYNC_HISTOGRAM_SGIX	include/GL/glext.h	1518;"	d
GL_ASYNC_MARKER_SGIX	include/GL/glext.h	1505;"	d
GL_ASYNC_READ_PIXELS_SGIX	include/GL/glext.h	1511;"	d
GL_ASYNC_TEX_IMAGE_SGIX	include/GL/glext.h	1509;"	d
GL_ATI_draw_buffers	include/GL/glext.h	5690;"	d
GL_ATI_element_array	include/GL/glext.h	5528;"	d
GL_ATI_envmap_bumpmap	include/GL/glext.h	5254;"	d
GL_ATI_fragment_shader	include/GL/glext.h	5268;"	d
GL_ATI_map_object_buffer	include/GL/glext.h	5855;"	d
GL_ATI_pn_triangles	include/GL/glext.h	5302;"	d
GL_ATI_separate_stencil	include/GL/glext.h	5865;"	d
GL_ATI_text_fragment_shader	include/GL/glext.h	5610;"	d
GL_ATI_texture_env_combine3	include/GL/glext.h	5698;"	d
GL_ATI_texture_float	include/GL/glext.h	5702;"	d
GL_ATI_texture_mirror_once	include/GL/glext.h	5014;"	d
GL_ATI_vertex_array_object	include/GL/glext.h	5312;"	d
GL_ATI_vertex_attrib_array_object	include/GL/glext.h	5875;"	d
GL_ATI_vertex_streams	include/GL/glext.h	5432;"	d
GL_ATTENUATION_EXT	include/GL/glext.h	1475;"	d
GL_ATTRIB_ARRAY_POINTER_NV	include/GL/glext.h	2175;"	d
GL_ATTRIB_ARRAY_SIZE_NV	include/GL/glext.h	2149;"	d
GL_ATTRIB_ARRAY_STRIDE_NV	include/GL/glext.h	2150;"	d
GL_ATTRIB_ARRAY_TYPE_NV	include/GL/glext.h	2151;"	d
GL_ATTRIB_STACK_DEPTH	include/GL/gl.h	527;"	d
GL_AUTO_NORMAL	include/GL/gl.h	635;"	d
GL_AUX0	include/GL/gl.h	260;"	d
GL_AUX1	include/GL/gl.h	261;"	d
GL_AUX2	include/GL/gl.h	262;"	d
GL_AUX3	include/GL/gl.h	263;"	d
GL_AUX_BUFFERS	include/GL/gl.h	539;"	d
GL_AVERAGE_EXT	include/GL/glext.h	1544;"	d
GL_AVERAGE_HP	include/GL/glext.h	1275;"	d
GL_BACK	include/GL/gl.h	256;"	d
GL_BACK_LEFT	include/GL/gl.h	253;"	d
GL_BACK_NORMALS_HINT_PGI	include/GL/glext.h	1343;"	d
GL_BACK_RIGHT	include/GL/gl.h	254;"	d
GL_BGR	include/GL/gl.h	1333;"	d
GL_BGR	include/GL/glext.h	83;"	d
GL_BGRA	include/GL/gl.h	1334;"	d
GL_BGRA	include/GL/glext.h	84;"	d
GL_BGRA_EXT	include/GL/glext.h	1501;"	d
GL_BGR_EXT	include/GL/glext.h	1500;"	d
GL_BIAS_BIT_ATI	include/GL/glext.h	2381;"	d
GL_BIAS_BY_NEGATIVE_ONE_HALF_NV	include/GL/glext.h	1814;"	d
GL_BINORMAL_ARRAY_EXT	include/GL/glext.h	1599;"	d
GL_BINORMAL_ARRAY_POINTER_EXT	include/GL/glext.h	1607;"	d
GL_BINORMAL_ARRAY_STRIDE_EXT	include/GL/glext.h	1605;"	d
GL_BINORMAL_ARRAY_TYPE_EXT	include/GL/glext.h	1604;"	d
GL_BITMAP	include/GL/gl.h	1037;"	d
GL_BITMAP_TOKEN	include/GL/gl.h	365;"	d
GL_BLEND	include/GL/gl.h	535;"	d
GL_BLEND_COLOR	include/GL/gl.h	1341;"	d
GL_BLEND_COLOR	include/GL/glext.h	108;"	d
GL_BLEND_COLOR_EXT	include/GL/gl.h	1532;"	d
GL_BLEND_COLOR_EXT	include/GL/glext.h	801;"	d
GL_BLEND_DST	include/GL/gl.h	533;"	d
GL_BLEND_DST_ALPHA	include/GL/glext.h	284;"	d
GL_BLEND_DST_ALPHA_EXT	include/GL/glext.h	1687;"	d
GL_BLEND_DST_RGB	include/GL/glext.h	282;"	d
GL_BLEND_DST_RGB_EXT	include/GL/glext.h	1685;"	d
GL_BLEND_EQUATION	include/GL/gl.h	1347;"	d
GL_BLEND_EQUATION	include/GL/glext.h	112;"	d
GL_BLEND_EQUATION_ALPHA_EXT	include/GL/glext.h	2764;"	d
GL_BLEND_EQUATION_EXT	include/GL/gl.h	1538;"	d
GL_BLEND_EQUATION_EXT	include/GL/glext.h	1126;"	d
GL_BLEND_EQUATION_RGB_EXT	include/GL/glext.h	2763;"	d
GL_BLEND_SRC	include/GL/gl.h	534;"	d
GL_BLEND_SRC_ALPHA	include/GL/glext.h	285;"	d
GL_BLEND_SRC_ALPHA_EXT	include/GL/glext.h	1688;"	d
GL_BLEND_SRC_RGB	include/GL/glext.h	283;"	d
GL_BLEND_SRC_RGB_EXT	include/GL/glext.h	1686;"	d
GL_BLUE	include/GL/gl.h	931;"	d
GL_BLUE_BIAS	include/GL/gl.h	605;"	d
GL_BLUE_BITS	include/GL/gl.h	626;"	d
GL_BLUE_BIT_ATI	include/GL/glext.h	2371;"	d
GL_BLUE_MAX_CLAMP_INGR	include/GL/glext.h	1698;"	d
GL_BLUE_MIN_CLAMP_INGR	include/GL/glext.h	1694;"	d
GL_BLUE_SCALE	include/GL/gl.h	604;"	d
GL_BOOL_ARB	include/GL/glext.h	745;"	d
GL_BOOL_VEC2_ARB	include/GL/glext.h	746;"	d
GL_BOOL_VEC3_ARB	include/GL/glext.h	747;"	d
GL_BOOL_VEC4_ARB	include/GL/glext.h	748;"	d
GL_BUFFER_ACCESS	include/GL/glext.h	347;"	d
GL_BUFFER_ACCESS_ARB	include/GL/glext.h	712;"	d
GL_BUFFER_MAPPED	include/GL/glext.h	348;"	d
GL_BUFFER_MAPPED_ARB	include/GL/glext.h	713;"	d
GL_BUFFER_MAP_POINTER	include/GL/glext.h	349;"	d
GL_BUFFER_MAP_POINTER_ARB	include/GL/glext.h	714;"	d
GL_BUFFER_SIZE	include/GL/glext.h	324;"	d
GL_BUFFER_SIZE_ARB	include/GL/glext.h	693;"	d
GL_BUFFER_USAGE	include/GL/glext.h	325;"	d
GL_BUFFER_USAGE_ARB	include/GL/glext.h	694;"	d
GL_BUMP_ENVMAP_ATI	include/GL/glext.h	2273;"	d
GL_BUMP_NUM_TEX_UNITS_ATI	include/GL/glext.h	2269;"	d
GL_BUMP_ROT_MATRIX_ATI	include/GL/glext.h	2267;"	d
GL_BUMP_ROT_MATRIX_SIZE_ATI	include/GL/glext.h	2268;"	d
GL_BUMP_TARGET_ATI	include/GL/glext.h	2274;"	d
GL_BUMP_TEX_UNITS_ATI	include/GL/glext.h	2270;"	d
GL_BYTE	include/GL/gl.h	227;"	d
GL_C3F_V3F	include/GL/gl.h	1321;"	d
GL_C4F_N3F_V3F	include/GL/gl.h	1323;"	d
GL_C4UB_V2F	include/GL/gl.h	1319;"	d
GL_C4UB_V3F	include/GL/gl.h	1320;"	d
GL_CALLIGRAPHIC_FRAGMENT_SGIX	include/GL/glext.h	1369;"	d
GL_CCW	include/GL/gl.h	385;"	d
GL_CLAMP	include/GL/gl.h	1218;"	d
GL_CLAMP_TO_BORDER	include/GL/glext.h	253;"	d
GL_CLAMP_TO_BORDER_ARB	include/GL/glext.h	466;"	d
GL_CLAMP_TO_BORDER_SGIS	include/GL/glext.h	254;"	d
GL_CLAMP_TO_EDGE	include/GL/gl.h	1463;"	d
GL_CLAMP_TO_EDGE	include/GL/glext.h	87;"	d
GL_CLAMP_TO_EDGE_SGIS	include/GL/glext.h	1119;"	d
GL_CLEAR	include/GL/gl.h	845;"	d
GL_CLIENT_ACTIVE_TEXTURE	include/GL/glext.h	215;"	d
GL_CLIENT_ACTIVE_TEXTURE_ARB	include/GL/gl.h	1513;"	d
GL_CLIENT_ACTIVE_TEXTURE_ARB	include/GL/glext.h	410;"	d
GL_CLIENT_ALL_ATTRIB_BITS	include/GL/gl.h	1231;"	d
GL_CLIENT_ATTRIB_STACK_DEPTH	include/GL/gl.h	528;"	d
GL_CLIENT_PIXEL_STORE_BIT	include/GL/gl.h	1229;"	d
GL_CLIENT_VERTEX_ARRAY_BIT	include/GL/gl.h	1230;"	d
GL_CLIP_FAR_HINT_PGI	include/GL/glext.h	1341;"	d
GL_CLIP_NEAR_HINT_PGI	include/GL/glext.h	1340;"	d
GL_CLIP_PLANE0	include/GL/gl.h	166;"	d
GL_CLIP_PLANE1	include/GL/gl.h	167;"	d
GL_CLIP_PLANE2	include/GL/gl.h	168;"	d
GL_CLIP_PLANE3	include/GL/gl.h	169;"	d
GL_CLIP_PLANE4	include/GL/gl.h	170;"	d
GL_CLIP_PLANE5	include/GL/gl.h	171;"	d
GL_CLIP_VOLUME_CLIPPING_HINT_EXT	include/GL/glext.h	1357;"	d
GL_CMYKA_EXT	include/GL/glext.h	984;"	d
GL_CMYK_EXT	include/GL/glext.h	983;"	d
GL_CND0_ATI	include/GL/glext.h	2352;"	d
GL_CND_ATI	include/GL/glext.h	2351;"	d
GL_COEFF	include/GL/gl.h	421;"	d
GL_COLOR	include/GL/gl.h	921;"	d
GL_COLOR3_BIT_PGI	include/GL/glext.h	1303;"	d
GL_COLOR4_BIT_PGI	include/GL/glext.h	1304;"	d
GL_COLOR_ALPHA_PAIRING_ATI	include/GL/glext.h	2362;"	d
GL_COLOR_ARRAY	include/GL/gl.h	1293;"	d
GL_COLOR_ARRAY_BUFFER_BINDING	include/GL/glext.h	336;"	d
GL_COLOR_ARRAY_BUFFER_BINDING_ARB	include/GL/glext.h	701;"	d
GL_COLOR_ARRAY_COUNT_EXT	include/GL/glext.h	1070;"	d
GL_COLOR_ARRAY_EXT	include/GL/glext.h	1056;"	d
GL_COLOR_ARRAY_LIST_IBM	include/GL/glext.h	1891;"	d
GL_COLOR_ARRAY_LIST_STRIDE_IBM	include/GL/glext.h	1899;"	d
GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL	include/GL/glext.h	1529;"	d
GL_COLOR_ARRAY_POINTER	include/GL/gl.h	1313;"	d
GL_COLOR_ARRAY_POINTER_EXT	include/GL/glext.h	1082;"	d
GL_COLOR_ARRAY_SIZE	include/GL/gl.h	1302;"	d
GL_COLOR_ARRAY_SIZE_EXT	include/GL/glext.h	1067;"	d
GL_COLOR_ARRAY_STRIDE	include/GL/gl.h	1304;"	d
GL_COLOR_ARRAY_STRIDE_EXT	include/GL/glext.h	1069;"	d
GL_COLOR_ARRAY_TYPE	include/GL/gl.h	1303;"	d
GL_COLOR_ARRAY_TYPE_EXT	include/GL/glext.h	1068;"	d
GL_COLOR_BUFFER_BIT	include/GL/gl.h	90;"	d
GL_COLOR_CLEAR_VALUE	include/GL/gl.h	546;"	d
GL_COLOR_INDEX	include/GL/gl.h	926;"	d
GL_COLOR_INDEX12_EXT	include/GL/glext.h	1351;"	d
GL_COLOR_INDEX16_EXT	include/GL/glext.h	1352;"	d
GL_COLOR_INDEX1_EXT	include/GL/glext.h	1347;"	d
GL_COLOR_INDEX2_EXT	include/GL/glext.h	1348;"	d
GL_COLOR_INDEX4_EXT	include/GL/glext.h	1349;"	d
GL_COLOR_INDEX8_EXT	include/GL/glext.h	1350;"	d
GL_COLOR_INDEXES	include/GL/gl.h	891;"	d
GL_COLOR_LOGIC_OP	include/GL/gl.h	538;"	d
GL_COLOR_MATERIAL	include/GL/gl.h	495;"	d
GL_COLOR_MATERIAL_FACE	include/GL/gl.h	493;"	d
GL_COLOR_MATERIAL_PARAMETER	include/GL/gl.h	494;"	d
GL_COLOR_MATRIX	include/GL/gl.h	1354;"	d
GL_COLOR_MATRIX	include/GL/glext.h	149;"	d
GL_COLOR_MATRIX_SGI	include/GL/glext.h	920;"	d
GL_COLOR_MATRIX_STACK_DEPTH	include/GL/gl.h	1355;"	d
GL_COLOR_MATRIX_STACK_DEPTH	include/GL/glext.h	150;"	d
GL_COLOR_MATRIX_STACK_DEPTH_SGI	include/GL/glext.h	921;"	d
GL_COLOR_SUM	include/GL/glext.h	304;"	d
GL_COLOR_SUM_ARB	include/GL/glext.h	593;"	d
GL_COLOR_SUM_CLAMP_NV	include/GL/glext.h	1828;"	d
GL_COLOR_SUM_EXT	include/GL/glext.h	1564;"	d
GL_COLOR_TABLE	include/GL/gl.h	1367;"	d
GL_COLOR_TABLE	include/GL/glext.h	160;"	d
GL_COLOR_TABLE_ALPHA_SIZE	include/GL/gl.h	1380;"	d
GL_COLOR_TABLE_ALPHA_SIZE	include/GL/glext.h	173;"	d
GL_COLOR_TABLE_ALPHA_SIZE_SGI	include/GL/glext.h	947;"	d
GL_COLOR_TABLE_BIAS	include/GL/gl.h	1374;"	d
GL_COLOR_TABLE_BIAS	include/GL/glext.h	167;"	d
GL_COLOR_TABLE_BIAS_SGI	include/GL/glext.h	941;"	d
GL_COLOR_TABLE_BLUE_SIZE	include/GL/gl.h	1379;"	d
GL_COLOR_TABLE_BLUE_SIZE	include/GL/glext.h	172;"	d
GL_COLOR_TABLE_BLUE_SIZE_SGI	include/GL/glext.h	946;"	d
GL_COLOR_TABLE_FORMAT	include/GL/gl.h	1375;"	d
GL_COLOR_TABLE_FORMAT	include/GL/glext.h	168;"	d
GL_COLOR_TABLE_FORMAT_SGI	include/GL/glext.h	942;"	d
GL_COLOR_TABLE_GREEN_SIZE	include/GL/gl.h	1378;"	d
GL_COLOR_TABLE_GREEN_SIZE	include/GL/glext.h	171;"	d
GL_COLOR_TABLE_GREEN_SIZE_SGI	include/GL/glext.h	945;"	d
GL_COLOR_TABLE_INTENSITY_SIZE	include/GL/gl.h	1382;"	d
GL_COLOR_TABLE_INTENSITY_SIZE	include/GL/glext.h	175;"	d
GL_COLOR_TABLE_INTENSITY_SIZE_SGI	include/GL/glext.h	949;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE	include/GL/gl.h	1381;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE	include/GL/glext.h	174;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE_SGI	include/GL/glext.h	948;"	d
GL_COLOR_TABLE_RED_SIZE	include/GL/gl.h	1377;"	d
GL_COLOR_TABLE_RED_SIZE	include/GL/glext.h	170;"	d
GL_COLOR_TABLE_RED_SIZE_SGI	include/GL/glext.h	944;"	d
GL_COLOR_TABLE_SCALE	include/GL/gl.h	1373;"	d
GL_COLOR_TABLE_SCALE	include/GL/glext.h	166;"	d
GL_COLOR_TABLE_SCALE_SGI	include/GL/glext.h	940;"	d
GL_COLOR_TABLE_SGI	include/GL/glext.h	934;"	d
GL_COLOR_TABLE_WIDTH	include/GL/gl.h	1376;"	d
GL_COLOR_TABLE_WIDTH	include/GL/glext.h	169;"	d
GL_COLOR_TABLE_WIDTH_SGI	include/GL/glext.h	943;"	d
GL_COLOR_WRITEMASK	include/GL/gl.h	547;"	d
GL_COMBINE	include/GL/glext.h	255;"	d
GL_COMBINE4_NV	include/GL/glext.h	1861;"	d
GL_COMBINER0_NV	include/GL/glext.h	1829;"	d
GL_COMBINER1_NV	include/GL/glext.h	1830;"	d
GL_COMBINER2_NV	include/GL/glext.h	1831;"	d
GL_COMBINER3_NV	include/GL/glext.h	1832;"	d
GL_COMBINER4_NV	include/GL/glext.h	1833;"	d
GL_COMBINER5_NV	include/GL/glext.h	1834;"	d
GL_COMBINER6_NV	include/GL/glext.h	1835;"	d
GL_COMBINER7_NV	include/GL/glext.h	1836;"	d
GL_COMBINER_AB_DOT_PRODUCT_NV	include/GL/glext.h	1818;"	d
GL_COMBINER_AB_OUTPUT_NV	include/GL/glext.h	1823;"	d
GL_COMBINER_BIAS_NV	include/GL/glext.h	1822;"	d
GL_COMBINER_CD_DOT_PRODUCT_NV	include/GL/glext.h	1819;"	d
GL_COMBINER_CD_OUTPUT_NV	include/GL/glext.h	1824;"	d
GL_COMBINER_COMPONENT_USAGE_NV	include/GL/glext.h	1817;"	d
GL_COMBINER_INPUT_NV	include/GL/glext.h	1815;"	d
GL_COMBINER_MAPPING_NV	include/GL/glext.h	1816;"	d
GL_COMBINER_MUX_SUM_NV	include/GL/glext.h	1820;"	d
GL_COMBINER_SCALE_NV	include/GL/glext.h	1821;"	d
GL_COMBINER_SUM_OUTPUT_NV	include/GL/glext.h	1825;"	d
GL_COMBINE_ALPHA	include/GL/glext.h	257;"	d
GL_COMBINE_ALPHA_ARB	include/GL/glext.h	537;"	d
GL_COMBINE_ALPHA_EXT	include/GL/gl.h	1547;"	d
GL_COMBINE_ALPHA_EXT	include/GL/glext.h	1617;"	d
GL_COMBINE_ARB	include/GL/glext.h	535;"	d
GL_COMBINE_EXT	include/GL/gl.h	1545;"	d
GL_COMBINE_EXT	include/GL/glext.h	1615;"	d
GL_COMBINE_RGB	include/GL/glext.h	256;"	d
GL_COMBINE_RGB_ARB	include/GL/glext.h	536;"	d
GL_COMBINE_RGB_EXT	include/GL/gl.h	1546;"	d
GL_COMBINE_RGB_EXT	include/GL/glext.h	1616;"	d
GL_COMPARE_R_TO_TEXTURE	include/GL/glext.h	320;"	d
GL_COMPARE_R_TO_TEXTURE_ARB	include/GL/glext.h	582;"	d
GL_COMPILE	include/GL/gl.h	829;"	d
GL_COMPILE_AND_EXECUTE	include/GL/gl.h	830;"	d
GL_COMPRESSED_ALPHA	include/GL/glext.h	242;"	d
GL_COMPRESSED_ALPHA_ARB	include/GL/glext.h	452;"	d
GL_COMPRESSED_INTENSITY	include/GL/glext.h	245;"	d
GL_COMPRESSED_INTENSITY_ARB	include/GL/glext.h	455;"	d
GL_COMPRESSED_LUMINANCE	include/GL/glext.h	243;"	d
GL_COMPRESSED_LUMINANCE_ALPHA	include/GL/glext.h	244;"	d
GL_COMPRESSED_LUMINANCE_ALPHA_ARB	include/GL/glext.h	454;"	d
GL_COMPRESSED_LUMINANCE_ARB	include/GL/glext.h	453;"	d
GL_COMPRESSED_RGB	include/GL/glext.h	246;"	d
GL_COMPRESSED_RGBA	include/GL/glext.h	247;"	d
GL_COMPRESSED_RGBA_ARB	include/GL/glext.h	457;"	d
GL_COMPRESSED_RGBA_FXT1_3DFX	include/GL/glext.h	1931;"	d
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT	include/GL/glext.h	1876;"	d
GL_COMPRESSED_RGBA_S3TC_DXT3_EXT	include/GL/glext.h	1877;"	d
GL_COMPRESSED_RGBA_S3TC_DXT5_EXT	include/GL/glext.h	1878;"	d
GL_COMPRESSED_RGB_ARB	include/GL/glext.h	456;"	d
GL_COMPRESSED_RGB_FXT1_3DFX	include/GL/glext.h	1930;"	d
GL_COMPRESSED_RGB_S3TC_DXT1_EXT	include/GL/glext.h	1875;"	d
GL_COMPRESSED_TEXTURE_FORMATS	include/GL/glext.h	252;"	d
GL_COMPRESSED_TEXTURE_FORMATS_ARB	include/GL/glext.h	462;"	d
GL_COMP_BIT_ATI	include/GL/glext.h	2379;"	d
GL_CONSERVE_MEMORY_HINT_PGI	include/GL/glext.h	1325;"	d
GL_CONSTANT	include/GL/glext.h	274;"	d
GL_CONSTANT_ALPHA	include/GL/gl.h	1339;"	d
GL_CONSTANT_ALPHA	include/GL/glext.h	106;"	d
GL_CONSTANT_ALPHA_EXT	include/GL/gl.h	1530;"	d
GL_CONSTANT_ALPHA_EXT	include/GL/glext.h	799;"	d
GL_CONSTANT_ARB	include/GL/glext.h	554;"	d
GL_CONSTANT_ATTENUATION	include/GL/gl.h	808;"	d
GL_CONSTANT_BORDER	include/GL/gl.h	1405;"	d
GL_CONSTANT_BORDER	include/GL/glext.h	176;"	d
GL_CONSTANT_BORDER_HP	include/GL/glext.h	1283;"	d
GL_CONSTANT_COLOR	include/GL/gl.h	1337;"	d
GL_CONSTANT_COLOR	include/GL/glext.h	104;"	d
GL_CONSTANT_COLOR0_NV	include/GL/glext.h	1794;"	d
GL_CONSTANT_COLOR1_NV	include/GL/glext.h	1795;"	d
GL_CONSTANT_COLOR_EXT	include/GL/gl.h	1528;"	d
GL_CONSTANT_COLOR_EXT	include/GL/glext.h	797;"	d
GL_CONSTANT_EXT	include/GL/gl.h	1551;"	d
GL_CONSTANT_EXT	include/GL/glext.h	1621;"	d
GL_CONST_EYE_NV	include/GL/glext.h	2081;"	d
GL_CONVOLUTION_1D	include/GL/gl.h	1385;"	d
GL_CONVOLUTION_1D	include/GL/glext.h	115;"	d
GL_CONVOLUTION_1D_EXT	include/GL/glext.h	897;"	d
GL_CONVOLUTION_2D	include/GL/gl.h	1386;"	d
GL_CONVOLUTION_2D	include/GL/glext.h	116;"	d
GL_CONVOLUTION_2D_EXT	include/GL/glext.h	898;"	d
GL_CONVOLUTION_BORDER_COLOR	include/GL/gl.h	1407;"	d
GL_CONVOLUTION_BORDER_COLOR	include/GL/glext.h	178;"	d
GL_CONVOLUTION_BORDER_COLOR_HP	include/GL/glext.h	1285;"	d
GL_CONVOLUTION_BORDER_MODE	include/GL/gl.h	1388;"	d
GL_CONVOLUTION_BORDER_MODE	include/GL/glext.h	118;"	d
GL_CONVOLUTION_BORDER_MODE_EXT	include/GL/glext.h	900;"	d
GL_CONVOLUTION_FILTER_BIAS	include/GL/gl.h	1390;"	d
GL_CONVOLUTION_FILTER_BIAS	include/GL/glext.h	120;"	d
GL_CONVOLUTION_FILTER_BIAS_EXT	include/GL/glext.h	902;"	d
GL_CONVOLUTION_FILTER_SCALE	include/GL/gl.h	1389;"	d
GL_CONVOLUTION_FILTER_SCALE	include/GL/glext.h	119;"	d
GL_CONVOLUTION_FILTER_SCALE_EXT	include/GL/glext.h	901;"	d
GL_CONVOLUTION_FORMAT	include/GL/gl.h	1392;"	d
GL_CONVOLUTION_FORMAT	include/GL/glext.h	122;"	d
GL_CONVOLUTION_FORMAT_EXT	include/GL/glext.h	904;"	d
GL_CONVOLUTION_HEIGHT	include/GL/gl.h	1394;"	d
GL_CONVOLUTION_HEIGHT	include/GL/glext.h	124;"	d
GL_CONVOLUTION_HEIGHT_EXT	include/GL/glext.h	906;"	d
GL_CONVOLUTION_HINT_SGIX	include/GL/glext.h	1970;"	d
GL_CONVOLUTION_WIDTH	include/GL/gl.h	1393;"	d
GL_CONVOLUTION_WIDTH	include/GL/glext.h	123;"	d
GL_CONVOLUTION_WIDTH_EXT	include/GL/glext.h	905;"	d
GL_CON_0_ATI	include/GL/glext.h	2311;"	d
GL_CON_10_ATI	include/GL/glext.h	2321;"	d
GL_CON_11_ATI	include/GL/glext.h	2322;"	d
GL_CON_12_ATI	include/GL/glext.h	2323;"	d
GL_CON_13_ATI	include/GL/glext.h	2324;"	d
GL_CON_14_ATI	include/GL/glext.h	2325;"	d
GL_CON_15_ATI	include/GL/glext.h	2326;"	d
GL_CON_16_ATI	include/GL/glext.h	2327;"	d
GL_CON_17_ATI	include/GL/glext.h	2328;"	d
GL_CON_18_ATI	include/GL/glext.h	2329;"	d
GL_CON_19_ATI	include/GL/glext.h	2330;"	d
GL_CON_1_ATI	include/GL/glext.h	2312;"	d
GL_CON_20_ATI	include/GL/glext.h	2331;"	d
GL_CON_21_ATI	include/GL/glext.h	2332;"	d
GL_CON_22_ATI	include/GL/glext.h	2333;"	d
GL_CON_23_ATI	include/GL/glext.h	2334;"	d
GL_CON_24_ATI	include/GL/glext.h	2335;"	d
GL_CON_25_ATI	include/GL/glext.h	2336;"	d
GL_CON_26_ATI	include/GL/glext.h	2337;"	d
GL_CON_27_ATI	include/GL/glext.h	2338;"	d
GL_CON_28_ATI	include/GL/glext.h	2339;"	d
GL_CON_29_ATI	include/GL/glext.h	2340;"	d
GL_CON_2_ATI	include/GL/glext.h	2313;"	d
GL_CON_30_ATI	include/GL/glext.h	2341;"	d
GL_CON_31_ATI	include/GL/glext.h	2342;"	d
GL_CON_3_ATI	include/GL/glext.h	2314;"	d
GL_CON_4_ATI	include/GL/glext.h	2315;"	d
GL_CON_5_ATI	include/GL/glext.h	2316;"	d
GL_CON_6_ATI	include/GL/glext.h	2317;"	d
GL_CON_7_ATI	include/GL/glext.h	2318;"	d
GL_CON_8_ATI	include/GL/glext.h	2319;"	d
GL_CON_9_ATI	include/GL/glext.h	2320;"	d
GL_COORD_REPLACE_ARB	include/GL/glext.h	786;"	d
GL_COORD_REPLACE_NV	include/GL/glext.h	2565;"	d
GL_COPY	include/GL/gl.h	848;"	d
GL_COPY_INVERTED	include/GL/gl.h	857;"	d
GL_COPY_PIXEL_TOKEN	include/GL/gl.h	367;"	d
GL_CUBIC_EXT	include/GL/glext.h	1543;"	d
GL_CUBIC_HP	include/GL/glext.h	1274;"	d
GL_CULL_FACE	include/GL/gl.h	485;"	d
GL_CULL_FACE_MODE	include/GL/gl.h	486;"	d
GL_CULL_FRAGMENT_NV	include/GL/glext.h	2083;"	d
GL_CULL_MODES_NV	include/GL/glext.h	2073;"	d
GL_CULL_VERTEX_EXT	include/GL/glext.h	1414;"	d
GL_CULL_VERTEX_EYE_POSITION_EXT	include/GL/glext.h	1415;"	d
GL_CULL_VERTEX_IBM	include/GL/glext.h	1882;"	d
GL_CULL_VERTEX_OBJECT_POSITION_EXT	include/GL/glext.h	1416;"	d
GL_CURRENT_ATTRIB_NV	include/GL/glext.h	2152;"	d
GL_CURRENT_BINORMAL_EXT	include/GL/glext.h	1601;"	d
GL_CURRENT_BIT	include/GL/gl.h	76;"	d
GL_CURRENT_COLOR	include/GL/gl.h	450;"	d
GL_CURRENT_FOG_COORD	include/GL/glext.h	362;"	d
GL_CURRENT_FOG_COORDINATE	include/GL/glext.h	299;"	d
GL_CURRENT_FOG_COORDINATE_EXT	include/GL/glext.h	1585;"	d
GL_CURRENT_INDEX	include/GL/gl.h	451;"	d
GL_CURRENT_MATRIX_ARB	include/GL/glext.h	605;"	d
GL_CURRENT_MATRIX_INDEX_ARB	include/GL/glext.h	527;"	d
GL_CURRENT_MATRIX_NV	include/GL/glext.h	2171;"	d
GL_CURRENT_MATRIX_STACK_DEPTH_ARB	include/GL/glext.h	604;"	d
GL_CURRENT_MATRIX_STACK_DEPTH_NV	include/GL/glext.h	2170;"	d
GL_CURRENT_NORMAL	include/GL/gl.h	452;"	d
GL_CURRENT_OCCLUSION_QUERY_ID_NV	include/GL/glext.h	2558;"	d
GL_CURRENT_PALETTE_MATRIX_ARB	include/GL/glext.h	525;"	d
GL_CURRENT_QUERY	include/GL/glext.h	327;"	d
GL_CURRENT_QUERY_ARB	include/GL/glext.h	728;"	d
GL_CURRENT_RASTER_COLOR	include/GL/gl.h	454;"	d
GL_CURRENT_RASTER_DISTANCE	include/GL/gl.h	459;"	d
GL_CURRENT_RASTER_INDEX	include/GL/gl.h	455;"	d
GL_CURRENT_RASTER_NORMAL_SGIX	include/GL/glext.h	1431;"	d
GL_CURRENT_RASTER_POSITION	include/GL/gl.h	457;"	d
GL_CURRENT_RASTER_POSITION_VALID	include/GL/gl.h	458;"	d
GL_CURRENT_RASTER_TEXTURE_COORDS	include/GL/gl.h	456;"	d
GL_CURRENT_SECONDARY_COLOR	include/GL/glext.h	305;"	d
GL_CURRENT_SECONDARY_COLOR_EXT	include/GL/glext.h	1565;"	d
GL_CURRENT_TANGENT_EXT	include/GL/glext.h	1600;"	d
GL_CURRENT_TEXTURE_COORDS	include/GL/gl.h	453;"	d
GL_CURRENT_VERTEX_ATTRIB_ARB	include/GL/glext.h	599;"	d
GL_CURRENT_VERTEX_EXT	include/GL/glext.h	2506;"	d
GL_CURRENT_VERTEX_WEIGHT_EXT	include/GL/glext.h	1764;"	d
GL_CURRENT_WEIGHT_ARB	include/GL/glext.h	481;"	d
GL_CW	include/GL/gl.h	384;"	d
GL_DECAL	include/GL/gl.h	1129;"	d
GL_DECR	include/GL/gl.h	1106;"	d
GL_DECR_WRAP	include/GL/glext.h	315;"	d
GL_DECR_WRAP_EXT	include/GL/glext.h	1708;"	d
GL_DEFORMATIONS_MASK_SGIX	include/GL/glext.h	1234;"	d
GL_DEPENDENT_AR_TEXTURE_2D_NV	include/GL/glext.h	2085;"	d
GL_DEPENDENT_GB_TEXTURE_2D_NV	include/GL/glext.h	2086;"	d
GL_DEPENDENT_HILO_TEXTURE_2D_NV	include/GL/glext.h	2578;"	d
GL_DEPENDENT_RGB_TEXTURE_3D_NV	include/GL/glext.h	2579;"	d
GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV	include/GL/glext.h	2580;"	d
GL_DEPTH	include/GL/gl.h	922;"	d
GL_DEPTH_BIAS	include/GL/gl.h	609;"	d
GL_DEPTH_BITS	include/GL/gl.h	628;"	d
GL_DEPTH_BOUNDS_EXT	include/GL/glext.h	2753;"	d
GL_DEPTH_BOUNDS_TEST_EXT	include/GL/glext.h	2752;"	d
GL_DEPTH_BUFFER_BIT	include/GL/gl.h	84;"	d
GL_DEPTH_CLAMP_NV	include/GL/glext.h	2553;"	d
GL_DEPTH_CLEAR_VALUE	include/GL/gl.h	506;"	d
GL_DEPTH_COMPONENT	include/GL/gl.h	928;"	d
GL_DEPTH_COMPONENT16	include/GL/glext.h	292;"	d
GL_DEPTH_COMPONENT16_ARB	include/GL/glext.h	572;"	d
GL_DEPTH_COMPONENT16_SGIX	include/GL/glext.h	1247;"	d
GL_DEPTH_COMPONENT24	include/GL/glext.h	293;"	d
GL_DEPTH_COMPONENT24_ARB	include/GL/glext.h	573;"	d
GL_DEPTH_COMPONENT24_SGIX	include/GL/glext.h	1248;"	d
GL_DEPTH_COMPONENT32	include/GL/glext.h	294;"	d
GL_DEPTH_COMPONENT32_ARB	include/GL/glext.h	574;"	d
GL_DEPTH_COMPONENT32_SGIX	include/GL/glext.h	1249;"	d
GL_DEPTH_FUNC	include/GL/gl.h	507;"	d
GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX	include/GL/glext.h	1925;"	d
GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX	include/GL/glext.h	1926;"	d
GL_DEPTH_PASS_INSTRUMENT_SGIX	include/GL/glext.h	1924;"	d
GL_DEPTH_RANGE	include/GL/gl.h	503;"	d
GL_DEPTH_SCALE	include/GL/gl.h	608;"	d
GL_DEPTH_STENCIL_NV	include/GL/glext.h	2044;"	d
GL_DEPTH_STENCIL_TO_BGRA_NV	include/GL/glext.h	2263;"	d
GL_DEPTH_STENCIL_TO_RGBA_NV	include/GL/glext.h	2262;"	d
GL_DEPTH_TEST	include/GL/gl.h	504;"	d
GL_DEPTH_TEXTURE_MODE	include/GL/glext.h	317;"	d
GL_DEPTH_TEXTURE_MODE_ARB	include/GL/glext.h	576;"	d
GL_DEPTH_WRITEMASK	include/GL/gl.h	505;"	d
GL_DETAIL_TEXTURE_2D_BINDING_SGIS	include/GL/glext.h	999;"	d
GL_DETAIL_TEXTURE_2D_SGIS	include/GL/glext.h	998;"	d
GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS	include/GL/glext.h	1005;"	d
GL_DETAIL_TEXTURE_LEVEL_SGIS	include/GL/glext.h	1003;"	d
GL_DETAIL_TEXTURE_MODE_SGIS	include/GL/glext.h	1004;"	d
GL_DIFFUSE	include/GL/gl.h	802;"	d
GL_DISCARD_ATI	include/GL/glext.h	2400;"	d
GL_DISCARD_NV	include/GL/glext.h	1800;"	d
GL_DISTANCE_ATTENUATION_EXT	include/GL/glext.h	1195;"	d
GL_DISTANCE_ATTENUATION_SGIS	include/GL/glext.h	1202;"	d
GL_DITHER	include/GL/gl.h	532;"	d
GL_DOMAIN	include/GL/gl.h	423;"	d
GL_DONT_CARE	include/GL/gl.h	759;"	d
GL_DOT2_ADD_ATI	include/GL/glext.h	2353;"	d
GL_DOT3_ATI	include/GL/glext.h	2347;"	d
GL_DOT3_RGB	include/GL/glext.h	277;"	d
GL_DOT3_RGBA	include/GL/glext.h	278;"	d
GL_DOT3_RGBA_ARB	include/GL/glext.h	564;"	d
GL_DOT3_RGBA_EXT	include/GL/glext.h	1998;"	d
GL_DOT3_RGB_ARB	include/GL/glext.h	563;"	d
GL_DOT3_RGB_EXT	include/GL/glext.h	1997;"	d
GL_DOT4_ATI	include/GL/glext.h	2348;"	d
GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV	include/GL/glext.h	2583;"	d
GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV	include/GL/glext.h	2093;"	d
GL_DOT_PRODUCT_DEPTH_REPLACE_NV	include/GL/glext.h	2088;"	d
GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV	include/GL/glext.h	2091;"	d
GL_DOT_PRODUCT_NV	include/GL/glext.h	2087;"	d
GL_DOT_PRODUCT_PASS_THROUGH_NV	include/GL/glext.h	2581;"	d
GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV	include/GL/glext.h	2092;"	d
GL_DOT_PRODUCT_TEXTURE_1D_NV	include/GL/glext.h	2582;"	d
GL_DOT_PRODUCT_TEXTURE_2D_NV	include/GL/glext.h	2089;"	d
GL_DOT_PRODUCT_TEXTURE_3D_NV	include/GL/glext.h	2139;"	d
GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV	include/GL/glext.h	2090;"	d
GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV	include/GL/glext.h	2065;"	d
GL_DOUBLE	include/GL/gl.h	237;"	d
GL_DOUBLEBUFFER	include/GL/gl.h	550;"	d
GL_DRAW_BUFFER	include/GL/gl.h	540;"	d
GL_DRAW_BUFFER0_ATI	include/GL/glext.h	2647;"	d
GL_DRAW_BUFFER10_ATI	include/GL/glext.h	2657;"	d
GL_DRAW_BUFFER11_ATI	include/GL/glext.h	2658;"	d
GL_DRAW_BUFFER12_ATI	include/GL/glext.h	2659;"	d
GL_DRAW_BUFFER13_ATI	include/GL/glext.h	2660;"	d
GL_DRAW_BUFFER14_ATI	include/GL/glext.h	2661;"	d
GL_DRAW_BUFFER15_ATI	include/GL/glext.h	2662;"	d
GL_DRAW_BUFFER1_ATI	include/GL/glext.h	2648;"	d
GL_DRAW_BUFFER2_ATI	include/GL/glext.h	2649;"	d
GL_DRAW_BUFFER3_ATI	include/GL/glext.h	2650;"	d
GL_DRAW_BUFFER4_ATI	include/GL/glext.h	2651;"	d
GL_DRAW_BUFFER5_ATI	include/GL/glext.h	2652;"	d
GL_DRAW_BUFFER6_ATI	include/GL/glext.h	2653;"	d
GL_DRAW_BUFFER7_ATI	include/GL/glext.h	2654;"	d
GL_DRAW_BUFFER8_ATI	include/GL/glext.h	2655;"	d
GL_DRAW_BUFFER9_ATI	include/GL/glext.h	2656;"	d
GL_DRAW_PIXELS_APPLE	include/GL/glext.h	2615;"	d
GL_DRAW_PIXEL_TOKEN	include/GL/gl.h	366;"	d
GL_DSDT8_MAG8_INTENSITY8_NV	include/GL/glext.h	2115;"	d
GL_DSDT8_MAG8_NV	include/GL/glext.h	2114;"	d
GL_DSDT8_NV	include/GL/glext.h	2113;"	d
GL_DSDT_MAG_INTENSITY_NV	include/GL/glext.h	2069;"	d
GL_DSDT_MAG_NV	include/GL/glext.h	2096;"	d
GL_DSDT_MAG_VIB_NV	include/GL/glext.h	2097;"	d
GL_DSDT_NV	include/GL/glext.h	2095;"	d
GL_DST_ALPHA	include/GL/gl.h	125;"	d
GL_DST_COLOR	include/GL/gl.h	135;"	d
GL_DS_BIAS_NV	include/GL/glext.h	2126;"	d
GL_DS_SCALE_NV	include/GL/glext.h	2120;"	d
GL_DT_BIAS_NV	include/GL/glext.h	2127;"	d
GL_DT_SCALE_NV	include/GL/glext.h	2121;"	d
GL_DU8DV8_ATI	include/GL/glext.h	2272;"	d
GL_DUAL_ALPHA12_SGIS	include/GL/glext.h	1155;"	d
GL_DUAL_ALPHA16_SGIS	include/GL/glext.h	1156;"	d
GL_DUAL_ALPHA4_SGIS	include/GL/glext.h	1153;"	d
GL_DUAL_ALPHA8_SGIS	include/GL/glext.h	1154;"	d
GL_DUAL_INTENSITY12_SGIS	include/GL/glext.h	1163;"	d
GL_DUAL_INTENSITY16_SGIS	include/GL/glext.h	1164;"	d
GL_DUAL_INTENSITY4_SGIS	include/GL/glext.h	1161;"	d
GL_DUAL_INTENSITY8_SGIS	include/GL/glext.h	1162;"	d
GL_DUAL_LUMINANCE12_SGIS	include/GL/glext.h	1159;"	d
GL_DUAL_LUMINANCE16_SGIS	include/GL/glext.h	1160;"	d
GL_DUAL_LUMINANCE4_SGIS	include/GL/glext.h	1157;"	d
GL_DUAL_LUMINANCE8_SGIS	include/GL/glext.h	1158;"	d
GL_DUAL_LUMINANCE_ALPHA4_SGIS	include/GL/glext.h	1165;"	d
GL_DUAL_LUMINANCE_ALPHA8_SGIS	include/GL/glext.h	1166;"	d
GL_DUAL_TEXTURE_SELECT_SGIS	include/GL/glext.h	1173;"	d
GL_DUDV_ATI	include/GL/glext.h	2271;"	d
GL_DYNAMIC_ATI	include/GL/glext.h	2398;"	d
GL_DYNAMIC_COPY	include/GL/glext.h	358;"	d
GL_DYNAMIC_COPY_ARB	include/GL/glext.h	723;"	d
GL_DYNAMIC_DRAW	include/GL/glext.h	356;"	d
GL_DYNAMIC_DRAW_ARB	include/GL/glext.h	721;"	d
GL_DYNAMIC_READ	include/GL/glext.h	357;"	d
GL_DYNAMIC_READ_ARB	include/GL/glext.h	722;"	d
GL_EDGEFLAG_BIT_PGI	include/GL/glext.h	1305;"	d
GL_EDGE_FLAG	include/GL/gl.h	484;"	d
GL_EDGE_FLAG_ARRAY	include/GL/gl.h	1296;"	d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING	include/GL/glext.h	339;"	d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB	include/GL/glext.h	704;"	d
GL_EDGE_FLAG_ARRAY_COUNT_EXT	include/GL/glext.h	1079;"	d
GL_EDGE_FLAG_ARRAY_EXT	include/GL/glext.h	1059;"	d
GL_EDGE_FLAG_ARRAY_LIST_IBM	include/GL/glext.h	1894;"	d
GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM	include/GL/glext.h	1902;"	d
GL_EDGE_FLAG_ARRAY_POINTER	include/GL/gl.h	1316;"	d
GL_EDGE_FLAG_ARRAY_POINTER_EXT	include/GL/glext.h	1085;"	d
GL_EDGE_FLAG_ARRAY_STRIDE	include/GL/gl.h	1310;"	d
GL_EDGE_FLAG_ARRAY_STRIDE_EXT	include/GL/glext.h	1078;"	d
GL_EIGHTH_BIT_ATI	include/GL/glext.h	2377;"	d
GL_ELEMENT_ARRAY_APPLE	include/GL/glext.h	2609;"	d
GL_ELEMENT_ARRAY_ATI	include/GL/glext.h	2534;"	d
GL_ELEMENT_ARRAY_BUFFER	include/GL/glext.h	331;"	d
GL_ELEMENT_ARRAY_BUFFER_ARB	include/GL/glext.h	696;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	include/GL/glext.h	333;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB	include/GL/glext.h	698;"	d
GL_ELEMENT_ARRAY_POINTER_APPLE	include/GL/glext.h	2611;"	d
GL_ELEMENT_ARRAY_POINTER_ATI	include/GL/glext.h	2536;"	d
GL_ELEMENT_ARRAY_TYPE_APPLE	include/GL/glext.h	2610;"	d
GL_ELEMENT_ARRAY_TYPE_ATI	include/GL/glext.h	2535;"	d
GL_EMBOSS_CONSTANT_NV	include/GL/glext.h	1853;"	d
GL_EMBOSS_LIGHT_NV	include/GL/glext.h	1852;"	d
GL_EMBOSS_MAP_NV	include/GL/glext.h	1854;"	d
GL_EMISSION	include/GL/gl.h	888;"	d
GL_ENABLE_BIT	include/GL/gl.h	89;"	d
GL_EQUAL	include/GL/gl.h	68;"	d
GL_EQUIV	include/GL/gl.h	854;"	d
GL_EVAL_2D_NV	include/GL/glext.h	2017;"	d
GL_EVAL_BIT	include/GL/gl.h	92;"	d
GL_EVAL_FRACTIONAL_TESSELLATION_NV	include/GL/glext.h	2022;"	d
GL_EVAL_TRIANGULAR_2D_NV	include/GL/glext.h	2018;"	d
GL_EVAL_VERTEX_ATTRIB0_NV	include/GL/glext.h	2023;"	d
GL_EVAL_VERTEX_ATTRIB10_NV	include/GL/glext.h	2033;"	d
GL_EVAL_VERTEX_ATTRIB11_NV	include/GL/glext.h	2034;"	d
GL_EVAL_VERTEX_ATTRIB12_NV	include/GL/glext.h	2035;"	d
GL_EVAL_VERTEX_ATTRIB13_NV	include/GL/glext.h	2036;"	d
GL_EVAL_VERTEX_ATTRIB14_NV	include/GL/glext.h	2037;"	d
GL_EVAL_VERTEX_ATTRIB15_NV	include/GL/glext.h	2038;"	d
GL_EVAL_VERTEX_ATTRIB1_NV	include/GL/glext.h	2024;"	d
GL_EVAL_VERTEX_ATTRIB2_NV	include/GL/glext.h	2025;"	d
GL_EVAL_VERTEX_ATTRIB3_NV	include/GL/glext.h	2026;"	d
GL_EVAL_VERTEX_ATTRIB4_NV	include/GL/glext.h	2027;"	d
GL_EVAL_VERTEX_ATTRIB5_NV	include/GL/glext.h	2028;"	d
GL_EVAL_VERTEX_ATTRIB6_NV	include/GL/glext.h	2029;"	d
GL_EVAL_VERTEX_ATTRIB7_NV	include/GL/glext.h	2030;"	d
GL_EVAL_VERTEX_ATTRIB8_NV	include/GL/glext.h	2031;"	d
GL_EVAL_VERTEX_ATTRIB9_NV	include/GL/glext.h	2032;"	d
GL_EXP	include/GL/gl.h	372;"	d
GL_EXP2	include/GL/gl.h	373;"	d
GL_EXPAND_NEGATE_NV	include/GL/glext.h	1806;"	d
GL_EXPAND_NORMAL_NV	include/GL/glext.h	1805;"	d
GL_EXTENSIONS	include/GL/gl.h	1113;"	d
GL_EXT_422_pixels	include/GL/glext.h	4740;"	d
GL_EXT_abgr	include/GL/gl.h	1517;"	d
GL_EXT_abgr	include/GL/glext.h	3672;"	d
GL_EXT_bgra	include/GL/glext.h	4358;"	d
GL_EXT_blend_color	include/GL/gl.h	1518;"	d
GL_EXT_blend_color	include/GL/glext.h	3676;"	d
GL_EXT_blend_equation_separate	include/GL/glext.h	5899;"	d
GL_EXT_blend_func_separate	include/GL/glext.h	4712;"	d
GL_EXT_blend_logic_op	include/GL/glext.h	3988;"	d
GL_EXT_blend_minmax	include/GL/gl.h	1519;"	d
GL_EXT_blend_minmax	include/GL/glext.h	3976;"	d
GL_EXT_blend_subtract	include/GL/gl.h	1520;"	d
GL_EXT_blend_subtract	include/GL/glext.h	3984;"	d
GL_EXT_clip_volume_hint	include/GL/glext.h	4190;"	d
GL_EXT_cmyka	include/GL/glext.h	3864;"	d
GL_EXT_color_matrix	include/GL/glext.h	3800;"	d
GL_EXT_color_subtable	include/GL/glext.h	4154;"	d
GL_EXT_compiled_vertex_array	include/GL/glext.h	4252;"	d
GL_EXT_convolution	include/GL/glext.h	3768;"	d
GL_EXT_coordinate_frame	include/GL/glext.h	4510;"	d
GL_EXT_copy_texture	include/GL/glext.h	3726;"	d
GL_EXT_cull_vertex	include/GL/glext.h	4262;"	d
GL_EXT_depth_bounds_test	include/GL/glext.h	5887;"	d
GL_EXT_draw_range_elements	include/GL/glext.h	4326;"	d
GL_EXT_fog_coord	include/GL/glext.h	4490;"	d
GL_EXT_histogram	include/GL/glext.h	3742;"	d
GL_EXT_index_array_formats	include/GL/glext.h	4248;"	d
GL_EXT_index_func	include/GL/glext.h	4240;"	d
GL_EXT_index_material	include/GL/glext.h	4232;"	d
GL_EXT_index_texture	include/GL/glext.h	4228;"	d
GL_EXT_light_texture	include/GL/glext.h	4342;"	d
GL_EXT_misc_attribute	include/GL/glext.h	3952;"	d
GL_EXT_multi_draw_arrays	include/GL/glext.h	4480;"	d
GL_EXT_multisample	include/GL/glext.h	4968;"	d
GL_EXT_packed_pixels	include/GL/glext.h	3906;"	d
GL_EXT_paletted_texture	include/GL/glext.h	4176;"	d
GL_EXT_pixel_transform	include/GL/glext.h	4406;"	d
GL_EXT_pixel_transform_color_table	include/GL/glext.h	4420;"	d
GL_EXT_point_parameters	include/GL/glext.h	4022;"	d
GL_EXT_polygon_offset	include/GL/glext.h	3684;"	d
GL_EXT_rescale_normal	include/GL/glext.h	3924;"	d
GL_EXT_secondary_color	include/GL/glext.h	4432;"	d
GL_EXT_separate_specular_color	include/GL/glext.h	4428;"	d
GL_EXT_shadow_funcs	include/GL/glext.h	5598;"	d
GL_EXT_shared_texture_palette	include/GL/glext.h	4424;"	d
GL_EXT_stencil_two_side	include/GL/glext.h	5602;"	d
GL_EXT_stencil_wrap	include/GL/glext.h	4736;"	d
GL_EXT_subtexture	include/GL/glext.h	3716;"	d
GL_EXT_texture	include/GL/glext.h	3692;"	d
GL_EXT_texture3D	include/GL/glext.h	3696;"	d
GL_EXT_texture_env_add	include/GL/gl.h	1522;"	d
GL_EXT_texture_env_add	include/GL/glext.h	4752;"	d
GL_EXT_texture_env_combine	include/GL/gl.h	1521;"	d
GL_EXT_texture_env_combine	include/GL/glext.h	4560;"	d
GL_EXT_texture_env_dot3	include/GL/glext.h	5010;"	d
GL_EXT_texture_filter_anisotropic	include/GL/glext.h	4760;"	d
GL_EXT_texture_lod_bias	include/GL/glext.h	4756;"	d
GL_EXT_texture_mirror_clamp	include/GL/glext.h	5895;"	d
GL_EXT_texture_object	include/GL/glext.h	3868;"	d
GL_EXT_texture_perturb_normal	include/GL/glext.h	4472;"	d
GL_EXT_vertex_array	include/GL/glext.h	3928;"	d
GL_EXT_vertex_shader	include/GL/glext.h	5342;"	d
GL_EXT_vertex_weighting	include/GL/glext.h	4764;"	d
GL_EYE_DISTANCE_TO_LINE_SGIS	include/GL/glext.h	1984;"	d
GL_EYE_DISTANCE_TO_POINT_SGIS	include/GL/glext.h	1982;"	d
GL_EYE_LINEAR	include/GL/gl.h	1141;"	d
GL_EYE_LINE_SGIS	include/GL/glext.h	1988;"	d
GL_EYE_PLANE	include/GL/gl.h	1148;"	d
GL_EYE_PLANE_ABSOLUTE_NV	include/GL/glext.h	1847;"	d
GL_EYE_POINT_SGIS	include/GL/glext.h	1986;"	d
GL_EYE_RADIAL_NV	include/GL/glext.h	1846;"	d
GL_E_TIMES_F_NV	include/GL/glext.h	1801;"	d
GL_FALSE	include/GL/gl.h	149;"	d
GL_FASTEST	include/GL/gl.h	760;"	d
GL_FEEDBACK	include/GL/gl.h	1081;"	d
GL_FEEDBACK_BUFFER_POINTER	include/GL/gl.h	660;"	d
GL_FEEDBACK_BUFFER_SIZE	include/GL/gl.h	661;"	d
GL_FEEDBACK_BUFFER_TYPE	include/GL/gl.h	662;"	d
GL_FENCE_APPLE	include/GL/glext.h	2616;"	d
GL_FENCE_CONDITION_NV	include/GL/glext.h	2009;"	d
GL_FENCE_STATUS_NV	include/GL/glext.h	2008;"	d
GL_FILL	include/GL/gl.h	1063;"	d
GL_FILTER4_SGIS	include/GL/glext.h	869;"	d
GL_FLAT	include/GL/gl.h	1088;"	d
GL_FLOAT	include/GL/gl.h	233;"	d
GL_FLOAT_CLEAR_COLOR_VALUE_NV	include/GL/glext.h	2700;"	d
GL_FLOAT_MAT2_ARB	include/GL/glext.h	749;"	d
GL_FLOAT_MAT3_ARB	include/GL/glext.h	750;"	d
GL_FLOAT_MAT4_ARB	include/GL/glext.h	751;"	d
GL_FLOAT_R16_NV	include/GL/glext.h	2691;"	d
GL_FLOAT_R32_NV	include/GL/glext.h	2692;"	d
GL_FLOAT_RG16_NV	include/GL/glext.h	2693;"	d
GL_FLOAT_RG32_NV	include/GL/glext.h	2694;"	d
GL_FLOAT_RGB16_NV	include/GL/glext.h	2695;"	d
GL_FLOAT_RGB32_NV	include/GL/glext.h	2696;"	d
GL_FLOAT_RGBA16_NV	include/GL/glext.h	2697;"	d
GL_FLOAT_RGBA32_NV	include/GL/glext.h	2698;"	d
GL_FLOAT_RGBA_MODE_NV	include/GL/glext.h	2701;"	d
GL_FLOAT_RGBA_NV	include/GL/glext.h	2690;"	d
GL_FLOAT_RGB_NV	include/GL/glext.h	2689;"	d
GL_FLOAT_RG_NV	include/GL/glext.h	2688;"	d
GL_FLOAT_R_NV	include/GL/glext.h	2687;"	d
GL_FLOAT_VEC2_ARB	include/GL/glext.h	739;"	d
GL_FLOAT_VEC3_ARB	include/GL/glext.h	740;"	d
GL_FLOAT_VEC4_ARB	include/GL/glext.h	741;"	d
GL_FOG	include/GL/gl.h	496;"	d
GL_FOG_BIT	include/GL/gl.h	83;"	d
GL_FOG_COLOR	include/GL/gl.h	502;"	d
GL_FOG_COORD	include/GL/glext.h	361;"	d
GL_FOG_COORDINATE	include/GL/glext.h	297;"	d
GL_FOG_COORDINATE_ARRAY	include/GL/glext.h	303;"	d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING	include/GL/glext.h	341;"	d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB	include/GL/glext.h	706;"	d
GL_FOG_COORDINATE_ARRAY_EXT	include/GL/glext.h	1589;"	d
GL_FOG_COORDINATE_ARRAY_LIST_IBM	include/GL/glext.h	1895;"	d
GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM	include/GL/glext.h	1903;"	d
GL_FOG_COORDINATE_ARRAY_POINTER	include/GL/glext.h	302;"	d
GL_FOG_COORDINATE_ARRAY_POINTER_EXT	include/GL/glext.h	1588;"	d
GL_FOG_COORDINATE_ARRAY_STRIDE	include/GL/glext.h	301;"	d
GL_FOG_COORDINATE_ARRAY_STRIDE_EXT	include/GL/glext.h	1587;"	d
GL_FOG_COORDINATE_ARRAY_TYPE	include/GL/glext.h	300;"	d
GL_FOG_COORDINATE_ARRAY_TYPE_EXT	include/GL/glext.h	1586;"	d
GL_FOG_COORDINATE_EXT	include/GL/glext.h	1583;"	d
GL_FOG_COORDINATE_SOURCE	include/GL/glext.h	296;"	d
GL_FOG_COORDINATE_SOURCE_EXT	include/GL/glext.h	1582;"	d
GL_FOG_COORD_ARRAY	include/GL/glext.h	366;"	d
GL_FOG_COORD_ARRAY_BUFFER_BINDING	include/GL/glext.h	367;"	d
GL_FOG_COORD_ARRAY_POINTER	include/GL/glext.h	365;"	d
GL_FOG_COORD_ARRAY_STRIDE	include/GL/glext.h	364;"	d
GL_FOG_COORD_ARRAY_TYPE	include/GL/glext.h	363;"	d
GL_FOG_COORD_SOURCE	include/GL/glext.h	360;"	d
GL_FOG_DENSITY	include/GL/gl.h	498;"	d
GL_FOG_DISTANCE_MODE_NV	include/GL/glext.h	1845;"	d
GL_FOG_END	include/GL/gl.h	500;"	d
GL_FOG_FUNC_POINTS_SGIS	include/GL/glext.h	1254;"	d
GL_FOG_FUNC_SGIS	include/GL/glext.h	1253;"	d
GL_FOG_HINT	include/GL/gl.h	557;"	d
GL_FOG_INDEX	include/GL/gl.h	497;"	d
GL_FOG_MODE	include/GL/gl.h	501;"	d
GL_FOG_OFFSET_SGIX	include/GL/glext.h	1259;"	d
GL_FOG_OFFSET_VALUE_SGIX	include/GL/glext.h	1260;"	d
GL_FOG_SCALE_SGIX	include/GL/glext.h	1647;"	d
GL_FOG_SCALE_VALUE_SGIX	include/GL/glext.h	1648;"	d
GL_FOG_SPECULAR_TEXTURE_WIN	include/GL/glext.h	1468;"	d
GL_FOG_START	include/GL/gl.h	499;"	d
GL_FORCE_BLUE_TO_ONE_NV	include/GL/glext.h	2586;"	d
GL_FORMAT_SUBSAMPLE_244_244_OML	include/GL/glext.h	2249;"	d
GL_FORMAT_SUBSAMPLE_24_24_OML	include/GL/glext.h	2248;"	d
GL_FRAGMENT_COLOR_EXT	include/GL/glext.h	1474;"	d
GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX	include/GL/glext.h	1427;"	d
GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX	include/GL/glext.h	1428;"	d
GL_FRAGMENT_COLOR_MATERIAL_SGIX	include/GL/glext.h	1426;"	d
GL_FRAGMENT_DEPTH	include/GL/glext.h	298;"	d
GL_FRAGMENT_DEPTH_EXT	include/GL/glext.h	1584;"	d
GL_FRAGMENT_LIGHT0_SGIX	include/GL/glext.h	1437;"	d
GL_FRAGMENT_LIGHT1_SGIX	include/GL/glext.h	1438;"	d
GL_FRAGMENT_LIGHT2_SGIX	include/GL/glext.h	1439;"	d
GL_FRAGMENT_LIGHT3_SGIX	include/GL/glext.h	1440;"	d
GL_FRAGMENT_LIGHT4_SGIX	include/GL/glext.h	1441;"	d
GL_FRAGMENT_LIGHT5_SGIX	include/GL/glext.h	1442;"	d
GL_FRAGMENT_LIGHT6_SGIX	include/GL/glext.h	1443;"	d
GL_FRAGMENT_LIGHT7_SGIX	include/GL/glext.h	1444;"	d
GL_FRAGMENT_LIGHTING_SGIX	include/GL/glext.h	1425;"	d
GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX	include/GL/glext.h	1435;"	d
GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX	include/GL/glext.h	1433;"	d
GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX	include/GL/glext.h	1436;"	d
GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX	include/GL/glext.h	1434;"	d
GL_FRAGMENT_MATERIAL_EXT	include/GL/glext.h	1472;"	d
GL_FRAGMENT_NORMAL_EXT	include/GL/glext.h	1473;"	d
GL_FRAGMENT_PROGRAM_ARB	include/GL/glext.h	675;"	d
GL_FRAGMENT_PROGRAM_BINDING_NV	include/GL/glext.h	2709;"	d
GL_FRAGMENT_PROGRAM_NV	include/GL/glext.h	2706;"	d
GL_FRAGMENT_SHADER_ARB	include/GL/glext.h	774;"	d
GL_FRAGMENT_SHADER_ATI	include/GL/glext.h	2278;"	d
GL_FRAMEZOOM_FACTOR_SGIX	include/GL/glext.h	1219;"	d
GL_FRAMEZOOM_SGIX	include/GL/glext.h	1218;"	d
GL_FRONT	include/GL/gl.h	255;"	d
GL_FRONT_AND_BACK	include/GL/gl.h	259;"	d
GL_FRONT_FACE	include/GL/gl.h	487;"	d
GL_FRONT_LEFT	include/GL/gl.h	251;"	d
GL_FRONT_RIGHT	include/GL/gl.h	252;"	d
GL_FULL_RANGE_EXT	include/GL/glext.h	2505;"	d
GL_FULL_STIPPLE_HINT_PGI	include/GL/glext.h	1339;"	d
GL_FUNC_ADD	include/GL/gl.h	1344;"	d
GL_FUNC_ADD	include/GL/glext.h	109;"	d
GL_FUNC_ADD_EXT	include/GL/gl.h	1535;"	d
GL_FUNC_ADD_EXT	include/GL/glext.h	1123;"	d
GL_FUNC_REVERSE_SUBTRACT	include/GL/gl.h	1351;"	d
GL_FUNC_REVERSE_SUBTRACT	include/GL/glext.h	114;"	d
GL_FUNC_REVERSE_SUBTRACT_EXT	include/GL/gl.h	1542;"	d
GL_FUNC_REVERSE_SUBTRACT_EXT	include/GL/glext.h	1131;"	d
GL_FUNC_SUBTRACT	include/GL/gl.h	1350;"	d
GL_FUNC_SUBTRACT	include/GL/glext.h	113;"	d
GL_FUNC_SUBTRACT_EXT	include/GL/gl.h	1541;"	d
GL_FUNC_SUBTRACT_EXT	include/GL/glext.h	1130;"	d
GL_GENERATE_MIPMAP	include/GL/glext.h	290;"	d
GL_GENERATE_MIPMAP_HINT	include/GL/glext.h	291;"	d
GL_GENERATE_MIPMAP_HINT_SGIS	include/GL/glext.h	1093;"	d
GL_GENERATE_MIPMAP_SGIS	include/GL/glext.h	1092;"	d
GL_GEOMETRY_DEFORMATION_BIT_SGIX	include/GL/glext.h	1228;"	d
GL_GEOMETRY_DEFORMATION_SGIX	include/GL/glext.h	1232;"	d
GL_GEQUAL	include/GL/gl.h	72;"	d
GL_GLEXT_VERSION	include/GL/glext.h	57;"	d
GL_GLOBAL_ALPHA_FACTOR_SUN	include/GL/glext.h	1658;"	d
GL_GLOBAL_ALPHA_SUN	include/GL/glext.h	1657;"	d
GL_GREATER	include/GL/gl.h	70;"	d
GL_GREEN	include/GL/gl.h	930;"	d
GL_GREEN_BIAS	include/GL/gl.h	603;"	d
GL_GREEN_BITS	include/GL/gl.h	625;"	d
GL_GREEN_BIT_ATI	include/GL/glext.h	2370;"	d
GL_GREEN_MAX_CLAMP_INGR	include/GL/glext.h	1697;"	d
GL_GREEN_MIN_CLAMP_INGR	include/GL/glext.h	1693;"	d
GL_GREEN_SCALE	include/GL/gl.h	602;"	d
GL_HALF_BIAS_NEGATE_NV	include/GL/glext.h	1808;"	d
GL_HALF_BIAS_NORMAL_NV	include/GL/glext.h	1807;"	d
GL_HALF_BIT_ATI	include/GL/glext.h	2375;"	d
GL_HALF_FLOAT_NV	include/GL/glext.h	2714;"	d
GL_HILO16_NV	include/GL/glext.h	2098;"	d
GL_HILO8_NV	include/GL/glext.h	2584;"	d
GL_HILO_NV	include/GL/glext.h	2094;"	d
GL_HINT_BIT	include/GL/gl.h	91;"	d
GL_HISTOGRAM	include/GL/gl.h	1414;"	d
GL_HISTOGRAM	include/GL/glext.h	135;"	d
GL_HISTOGRAM_ALPHA_SIZE	include/GL/gl.h	1421;"	d
GL_HISTOGRAM_ALPHA_SIZE	include/GL/glext.h	142;"	d
GL_HISTOGRAM_ALPHA_SIZE_EXT	include/GL/glext.h	887;"	d
GL_HISTOGRAM_BLUE_SIZE	include/GL/gl.h	1420;"	d
GL_HISTOGRAM_BLUE_SIZE	include/GL/glext.h	141;"	d
GL_HISTOGRAM_BLUE_SIZE_EXT	include/GL/glext.h	886;"	d
GL_HISTOGRAM_EXT	include/GL/glext.h	880;"	d
GL_HISTOGRAM_FORMAT	include/GL/gl.h	1417;"	d
GL_HISTOGRAM_FORMAT	include/GL/glext.h	138;"	d
GL_HISTOGRAM_FORMAT_EXT	include/GL/glext.h	883;"	d
GL_HISTOGRAM_GREEN_SIZE	include/GL/gl.h	1419;"	d
GL_HISTOGRAM_GREEN_SIZE	include/GL/glext.h	140;"	d
GL_HISTOGRAM_GREEN_SIZE_EXT	include/GL/glext.h	885;"	d
GL_HISTOGRAM_LUMINANCE_SIZE	include/GL/gl.h	1422;"	d
GL_HISTOGRAM_LUMINANCE_SIZE	include/GL/glext.h	143;"	d
GL_HISTOGRAM_LUMINANCE_SIZE_EXT	include/GL/glext.h	888;"	d
GL_HISTOGRAM_RED_SIZE	include/GL/gl.h	1418;"	d
GL_HISTOGRAM_RED_SIZE	include/GL/glext.h	139;"	d
GL_HISTOGRAM_RED_SIZE_EXT	include/GL/glext.h	884;"	d
GL_HISTOGRAM_SINK	include/GL/gl.h	1423;"	d
GL_HISTOGRAM_SINK	include/GL/glext.h	144;"	d
GL_HISTOGRAM_SINK_EXT	include/GL/glext.h	889;"	d
GL_HISTOGRAM_WIDTH	include/GL/gl.h	1416;"	d
GL_HISTOGRAM_WIDTH	include/GL/glext.h	137;"	d
GL_HISTOGRAM_WIDTH_EXT	include/GL/glext.h	882;"	d
GL_HI_BIAS_NV	include/GL/glext.h	2124;"	d
GL_HI_SCALE_NV	include/GL/glext.h	2118;"	d
GL_HP_convolution_border_modes	include/GL/glext.h	4146;"	d
GL_HP_image_transform	include/GL/glext.h	4128;"	d
GL_HP_occlusion_test	include/GL/glext.h	4402;"	d
GL_HP_texture_lighting	include/GL/glext.h	4322;"	d
GL_IBM_cull_vertex	include/GL/glext.h	4900;"	d
GL_IBM_multimode_draw_arrays	include/GL/glext.h	4904;"	d
GL_IBM_rasterpos_clip	include/GL/glext.h	4318;"	d
GL_IBM_vertex_array_lists	include/GL/glext.h	4914;"	d
GL_IDENTITY_NV	include/GL/glext.h	2156;"	d
GL_IGNORE_BORDER_HP	include/GL/glext.h	1282;"	d
GL_IMAGE_CUBIC_WEIGHT_HP	include/GL/glext.h	1273;"	d
GL_IMAGE_MAG_FILTER_HP	include/GL/glext.h	1271;"	d
GL_IMAGE_MIN_FILTER_HP	include/GL/glext.h	1272;"	d
GL_IMAGE_ROTATE_ANGLE_HP	include/GL/glext.h	1268;"	d
GL_IMAGE_ROTATE_ORIGIN_X_HP	include/GL/glext.h	1269;"	d
GL_IMAGE_ROTATE_ORIGIN_Y_HP	include/GL/glext.h	1270;"	d
GL_IMAGE_SCALE_X_HP	include/GL/glext.h	1264;"	d
GL_IMAGE_SCALE_Y_HP	include/GL/glext.h	1265;"	d
GL_IMAGE_TRANSFORM_2D_HP	include/GL/glext.h	1276;"	d
GL_IMAGE_TRANSLATE_X_HP	include/GL/glext.h	1266;"	d
GL_IMAGE_TRANSLATE_Y_HP	include/GL/glext.h	1267;"	d
GL_INCR	include/GL/gl.h	1105;"	d
GL_INCR_WRAP	include/GL/glext.h	314;"	d
GL_INCR_WRAP_EXT	include/GL/glext.h	1707;"	d
GL_INDEX_ARRAY	include/GL/gl.h	1294;"	d
GL_INDEX_ARRAY_BUFFER_BINDING	include/GL/glext.h	337;"	d
GL_INDEX_ARRAY_BUFFER_BINDING_ARB	include/GL/glext.h	702;"	d
GL_INDEX_ARRAY_COUNT_EXT	include/GL/glext.h	1073;"	d
GL_INDEX_ARRAY_EXT	include/GL/glext.h	1057;"	d
GL_INDEX_ARRAY_LIST_IBM	include/GL/glext.h	1892;"	d
GL_INDEX_ARRAY_LIST_STRIDE_IBM	include/GL/glext.h	1900;"	d
GL_INDEX_ARRAY_POINTER	include/GL/gl.h	1314;"	d
GL_INDEX_ARRAY_POINTER_EXT	include/GL/glext.h	1083;"	d
GL_INDEX_ARRAY_STRIDE	include/GL/gl.h	1306;"	d
GL_INDEX_ARRAY_STRIDE_EXT	include/GL/glext.h	1072;"	d
GL_INDEX_ARRAY_TYPE	include/GL/gl.h	1305;"	d
GL_INDEX_ARRAY_TYPE_EXT	include/GL/glext.h	1071;"	d
GL_INDEX_BITS	include/GL/gl.h	623;"	d
GL_INDEX_BIT_PGI	include/GL/glext.h	1306;"	d
GL_INDEX_CLEAR_VALUE	include/GL/gl.h	544;"	d
GL_INDEX_LOGIC_OP	include/GL/gl.h	537;"	d
GL_INDEX_MATERIAL_EXT	include/GL/glext.h	1386;"	d
GL_INDEX_MATERIAL_FACE_EXT	include/GL/glext.h	1388;"	d
GL_INDEX_MATERIAL_PARAMETER_EXT	include/GL/glext.h	1387;"	d
GL_INDEX_MODE	include/GL/gl.h	548;"	d
GL_INDEX_OFFSET	include/GL/gl.h	597;"	d
GL_INDEX_SHIFT	include/GL/gl.h	596;"	d
GL_INDEX_TEST_EXT	include/GL/glext.h	1392;"	d
GL_INDEX_TEST_FUNC_EXT	include/GL/glext.h	1393;"	d
GL_INDEX_TEST_REF_EXT	include/GL/glext.h	1394;"	d
GL_INDEX_WRITEMASK	include/GL/gl.h	545;"	d
GL_INGR_blend_func_separate	include/GL/glext.h	4720;"	d
GL_INGR_color_clamp	include/GL/glext.h	4728;"	d
GL_INGR_interlace_read	include/GL/glext.h	4732;"	d
GL_INSTRUMENT_BUFFER_POINTER_SGIX	include/GL/glext.h	1206;"	d
GL_INSTRUMENT_MEASUREMENTS_SGIX	include/GL/glext.h	1207;"	d
GL_INT	include/GL/gl.h	231;"	d
GL_INTEL_parallel_arrays	include/GL/glext.h	4388;"	d
GL_INTENSITY	include/GL/gl.h	1255;"	d
GL_INTENSITY12	include/GL/gl.h	1258;"	d
GL_INTENSITY12_EXT	include/GL/glext.h	828;"	d
GL_INTENSITY16	include/GL/gl.h	1259;"	d
GL_INTENSITY16_EXT	include/GL/glext.h	829;"	d
GL_INTENSITY4	include/GL/gl.h	1256;"	d
GL_INTENSITY4_EXT	include/GL/glext.h	826;"	d
GL_INTENSITY8	include/GL/gl.h	1257;"	d
GL_INTENSITY8_EXT	include/GL/glext.h	827;"	d
GL_INTENSITY_EXT	include/GL/glext.h	825;"	d
GL_INTENSITY_FLOAT16_ATI	include/GL/glext.h	2681;"	d
GL_INTENSITY_FLOAT32_ATI	include/GL/glext.h	2675;"	d
GL_INTERLACE_OML	include/GL/glext.h	2243;"	d
GL_INTERLACE_READ_INGR	include/GL/glext.h	1703;"	d
GL_INTERLACE_READ_OML	include/GL/glext.h	2244;"	d
GL_INTERLACE_SGIX	include/GL/glext.h	1138;"	d
GL_INTERPOLATE	include/GL/glext.h	272;"	d
GL_INTERPOLATE_ARB	include/GL/glext.h	552;"	d
GL_INTERPOLATE_EXT	include/GL/gl.h	1550;"	d
GL_INTERPOLATE_EXT	include/GL/glext.h	1620;"	d
GL_INT_VEC2_ARB	include/GL/glext.h	742;"	d
GL_INT_VEC3_ARB	include/GL/glext.h	743;"	d
GL_INT_VEC4_ARB	include/GL/glext.h	744;"	d
GL_INVALID_ENUM	include/GL/gl.h	345;"	d
GL_INVALID_OPERATION	include/GL/gl.h	347;"	d
GL_INVALID_VALUE	include/GL/gl.h	346;"	d
GL_INVARIANT_DATATYPE_EXT	include/GL/glext.h	2515;"	d
GL_INVARIANT_EXT	include/GL/glext.h	2474;"	d
GL_INVARIANT_VALUE_EXT	include/GL/glext.h	2514;"	d
GL_INVERSE_NV	include/GL/glext.h	2157;"	d
GL_INVERSE_TRANSPOSE_NV	include/GL/glext.h	2159;"	d
GL_INVERT	include/GL/gl.h	855;"	d
GL_INVERTED_SCREEN_W_REND	include/GL/glext.h	1594;"	d
GL_IR_INSTRUMENT1_SGIX	include/GL/glext.h	1365;"	d
GL_IUI_N3F_V2F_EXT	include/GL/glext.h	1400;"	d
GL_IUI_N3F_V3F_EXT	include/GL/glext.h	1401;"	d
GL_IUI_V2F_EXT	include/GL/glext.h	1398;"	d
GL_IUI_V3F_EXT	include/GL/glext.h	1399;"	d
GL_KEEP	include/GL/gl.h	1103;"	d
GL_LEFT	include/GL/gl.h	257;"	d
GL_LEQUAL	include/GL/gl.h	69;"	d
GL_LERP_ATI	include/GL/glext.h	2350;"	d
GL_LESS	include/GL/gl.h	67;"	d
GL_LIGHT0	include/GL/gl.h	791;"	d
GL_LIGHT1	include/GL/gl.h	792;"	d
GL_LIGHT2	include/GL/gl.h	793;"	d
GL_LIGHT3	include/GL/gl.h	794;"	d
GL_LIGHT4	include/GL/gl.h	795;"	d
GL_LIGHT5	include/GL/gl.h	796;"	d
GL_LIGHT6	include/GL/gl.h	797;"	d
GL_LIGHT7	include/GL/gl.h	798;"	d
GL_LIGHTING	include/GL/gl.h	488;"	d
GL_LIGHTING_BIT	include/GL/gl.h	82;"	d
GL_LIGHT_ENV_MODE_SGIX	include/GL/glext.h	1432;"	d
GL_LIGHT_MODEL_AMBIENT	include/GL/gl.h	491;"	d
GL_LIGHT_MODEL_COLOR_CONTROL	include/GL/gl.h	1447;"	d
GL_LIGHT_MODEL_COLOR_CONTROL	include/GL/glext.h	92;"	d
GL_LIGHT_MODEL_COLOR_CONTROL_EXT	include/GL/glext.h	1558;"	d
GL_LIGHT_MODEL_LOCAL_VIEWER	include/GL/gl.h	489;"	d
GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE	include/GL/glext.h	1639;"	d
GL_LIGHT_MODEL_TWO_SIDE	include/GL/gl.h	490;"	d
GL_LINE	include/GL/gl.h	1062;"	d
GL_LINEAR	include/GL/gl.h	1152;"	d
GL_LINEAR_ATTENUATION	include/GL/gl.h	809;"	d
GL_LINEAR_CLIPMAP_LINEAR_SGIX	include/GL/glext.h	1097;"	d
GL_LINEAR_CLIPMAP_NEAREST_SGIX	include/GL/glext.h	1108;"	d
GL_LINEAR_DETAIL_ALPHA_SGIS	include/GL/glext.h	1001;"	d
GL_LINEAR_DETAIL_COLOR_SGIS	include/GL/glext.h	1002;"	d
GL_LINEAR_DETAIL_SGIS	include/GL/glext.h	1000;"	d
GL_LINEAR_MIPMAP_LINEAR	include/GL/gl.h	1160;"	d
GL_LINEAR_MIPMAP_NEAREST	include/GL/gl.h	1158;"	d
GL_LINEAR_SHARPEN_ALPHA_SGIS	include/GL/glext.h	1010;"	d
GL_LINEAR_SHARPEN_COLOR_SGIS	include/GL/glext.h	1011;"	d
GL_LINEAR_SHARPEN_SGIS	include/GL/glext.h	1009;"	d
GL_LINES	include/GL/gl.h	100;"	d
GL_LINE_BIT	include/GL/gl.h	78;"	d
GL_LINE_LOOP	include/GL/gl.h	101;"	d
GL_LINE_RESET_TOKEN	include/GL/gl.h	368;"	d
GL_LINE_SMOOTH	include/GL/gl.h	464;"	d
GL_LINE_SMOOTH_HINT	include/GL/gl.h	555;"	d
GL_LINE_STIPPLE	include/GL/gl.h	468;"	d
GL_LINE_STIPPLE_PATTERN	include/GL/gl.h	469;"	d
GL_LINE_STIPPLE_REPEAT	include/GL/gl.h	470;"	d
GL_LINE_STRIP	include/GL/gl.h	102;"	d
GL_LINE_TOKEN	include/GL/gl.h	363;"	d
GL_LINE_WIDTH	include/GL/gl.h	465;"	d
GL_LINE_WIDTH_GRANULARITY	include/GL/gl.h	467;"	d
GL_LINE_WIDTH_RANGE	include/GL/gl.h	466;"	d
GL_LIST_BASE	include/GL/gl.h	479;"	d
GL_LIST_BIT	include/GL/gl.h	93;"	d
GL_LIST_INDEX	include/GL/gl.h	480;"	d
GL_LIST_MODE	include/GL/gl.h	477;"	d
GL_LIST_PRIORITY_SGIX	include/GL/glext.h	1361;"	d
GL_LOAD	include/GL/gl.h	60;"	d
GL_LOCAL_CONSTANT_DATATYPE_EXT	include/GL/glext.h	2517;"	d
GL_LOCAL_CONSTANT_EXT	include/GL/glext.h	2475;"	d
GL_LOCAL_CONSTANT_VALUE_EXT	include/GL/glext.h	2516;"	d
GL_LOCAL_EXT	include/GL/glext.h	2476;"	d
GL_LOGIC_OP	include/GL/gl.h	1568;"	d
GL_LOGIC_OP_MODE	include/GL/gl.h	536;"	d
GL_LO_BIAS_NV	include/GL/glext.h	2125;"	d
GL_LO_SCALE_NV	include/GL/glext.h	2119;"	d
GL_LUMINANCE	include/GL/gl.h	935;"	d
GL_LUMINANCE12	include/GL/gl.h	1247;"	d
GL_LUMINANCE12_ALPHA12	include/GL/gl.h	1253;"	d
GL_LUMINANCE12_ALPHA12_EXT	include/GL/glext.h	823;"	d
GL_LUMINANCE12_ALPHA4	include/GL/gl.h	1252;"	d
GL_LUMINANCE12_ALPHA4_EXT	include/GL/glext.h	822;"	d
GL_LUMINANCE12_EXT	include/GL/glext.h	817;"	d
GL_LUMINANCE16	include/GL/gl.h	1248;"	d
GL_LUMINANCE16_ALPHA16	include/GL/gl.h	1254;"	d
GL_LUMINANCE16_ALPHA16_EXT	include/GL/glext.h	824;"	d
GL_LUMINANCE16_EXT	include/GL/glext.h	818;"	d
GL_LUMINANCE4	include/GL/gl.h	1245;"	d
GL_LUMINANCE4_ALPHA4	include/GL/gl.h	1249;"	d
GL_LUMINANCE4_ALPHA4_EXT	include/GL/glext.h	819;"	d
GL_LUMINANCE4_EXT	include/GL/glext.h	815;"	d
GL_LUMINANCE6_ALPHA2	include/GL/gl.h	1250;"	d
GL_LUMINANCE6_ALPHA2_EXT	include/GL/glext.h	820;"	d
GL_LUMINANCE8	include/GL/gl.h	1246;"	d
GL_LUMINANCE8_ALPHA8	include/GL/gl.h	1251;"	d
GL_LUMINANCE8_ALPHA8_EXT	include/GL/glext.h	821;"	d
GL_LUMINANCE8_EXT	include/GL/glext.h	816;"	d
GL_LUMINANCE_ALPHA	include/GL/gl.h	936;"	d
GL_LUMINANCE_ALPHA_FLOAT16_ATI	include/GL/glext.h	2683;"	d
GL_LUMINANCE_ALPHA_FLOAT32_ATI	include/GL/glext.h	2677;"	d
GL_LUMINANCE_FLOAT16_ATI	include/GL/glext.h	2682;"	d
GL_LUMINANCE_FLOAT32_ATI	include/GL/glext.h	2676;"	d
GL_MAD_ATI	include/GL/glext.h	2349;"	d
GL_MAGNITUDE_BIAS_NV	include/GL/glext.h	2128;"	d
GL_MAGNITUDE_SCALE_NV	include/GL/glext.h	2122;"	d
GL_MAP1_BINORMAL_EXT	include/GL/glext.h	1610;"	d
GL_MAP1_COLOR_4	include/GL/gl.h	636;"	d
GL_MAP1_GRID_DOMAIN	include/GL/gl.h	654;"	d
GL_MAP1_GRID_SEGMENTS	include/GL/gl.h	655;"	d
GL_MAP1_INDEX	include/GL/gl.h	637;"	d
GL_MAP1_NORMAL	include/GL/gl.h	638;"	d
GL_MAP1_TANGENT_EXT	include/GL/glext.h	1608;"	d
GL_MAP1_TEXTURE_COORD_1	include/GL/gl.h	639;"	d
GL_MAP1_TEXTURE_COORD_2	include/GL/gl.h	640;"	d
GL_MAP1_TEXTURE_COORD_3	include/GL/gl.h	641;"	d
GL_MAP1_TEXTURE_COORD_4	include/GL/gl.h	642;"	d
GL_MAP1_VERTEX_3	include/GL/gl.h	643;"	d
GL_MAP1_VERTEX_4	include/GL/gl.h	644;"	d
GL_MAP1_VERTEX_ATTRIB0_4_NV	include/GL/glext.h	2198;"	d
GL_MAP1_VERTEX_ATTRIB10_4_NV	include/GL/glext.h	2208;"	d
GL_MAP1_VERTEX_ATTRIB11_4_NV	include/GL/glext.h	2209;"	d
GL_MAP1_VERTEX_ATTRIB12_4_NV	include/GL/glext.h	2210;"	d
GL_MAP1_VERTEX_ATTRIB13_4_NV	include/GL/glext.h	2211;"	d
GL_MAP1_VERTEX_ATTRIB14_4_NV	include/GL/glext.h	2212;"	d
GL_MAP1_VERTEX_ATTRIB15_4_NV	include/GL/glext.h	2213;"	d
GL_MAP1_VERTEX_ATTRIB1_4_NV	include/GL/glext.h	2199;"	d
GL_MAP1_VERTEX_ATTRIB2_4_NV	include/GL/glext.h	2200;"	d
GL_MAP1_VERTEX_ATTRIB3_4_NV	include/GL/glext.h	2201;"	d
GL_MAP1_VERTEX_ATTRIB4_4_NV	include/GL/glext.h	2202;"	d
GL_MAP1_VERTEX_ATTRIB5_4_NV	include/GL/glext.h	2203;"	d
GL_MAP1_VERTEX_ATTRIB6_4_NV	include/GL/glext.h	2204;"	d
GL_MAP1_VERTEX_ATTRIB7_4_NV	include/GL/glext.h	2205;"	d
GL_MAP1_VERTEX_ATTRIB8_4_NV	include/GL/glext.h	2206;"	d
GL_MAP1_VERTEX_ATTRIB9_4_NV	include/GL/glext.h	2207;"	d
GL_MAP2_BINORMAL_EXT	include/GL/glext.h	1611;"	d
GL_MAP2_COLOR_4	include/GL/gl.h	645;"	d
GL_MAP2_GRID_DOMAIN	include/GL/gl.h	656;"	d
GL_MAP2_GRID_SEGMENTS	include/GL/gl.h	657;"	d
GL_MAP2_INDEX	include/GL/gl.h	646;"	d
GL_MAP2_NORMAL	include/GL/gl.h	647;"	d
GL_MAP2_TANGENT_EXT	include/GL/glext.h	1609;"	d
GL_MAP2_TEXTURE_COORD_1	include/GL/gl.h	648;"	d
GL_MAP2_TEXTURE_COORD_2	include/GL/gl.h	649;"	d
GL_MAP2_TEXTURE_COORD_3	include/GL/gl.h	650;"	d
GL_MAP2_TEXTURE_COORD_4	include/GL/gl.h	651;"	d
GL_MAP2_VERTEX_3	include/GL/gl.h	652;"	d
GL_MAP2_VERTEX_4	include/GL/gl.h	653;"	d
GL_MAP2_VERTEX_ATTRIB0_4_NV	include/GL/glext.h	2214;"	d
GL_MAP2_VERTEX_ATTRIB10_4_NV	include/GL/glext.h	2224;"	d
GL_MAP2_VERTEX_ATTRIB11_4_NV	include/GL/glext.h	2225;"	d
GL_MAP2_VERTEX_ATTRIB12_4_NV	include/GL/glext.h	2226;"	d
GL_MAP2_VERTEX_ATTRIB13_4_NV	include/GL/glext.h	2227;"	d
GL_MAP2_VERTEX_ATTRIB14_4_NV	include/GL/glext.h	2228;"	d
GL_MAP2_VERTEX_ATTRIB15_4_NV	include/GL/glext.h	2229;"	d
GL_MAP2_VERTEX_ATTRIB1_4_NV	include/GL/glext.h	2215;"	d
GL_MAP2_VERTEX_ATTRIB2_4_NV	include/GL/glext.h	2216;"	d
GL_MAP2_VERTEX_ATTRIB3_4_NV	include/GL/glext.h	2217;"	d
GL_MAP2_VERTEX_ATTRIB4_4_NV	include/GL/glext.h	2218;"	d
GL_MAP2_VERTEX_ATTRIB5_4_NV	include/GL/glext.h	2219;"	d
GL_MAP2_VERTEX_ATTRIB6_4_NV	include/GL/glext.h	2220;"	d
GL_MAP2_VERTEX_ATTRIB7_4_NV	include/GL/glext.h	2221;"	d
GL_MAP2_VERTEX_ATTRIB8_4_NV	include/GL/glext.h	2222;"	d
GL_MAP2_VERTEX_ATTRIB9_4_NV	include/GL/glext.h	2223;"	d
GL_MAP_ATTRIB_U_ORDER_NV	include/GL/glext.h	2020;"	d
GL_MAP_ATTRIB_V_ORDER_NV	include/GL/glext.h	2021;"	d
GL_MAP_COLOR	include/GL/gl.h	594;"	d
GL_MAP_STENCIL	include/GL/gl.h	595;"	d
GL_MAP_TESSELLATION_NV	include/GL/glext.h	2019;"	d
GL_MATERIAL_SIDE_HINT_PGI	include/GL/glext.h	1301;"	d
GL_MATRIX0_ARB	include/GL/glext.h	640;"	d
GL_MATRIX0_NV	include/GL/glext.h	2162;"	d
GL_MATRIX10_ARB	include/GL/glext.h	650;"	d
GL_MATRIX11_ARB	include/GL/glext.h	651;"	d
GL_MATRIX12_ARB	include/GL/glext.h	652;"	d
GL_MATRIX13_ARB	include/GL/glext.h	653;"	d
GL_MATRIX14_ARB	include/GL/glext.h	654;"	d
GL_MATRIX15_ARB	include/GL/glext.h	655;"	d
GL_MATRIX16_ARB	include/GL/glext.h	656;"	d
GL_MATRIX17_ARB	include/GL/glext.h	657;"	d
GL_MATRIX18_ARB	include/GL/glext.h	658;"	d
GL_MATRIX19_ARB	include/GL/glext.h	659;"	d
GL_MATRIX1_ARB	include/GL/glext.h	641;"	d
GL_MATRIX1_NV	include/GL/glext.h	2163;"	d
GL_MATRIX20_ARB	include/GL/glext.h	660;"	d
GL_MATRIX21_ARB	include/GL/glext.h	661;"	d
GL_MATRIX22_ARB	include/GL/glext.h	662;"	d
GL_MATRIX23_ARB	include/GL/glext.h	663;"	d
GL_MATRIX24_ARB	include/GL/glext.h	664;"	d
GL_MATRIX25_ARB	include/GL/glext.h	665;"	d
GL_MATRIX26_ARB	include/GL/glext.h	666;"	d
GL_MATRIX27_ARB	include/GL/glext.h	667;"	d
GL_MATRIX28_ARB	include/GL/glext.h	668;"	d
GL_MATRIX29_ARB	include/GL/glext.h	669;"	d
GL_MATRIX2_ARB	include/GL/glext.h	642;"	d
GL_MATRIX2_NV	include/GL/glext.h	2164;"	d
GL_MATRIX30_ARB	include/GL/glext.h	670;"	d
GL_MATRIX31_ARB	include/GL/glext.h	671;"	d
GL_MATRIX3_ARB	include/GL/glext.h	643;"	d
GL_MATRIX3_NV	include/GL/glext.h	2165;"	d
GL_MATRIX4_ARB	include/GL/glext.h	644;"	d
GL_MATRIX4_NV	include/GL/glext.h	2166;"	d
GL_MATRIX5_ARB	include/GL/glext.h	645;"	d
GL_MATRIX5_NV	include/GL/glext.h	2167;"	d
GL_MATRIX6_ARB	include/GL/glext.h	646;"	d
GL_MATRIX6_NV	include/GL/glext.h	2168;"	d
GL_MATRIX7_ARB	include/GL/glext.h	647;"	d
GL_MATRIX7_NV	include/GL/glext.h	2169;"	d
GL_MATRIX8_ARB	include/GL/glext.h	648;"	d
GL_MATRIX9_ARB	include/GL/glext.h	649;"	d
GL_MATRIX_EXT	include/GL/glext.h	2472;"	d
GL_MATRIX_INDEX_ARRAY_ARB	include/GL/glext.h	526;"	d
GL_MATRIX_INDEX_ARRAY_POINTER_ARB	include/GL/glext.h	531;"	d
GL_MATRIX_INDEX_ARRAY_SIZE_ARB	include/GL/glext.h	528;"	d
GL_MATRIX_INDEX_ARRAY_STRIDE_ARB	include/GL/glext.h	530;"	d
GL_MATRIX_INDEX_ARRAY_TYPE_ARB	include/GL/glext.h	529;"	d
GL_MATRIX_MODE	include/GL/gl.h	518;"	d
GL_MATRIX_PALETTE_ARB	include/GL/glext.h	522;"	d
GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI	include/GL/glext.h	1308;"	d
GL_MAT_AMBIENT_BIT_PGI	include/GL/glext.h	1307;"	d
GL_MAT_COLOR_INDEXES_BIT_PGI	include/GL/glext.h	1311;"	d
GL_MAT_DIFFUSE_BIT_PGI	include/GL/glext.h	1309;"	d
GL_MAT_EMISSION_BIT_PGI	include/GL/glext.h	1310;"	d
GL_MAT_SHININESS_BIT_PGI	include/GL/glext.h	1312;"	d
GL_MAT_SPECULAR_BIT_PGI	include/GL/glext.h	1313;"	d
GL_MAX	include/GL/gl.h	1346;"	d
GL_MAX	include/GL/glext.h	111;"	d
GL_MAX_3D_TEXTURE_SIZE	include/GL/gl.h	1460;"	d
GL_MAX_3D_TEXTURE_SIZE	include/GL/glext.h	75;"	d
GL_MAX_3D_TEXTURE_SIZE_EXT	include/GL/glext.h	865;"	d
GL_MAX_4D_TEXTURE_SIZE_SGIS	include/GL/glext.h	973;"	d
GL_MAX_ACTIVE_LIGHTS_SGIX	include/GL/glext.h	1430;"	d
GL_MAX_ASYNC_DRAW_PIXELS_SGIX	include/GL/glext.h	1513;"	d
GL_MAX_ASYNC_HISTOGRAM_SGIX	include/GL/glext.h	1519;"	d
GL_MAX_ASYNC_READ_PIXELS_SGIX	include/GL/glext.h	1514;"	d
GL_MAX_ASYNC_TEX_IMAGE_SGIX	include/GL/glext.h	1512;"	d
GL_MAX_ATTRIB_STACK_DEPTH	include/GL/gl.h	615;"	d
GL_MAX_CLIENT_ATTRIB_STACK_DEPTH	include/GL/gl.h	621;"	d
GL_MAX_CLIPMAP_DEPTH_SGIX	include/GL/glext.h	1104;"	d
GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX	include/GL/glext.h	1105;"	d
GL_MAX_CLIP_PLANES	include/GL/gl.h	612;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH	include/GL/gl.h	1356;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH	include/GL/glext.h	151;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI	include/GL/glext.h	922;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB	include/GL/glext.h	768;"	d
GL_MAX_CONVOLUTION_HEIGHT	include/GL/gl.h	1396;"	d
GL_MAX_CONVOLUTION_HEIGHT	include/GL/glext.h	126;"	d
GL_MAX_CONVOLUTION_HEIGHT_EXT	include/GL/glext.h	908;"	d
GL_MAX_CONVOLUTION_WIDTH	include/GL/gl.h	1395;"	d
GL_MAX_CONVOLUTION_WIDTH	include/GL/glext.h	125;"	d
GL_MAX_CONVOLUTION_WIDTH_EXT	include/GL/glext.h	907;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	include/GL/glext.h	241;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB	include/GL/glext.h	448;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT	include/GL/glext.h	1735;"	d
GL_MAX_DEFORMATION_ORDER_SGIX	include/GL/glext.h	1235;"	d
GL_MAX_DRAW_BUFFERS_ATI	include/GL/glext.h	2646;"	d
GL_MAX_ELEMENTS_INDICES	include/GL/gl.h	1411;"	d
GL_MAX_ELEMENTS_INDICES	include/GL/glext.h	86;"	d
GL_MAX_ELEMENTS_INDICES_EXT	include/GL/glext.h	1459;"	d
GL_MAX_ELEMENTS_VERTICES	include/GL/gl.h	1410;"	d
GL_MAX_ELEMENTS_VERTICES	include/GL/glext.h	85;"	d
GL_MAX_ELEMENTS_VERTICES_EXT	include/GL/glext.h	1458;"	d
GL_MAX_EVAL_ORDER	include/GL/gl.h	610;"	d
GL_MAX_EXT	include/GL/gl.h	1537;"	d
GL_MAX_EXT	include/GL/glext.h	1125;"	d
GL_MAX_FOG_FUNC_POINTS_SGIS	include/GL/glext.h	1255;"	d
GL_MAX_FRAGMENT_LIGHTS_SGIX	include/GL/glext.h	1429;"	d
GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV	include/GL/glext.h	2705;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB	include/GL/glext.h	775;"	d
GL_MAX_FRAMEZOOM_FACTOR_SGIX	include/GL/glext.h	1220;"	d
GL_MAX_GENERAL_COMBINERS_NV	include/GL/glext.h	1826;"	d
GL_MAX_LIGHTS	include/GL/gl.h	611;"	d
GL_MAX_LIST_NESTING	include/GL/gl.h	478;"	d
GL_MAX_MAP_TESSELLATION_NV	include/GL/glext.h	2039;"	d
GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB	include/GL/glext.h	523;"	d
GL_MAX_MODELVIEW_STACK_DEPTH	include/GL/gl.h	616;"	d
GL_MAX_NAME_STACK_DEPTH	include/GL/gl.h	617;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT	include/GL/glext.h	2482;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT	include/GL/glext.h	2485;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT	include/GL/glext.h	2486;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	include/GL/glext.h	2484;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT	include/GL/glext.h	2483;"	d
GL_MAX_PALETTE_MATRICES_ARB	include/GL/glext.h	524;"	d
GL_MAX_PIXEL_MAP_TABLE	include/GL/gl.h	614;"	d
GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT	include/GL/glext.h	1546;"	d
GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI	include/GL/glext.h	2386;"	d
GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB	include/GL/glext.h	633;"	d
GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB	include/GL/glext.h	682;"	d
GL_MAX_PROGRAM_ATTRIBS_ARB	include/GL/glext.h	629;"	d
GL_MAX_PROGRAM_ENV_PARAMETERS_ARB	include/GL/glext.h	637;"	d
GL_MAX_PROGRAM_INSTRUCTIONS_ARB	include/GL/glext.h	617;"	d
GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB	include/GL/glext.h	636;"	d
GL_MAX_PROGRAM_MATRICES_ARB	include/GL/glext.h	603;"	d
GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB	include/GL/glext.h	602;"	d
GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB	include/GL/glext.h	635;"	d
GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB	include/GL/glext.h	685;"	d
GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB	include/GL/glext.h	631;"	d
GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB	include/GL/glext.h	619;"	d
GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB	include/GL/glext.h	627;"	d
GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB	include/GL/glext.h	623;"	d
GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB	include/GL/glext.h	687;"	d
GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB	include/GL/glext.h	686;"	d
GL_MAX_PROGRAM_PARAMETERS_ARB	include/GL/glext.h	625;"	d
GL_MAX_PROGRAM_TEMPORARIES_ARB	include/GL/glext.h	621;"	d
GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB	include/GL/glext.h	684;"	d
GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB	include/GL/glext.h	683;"	d
GL_MAX_PROJECTION_STACK_DEPTH	include/GL/gl.h	618;"	d
GL_MAX_RATIONAL_EVAL_ORDER_NV	include/GL/glext.h	2040;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE_NV	include/GL/glext.h	2059;"	d
GL_MAX_SHININESS_NV	include/GL/glext.h	1773;"	d
GL_MAX_SPOT_EXPONENT_NV	include/GL/glext.h	1774;"	d
GL_MAX_TEXTURE_COORDS_ARB	include/GL/glext.h	688;"	d
GL_MAX_TEXTURE_COORDS_NV	include/GL/glext.h	2707;"	d
GL_MAX_TEXTURE_IMAGE_UNITS_ARB	include/GL/glext.h	689;"	d
GL_MAX_TEXTURE_IMAGE_UNITS_NV	include/GL/glext.h	2708;"	d
GL_MAX_TEXTURE_LOD_BIAS	include/GL/glext.h	311;"	d
GL_MAX_TEXTURE_LOD_BIAS_EXT	include/GL/glext.h	1746;"	d
GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT	include/GL/glext.h	1753;"	d
GL_MAX_TEXTURE_SIZE	include/GL/gl.h	613;"	d
GL_MAX_TEXTURE_STACK_DEPTH	include/GL/gl.h	619;"	d
GL_MAX_TEXTURE_UNITS	include/GL/glext.h	216;"	d
GL_MAX_TEXTURE_UNITS_ARB	include/GL/gl.h	1514;"	d
GL_MAX_TEXTURE_UNITS_ARB	include/GL/glext.h	411;"	d
GL_MAX_TRACK_MATRICES_NV	include/GL/glext.h	2161;"	d
GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV	include/GL/glext.h	2160;"	d
GL_MAX_VARYING_FLOATS_ARB	include/GL/glext.h	766;"	d
GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV	include/GL/glext.h	1781;"	d
GL_MAX_VERTEX_ATTRIBS_ARB	include/GL/glext.h	611;"	d
GL_MAX_VERTEX_HINT_PGI	include/GL/glext.h	1302;"	d
GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT	include/GL/glext.h	2477;"	d
GL_MAX_VERTEX_SHADER_INVARIANTS_EXT	include/GL/glext.h	2479;"	d
GL_MAX_VERTEX_SHADER_LOCALS_EXT	include/GL/glext.h	2481;"	d
GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	include/GL/glext.h	2480;"	d
GL_MAX_VERTEX_SHADER_VARIANTS_EXT	include/GL/glext.h	2478;"	d
GL_MAX_VERTEX_STREAMS_ATI	include/GL/glext.h	2521;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB	include/GL/glext.h	767;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB	include/GL/glext.h	765;"	d
GL_MAX_VERTEX_UNITS_ARB	include/GL/glext.h	477;"	d
GL_MAX_VIEWPORT_DIMS	include/GL/gl.h	620;"	d
GL_MESA_pack_invert	include/GL/glext.h	5907;"	d
GL_MESA_resize_buffers	include/GL/glext.h	4838;"	d
GL_MESA_window_pos	include/GL/glext.h	4846;"	d
GL_MESA_ycbcr_texture	include/GL/glext.h	5911;"	d
GL_MIN	include/GL/gl.h	1345;"	d
GL_MIN	include/GL/glext.h	110;"	d
GL_MINMAX	include/GL/gl.h	1424;"	d
GL_MINMAX	include/GL/glext.h	145;"	d
GL_MINMAX_EXT	include/GL/glext.h	890;"	d
GL_MINMAX_FORMAT	include/GL/gl.h	1425;"	d
GL_MINMAX_FORMAT	include/GL/glext.h	146;"	d
GL_MINMAX_FORMAT_EXT	include/GL/glext.h	891;"	d
GL_MINMAX_SINK	include/GL/gl.h	1426;"	d
GL_MINMAX_SINK	include/GL/glext.h	147;"	d
GL_MINMAX_SINK_EXT	include/GL/glext.h	892;"	d
GL_MIN_EXT	include/GL/gl.h	1536;"	d
GL_MIN_EXT	include/GL/glext.h	1124;"	d
GL_MIRRORED_REPEAT	include/GL/glext.h	295;"	d
GL_MIRRORED_REPEAT_ARB	include/GL/glext.h	568;"	d
GL_MIRRORED_REPEAT_IBM	include/GL/glext.h	2013;"	d
GL_MIRROR_CLAMP_ATI	include/GL/glext.h	2002;"	d
GL_MIRROR_CLAMP_EXT	include/GL/glext.h	2757;"	d
GL_MIRROR_CLAMP_TO_BORDER_EXT	include/GL/glext.h	2759;"	d
GL_MIRROR_CLAMP_TO_EDGE_ATI	include/GL/glext.h	2003;"	d
GL_MIRROR_CLAMP_TO_EDGE_EXT	include/GL/glext.h	2758;"	d
GL_MODELVIEW	include/GL/gl.h	897;"	d
GL_MODELVIEW0_ARB	include/GL/glext.h	487;"	d
GL_MODELVIEW0_EXT	include/GL/glext.h	1762;"	d
GL_MODELVIEW0_MATRIX_EXT	include/GL/glext.h	1759;"	d
GL_MODELVIEW0_STACK_DEPTH_EXT	include/GL/glext.h	1757;"	d
GL_MODELVIEW10_ARB	include/GL/glext.h	497;"	d
GL_MODELVIEW11_ARB	include/GL/glext.h	498;"	d
GL_MODELVIEW12_ARB	include/GL/glext.h	499;"	d
GL_MODELVIEW13_ARB	include/GL/glext.h	500;"	d
GL_MODELVIEW14_ARB	include/GL/glext.h	501;"	d
GL_MODELVIEW15_ARB	include/GL/glext.h	502;"	d
GL_MODELVIEW16_ARB	include/GL/glext.h	503;"	d
GL_MODELVIEW17_ARB	include/GL/glext.h	504;"	d
GL_MODELVIEW18_ARB	include/GL/glext.h	505;"	d
GL_MODELVIEW19_ARB	include/GL/glext.h	506;"	d
GL_MODELVIEW1_ARB	include/GL/glext.h	488;"	d
GL_MODELVIEW1_EXT	include/GL/glext.h	1763;"	d
GL_MODELVIEW1_MATRIX_EXT	include/GL/glext.h	1760;"	d
GL_MODELVIEW1_STACK_DEPTH_EXT	include/GL/glext.h	1758;"	d
GL_MODELVIEW20_ARB	include/GL/glext.h	507;"	d
GL_MODELVIEW21_ARB	include/GL/glext.h	508;"	d
GL_MODELVIEW22_ARB	include/GL/glext.h	509;"	d
GL_MODELVIEW23_ARB	include/GL/glext.h	510;"	d
GL_MODELVIEW24_ARB	include/GL/glext.h	511;"	d
GL_MODELVIEW25_ARB	include/GL/glext.h	512;"	d
GL_MODELVIEW26_ARB	include/GL/glext.h	513;"	d
GL_MODELVIEW27_ARB	include/GL/glext.h	514;"	d
GL_MODELVIEW28_ARB	include/GL/glext.h	515;"	d
GL_MODELVIEW29_ARB	include/GL/glext.h	516;"	d
GL_MODELVIEW2_ARB	include/GL/glext.h	489;"	d
GL_MODELVIEW30_ARB	include/GL/glext.h	517;"	d
GL_MODELVIEW31_ARB	include/GL/glext.h	518;"	d
GL_MODELVIEW3_ARB	include/GL/glext.h	490;"	d
GL_MODELVIEW4_ARB	include/GL/glext.h	491;"	d
GL_MODELVIEW5_ARB	include/GL/glext.h	492;"	d
GL_MODELVIEW6_ARB	include/GL/glext.h	493;"	d
GL_MODELVIEW7_ARB	include/GL/glext.h	494;"	d
GL_MODELVIEW8_ARB	include/GL/glext.h	495;"	d
GL_MODELVIEW9_ARB	include/GL/glext.h	496;"	d
GL_MODELVIEW_MATRIX	include/GL/gl.h	524;"	d
GL_MODELVIEW_PROJECTION_NV	include/GL/glext.h	2155;"	d
GL_MODELVIEW_STACK_DEPTH	include/GL/gl.h	521;"	d
GL_MODULATE	include/GL/gl.h	1128;"	d
GL_MODULATE_ADD_ATI	include/GL/glext.h	2666;"	d
GL_MODULATE_SIGNED_ADD_ATI	include/GL/glext.h	2667;"	d
GL_MODULATE_SUBTRACT_ATI	include/GL/glext.h	2668;"	d
GL_MOV_ATI	include/GL/glext.h	2343;"	d
GL_MULT	include/GL/gl.h	62;"	d
GL_MULTISAMPLE	include/GL/glext.h	221;"	d
GL_MULTISAMPLE_3DFX	include/GL/glext.h	1935;"	d
GL_MULTISAMPLE_ARB	include/GL/glext.h	422;"	d
GL_MULTISAMPLE_BIT	include/GL/glext.h	229;"	d
GL_MULTISAMPLE_BIT_3DFX	include/GL/glext.h	1938;"	d
GL_MULTISAMPLE_BIT_ARB	include/GL/glext.h	430;"	d
GL_MULTISAMPLE_BIT_EXT	include/GL/glext.h	1961;"	d
GL_MULTISAMPLE_EXT	include/GL/glext.h	1945;"	d
GL_MULTISAMPLE_FILTER_HINT_NV	include/GL/glext.h	2549;"	d
GL_MULTISAMPLE_SGIS	include/GL/glext.h	1031;"	d
GL_MUL_ATI	include/GL/glext.h	2345;"	d
GL_MVP_MATRIX_EXT	include/GL/glext.h	2507;"	d
GL_N3F_V3F	include/GL/gl.h	1322;"	d
GL_NAME_STACK_DEPTH	include/GL/gl.h	634;"	d
GL_NAND	include/GL/gl.h	859;"	d
GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI	include/GL/glext.h	1328;"	d
GL_NATIVE_GRAPHICS_END_HINT_PGI	include/GL/glext.h	1329;"	d
GL_NATIVE_GRAPHICS_HANDLE_PGI	include/GL/glext.h	1327;"	d
GL_NEAREST	include/GL/gl.h	1151;"	d
GL_NEAREST_CLIPMAP_LINEAR_SGIX	include/GL/glext.h	1107;"	d
GL_NEAREST_CLIPMAP_NEAREST_SGIX	include/GL/glext.h	1106;"	d
GL_NEAREST_MIPMAP_LINEAR	include/GL/gl.h	1159;"	d
GL_NEAREST_MIPMAP_NEAREST	include/GL/gl.h	1157;"	d
GL_NEGATE_BIT_ATI	include/GL/glext.h	2380;"	d
GL_NEGATIVE_ONE_EXT	include/GL/glext.h	2503;"	d
GL_NEGATIVE_W_EXT	include/GL/glext.h	2500;"	d
GL_NEGATIVE_X_EXT	include/GL/glext.h	2497;"	d
GL_NEGATIVE_Y_EXT	include/GL/glext.h	2498;"	d
GL_NEGATIVE_Z_EXT	include/GL/glext.h	2499;"	d
GL_NEVER	include/GL/gl.h	66;"	d
GL_NICEST	include/GL/gl.h	761;"	d
GL_NONE	include/GL/gl.h	250;"	d
GL_NOOP	include/GL/gl.h	850;"	d
GL_NOR	include/GL/gl.h	853;"	d
GL_NORMALIZE	include/GL/gl.h	519;"	d
GL_NORMALIZED_RANGE_EXT	include/GL/glext.h	2504;"	d
GL_NORMAL_ARRAY	include/GL/gl.h	1292;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING	include/GL/glext.h	335;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING_ARB	include/GL/glext.h	700;"	d
GL_NORMAL_ARRAY_COUNT_EXT	include/GL/glext.h	1066;"	d
GL_NORMAL_ARRAY_EXT	include/GL/glext.h	1055;"	d
GL_NORMAL_ARRAY_LIST_IBM	include/GL/glext.h	1890;"	d
GL_NORMAL_ARRAY_LIST_STRIDE_IBM	include/GL/glext.h	1898;"	d
GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL	include/GL/glext.h	1528;"	d
GL_NORMAL_ARRAY_POINTER	include/GL/gl.h	1312;"	d
GL_NORMAL_ARRAY_POINTER_EXT	include/GL/glext.h	1081;"	d
GL_NORMAL_ARRAY_STRIDE	include/GL/gl.h	1301;"	d
GL_NORMAL_ARRAY_STRIDE_EXT	include/GL/glext.h	1065;"	d
GL_NORMAL_ARRAY_TYPE	include/GL/gl.h	1300;"	d
GL_NORMAL_ARRAY_TYPE_EXT	include/GL/glext.h	1064;"	d
GL_NORMAL_BIT_PGI	include/GL/glext.h	1314;"	d
GL_NORMAL_MAP	include/GL/glext.h	230;"	d
GL_NORMAL_MAP_ARB	include/GL/glext.h	437;"	d
GL_NORMAL_MAP_EXT	include/GL/glext.h	1724;"	d
GL_NORMAL_MAP_NV	include/GL/glext.h	1719;"	d
GL_NOTEQUAL	include/GL/gl.h	71;"	d
GL_NO_ERROR	include/GL/gl.h	344;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	include/GL/glext.h	251;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB	include/GL/glext.h	461;"	d
GL_NUM_FRAGMENT_CONSTANTS_ATI	include/GL/glext.h	2356;"	d
GL_NUM_FRAGMENT_REGISTERS_ATI	include/GL/glext.h	2355;"	d
GL_NUM_GENERAL_COMBINERS_NV	include/GL/glext.h	1827;"	d
GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI	include/GL/glext.h	2360;"	d
GL_NUM_INSTRUCTIONS_PER_PASS_ATI	include/GL/glext.h	2358;"	d
GL_NUM_INSTRUCTIONS_TOTAL_ATI	include/GL/glext.h	2359;"	d
GL_NUM_LOOPBACK_COMPONENTS_ATI	include/GL/glext.h	2361;"	d
GL_NUM_PASSES_ATI	include/GL/glext.h	2357;"	d
GL_NV_blend_square	include/GL/glext.h	4830;"	d
GL_NV_copy_depth_to_color	include/GL/glext.h	5250;"	d
GL_NV_depth_clamp	include/GL/glext.h	5556;"	d
GL_NV_evaluators	include/GL/glext.h	5038;"	d
GL_NV_fence	include/GL/glext.h	5018;"	d
GL_NV_float_buffer	include/GL/glext.h	5706;"	d
GL_NV_fog_distance	include/GL/glext.h	4822;"	d
GL_NV_fragment_program	include/GL/glext.h	5710;"	d
GL_NV_half_float	include/GL/glext.h	5729;"	d
GL_NV_light_max_exponent	include/GL/glext.h	4776;"	d
GL_NV_multisample_filter_hint	include/GL/glext.h	5552;"	d
GL_NV_occlusion_query	include/GL/glext.h	5560;"	d
GL_NV_packed_depth_stencil	include/GL/glext.h	5062;"	d
GL_NV_pixel_data_range	include/GL/glext.h	5827;"	d
GL_NV_point_sprite	include/GL/glext.h	5580;"	d
GL_NV_primitive_restart	include/GL/glext.h	5837;"	d
GL_NV_register_combiners	include/GL/glext.h	4790;"	d
GL_NV_register_combiners2	include/GL/glext.h	5066;"	d
GL_NV_texgen_emboss	include/GL/glext.h	4826;"	d
GL_NV_texgen_reflection	include/GL/glext.h	4744;"	d
GL_NV_texture_compression_vtc	include/GL/glext.h	5076;"	d
GL_NV_texture_env_combine4	include/GL/glext.h	4834;"	d
GL_NV_texture_expand_normal	include/GL/glext.h	5847;"	d
GL_NV_texture_rectangle	include/GL/glext.h	5080;"	d
GL_NV_texture_shader	include/GL/glext.h	5084;"	d
GL_NV_texture_shader2	include/GL/glext.h	5088;"	d
GL_NV_texture_shader3	include/GL/glext.h	5590;"	d
GL_NV_vertex_array_range	include/GL/glext.h	4780;"	d
GL_NV_vertex_array_range2	include/GL/glext.h	5092;"	d
GL_NV_vertex_program	include/GL/glext.h	5096;"	d
GL_NV_vertex_program1_1	include/GL/glext.h	5594;"	d
GL_NV_vertex_program2	include/GL/glext.h	5851;"	d
GL_OBJECT_ACTIVE_ATTRIBUTES_ARB	include/GL/glext.h	769;"	d
GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB	include/GL/glext.h	770;"	d
GL_OBJECT_ACTIVE_UNIFORMS_ARB	include/GL/glext.h	758;"	d
GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB	include/GL/glext.h	759;"	d
GL_OBJECT_ATTACHED_OBJECTS_ARB	include/GL/glext.h	757;"	d
GL_OBJECT_BUFFER_SIZE_ATI	include/GL/glext.h	2401;"	d
GL_OBJECT_BUFFER_USAGE_ATI	include/GL/glext.h	2402;"	d
GL_OBJECT_COMPILE_STATUS_ARB	include/GL/glext.h	753;"	d
GL_OBJECT_DELETE_STATUS_ARB	include/GL/glext.h	752;"	d
GL_OBJECT_DISTANCE_TO_LINE_SGIS	include/GL/glext.h	1985;"	d
GL_OBJECT_DISTANCE_TO_POINT_SGIS	include/GL/glext.h	1983;"	d
GL_OBJECT_INFO_LOG_LENGTH_ARB	include/GL/glext.h	756;"	d
GL_OBJECT_LINEAR	include/GL/gl.h	1142;"	d
GL_OBJECT_LINE_SGIS	include/GL/glext.h	1989;"	d
GL_OBJECT_LINK_STATUS_ARB	include/GL/glext.h	754;"	d
GL_OBJECT_PLANE	include/GL/gl.h	1147;"	d
GL_OBJECT_POINT_SGIS	include/GL/glext.h	1987;"	d
GL_OBJECT_SHADER_SOURCE_LENGTH_ARB	include/GL/glext.h	760;"	d
GL_OBJECT_SUBTYPE_ARB	include/GL/glext.h	738;"	d
GL_OBJECT_TYPE_ARB	include/GL/glext.h	737;"	d
GL_OBJECT_VALIDATE_STATUS_ARB	include/GL/glext.h	755;"	d
GL_OCCLUSION_TEST_HP	include/GL/glext.h	1534;"	d
GL_OCCLUSION_TEST_RESULT_HP	include/GL/glext.h	1535;"	d
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV	include/GL/glext.h	2576;"	d
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV	include/GL/glext.h	2577;"	d
GL_OFFSET_HILO_TEXTURE_2D_NV	include/GL/glext.h	2574;"	d
GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV	include/GL/glext.h	2575;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV	include/GL/glext.h	2570;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV	include/GL/glext.h	2571;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV	include/GL/glext.h	2572;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV	include/GL/glext.h	2573;"	d
GL_OFFSET_TEXTURE_2D_BIAS_NV	include/GL/glext.h	2079;"	d
GL_OFFSET_TEXTURE_2D_MATRIX_NV	include/GL/glext.h	2077;"	d
GL_OFFSET_TEXTURE_2D_NV	include/GL/glext.h	2084;"	d
GL_OFFSET_TEXTURE_2D_SCALE_NV	include/GL/glext.h	2078;"	d
GL_OFFSET_TEXTURE_BIAS_NV	include/GL/glext.h	2076;"	d
GL_OFFSET_TEXTURE_MATRIX_NV	include/GL/glext.h	2074;"	d
GL_OFFSET_TEXTURE_RECTANGLE_NV	include/GL/glext.h	2063;"	d
GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV	include/GL/glext.h	2064;"	d
GL_OFFSET_TEXTURE_SCALE_NV	include/GL/glext.h	2075;"	d
GL_OML_interlace	include/GL/glext.h	5238;"	d
GL_OML_resample	include/GL/glext.h	5246;"	d
GL_OML_subsample	include/GL/glext.h	5242;"	d
GL_ONE	include/GL/gl.h	120;"	d
GL_ONE_EXT	include/GL/glext.h	2502;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	include/GL/gl.h	1340;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	include/GL/glext.h	107;"	d
GL_ONE_MINUS_CONSTANT_ALPHA_EXT	include/GL/gl.h	1531;"	d
GL_ONE_MINUS_CONSTANT_ALPHA_EXT	include/GL/glext.h	800;"	d
GL_ONE_MINUS_CONSTANT_COLOR	include/GL/gl.h	1338;"	d
GL_ONE_MINUS_CONSTANT_COLOR	include/GL/glext.h	105;"	d
GL_ONE_MINUS_CONSTANT_COLOR_EXT	include/GL/gl.h	1529;"	d
GL_ONE_MINUS_CONSTANT_COLOR_EXT	include/GL/glext.h	798;"	d
GL_ONE_MINUS_DST_ALPHA	include/GL/gl.h	126;"	d
GL_ONE_MINUS_DST_COLOR	include/GL/gl.h	136;"	d
GL_ONE_MINUS_SRC_ALPHA	include/GL/gl.h	124;"	d
GL_ONE_MINUS_SRC_COLOR	include/GL/gl.h	122;"	d
GL_OPERAND0_ALPHA	include/GL/glext.h	267;"	d
GL_OPERAND0_ALPHA_ARB	include/GL/glext.h	547;"	d
GL_OPERAND0_ALPHA_EXT	include/GL/gl.h	1563;"	d
GL_OPERAND0_ALPHA_EXT	include/GL/glext.h	1633;"	d
GL_OPERAND0_RGB	include/GL/glext.h	264;"	d
GL_OPERAND0_RGB_ARB	include/GL/glext.h	544;"	d
GL_OPERAND0_RGB_EXT	include/GL/gl.h	1560;"	d
GL_OPERAND0_RGB_EXT	include/GL/glext.h	1630;"	d
GL_OPERAND1_ALPHA	include/GL/glext.h	268;"	d
GL_OPERAND1_ALPHA_ARB	include/GL/glext.h	548;"	d
GL_OPERAND1_ALPHA_EXT	include/GL/gl.h	1564;"	d
GL_OPERAND1_ALPHA_EXT	include/GL/glext.h	1634;"	d
GL_OPERAND1_RGB	include/GL/glext.h	265;"	d
GL_OPERAND1_RGB_ARB	include/GL/glext.h	545;"	d
GL_OPERAND1_RGB_EXT	include/GL/gl.h	1561;"	d
GL_OPERAND1_RGB_EXT	include/GL/glext.h	1631;"	d
GL_OPERAND2_ALPHA	include/GL/glext.h	269;"	d
GL_OPERAND2_ALPHA_ARB	include/GL/glext.h	549;"	d
GL_OPERAND2_ALPHA_EXT	include/GL/gl.h	1565;"	d
GL_OPERAND2_ALPHA_EXT	include/GL/glext.h	1635;"	d
GL_OPERAND2_RGB	include/GL/glext.h	266;"	d
GL_OPERAND2_RGB_ARB	include/GL/glext.h	546;"	d
GL_OPERAND2_RGB_EXT	include/GL/gl.h	1562;"	d
GL_OPERAND2_RGB_EXT	include/GL/glext.h	1632;"	d
GL_OPERAND3_ALPHA_NV	include/GL/glext.h	1865;"	d
GL_OPERAND3_RGB_NV	include/GL/glext.h	1864;"	d
GL_OP_ADD_EXT	include/GL/glext.h	2415;"	d
GL_OP_CLAMP_EXT	include/GL/glext.h	2422;"	d
GL_OP_CROSS_PRODUCT_EXT	include/GL/glext.h	2431;"	d
GL_OP_DOT3_EXT	include/GL/glext.h	2412;"	d
GL_OP_DOT4_EXT	include/GL/glext.h	2413;"	d
GL_OP_EXP_BASE_2_EXT	include/GL/glext.h	2425;"	d
GL_OP_FLOOR_EXT	include/GL/glext.h	2423;"	d
GL_OP_FRAC_EXT	include/GL/glext.h	2417;"	d
GL_OP_INDEX_EXT	include/GL/glext.h	2410;"	d
GL_OP_LOG_BASE_2_EXT	include/GL/glext.h	2426;"	d
GL_OP_MADD_EXT	include/GL/glext.h	2416;"	d
GL_OP_MAX_EXT	include/GL/glext.h	2418;"	d
GL_OP_MIN_EXT	include/GL/glext.h	2419;"	d
GL_OP_MOV_EXT	include/GL/glext.h	2433;"	d
GL_OP_MULTIPLY_MATRIX_EXT	include/GL/glext.h	2432;"	d
GL_OP_MUL_EXT	include/GL/glext.h	2414;"	d
GL_OP_NEGATE_EXT	include/GL/glext.h	2411;"	d
GL_OP_POWER_EXT	include/GL/glext.h	2427;"	d
GL_OP_RECIP_EXT	include/GL/glext.h	2428;"	d
GL_OP_RECIP_SQRT_EXT	include/GL/glext.h	2429;"	d
GL_OP_ROUND_EXT	include/GL/glext.h	2424;"	d
GL_OP_SET_GE_EXT	include/GL/glext.h	2420;"	d
GL_OP_SET_LT_EXT	include/GL/glext.h	2421;"	d
GL_OP_SUB_EXT	include/GL/glext.h	2430;"	d
GL_OR	include/GL/gl.h	852;"	d
GL_ORDER	include/GL/gl.h	422;"	d
GL_OR_INVERTED	include/GL/gl.h	858;"	d
GL_OR_REVERSE	include/GL/gl.h	856;"	d
GL_OUTPUT_COLOR0_EXT	include/GL/glext.h	2435;"	d
GL_OUTPUT_COLOR1_EXT	include/GL/glext.h	2436;"	d
GL_OUTPUT_FOG_EXT	include/GL/glext.h	2469;"	d
GL_OUTPUT_TEXTURE_COORD0_EXT	include/GL/glext.h	2437;"	d
GL_OUTPUT_TEXTURE_COORD10_EXT	include/GL/glext.h	2447;"	d
GL_OUTPUT_TEXTURE_COORD11_EXT	include/GL/glext.h	2448;"	d
GL_OUTPUT_TEXTURE_COORD12_EXT	include/GL/glext.h	2449;"	d
GL_OUTPUT_TEXTURE_COORD13_EXT	include/GL/glext.h	2450;"	d
GL_OUTPUT_TEXTURE_COORD14_EXT	include/GL/glext.h	2451;"	d
GL_OUTPUT_TEXTURE_COORD15_EXT	include/GL/glext.h	2452;"	d
GL_OUTPUT_TEXTURE_COORD16_EXT	include/GL/glext.h	2453;"	d
GL_OUTPUT_TEXTURE_COORD17_EXT	include/GL/glext.h	2454;"	d
GL_OUTPUT_TEXTURE_COORD18_EXT	include/GL/glext.h	2455;"	d
GL_OUTPUT_TEXTURE_COORD19_EXT	include/GL/glext.h	2456;"	d
GL_OUTPUT_TEXTURE_COORD1_EXT	include/GL/glext.h	2438;"	d
GL_OUTPUT_TEXTURE_COORD20_EXT	include/GL/glext.h	2457;"	d
GL_OUTPUT_TEXTURE_COORD21_EXT	include/GL/glext.h	2458;"	d
GL_OUTPUT_TEXTURE_COORD22_EXT	include/GL/glext.h	2459;"	d
GL_OUTPUT_TEXTURE_COORD23_EXT	include/GL/glext.h	2460;"	d
GL_OUTPUT_TEXTURE_COORD24_EXT	include/GL/glext.h	2461;"	d
GL_OUTPUT_TEXTURE_COORD25_EXT	include/GL/glext.h	2462;"	d
GL_OUTPUT_TEXTURE_COORD26_EXT	include/GL/glext.h	2463;"	d
GL_OUTPUT_TEXTURE_COORD27_EXT	include/GL/glext.h	2464;"	d
GL_OUTPUT_TEXTURE_COORD28_EXT	include/GL/glext.h	2465;"	d
GL_OUTPUT_TEXTURE_COORD29_EXT	include/GL/glext.h	2466;"	d
GL_OUTPUT_TEXTURE_COORD2_EXT	include/GL/glext.h	2439;"	d
GL_OUTPUT_TEXTURE_COORD30_EXT	include/GL/glext.h	2467;"	d
GL_OUTPUT_TEXTURE_COORD31_EXT	include/GL/glext.h	2468;"	d
GL_OUTPUT_TEXTURE_COORD3_EXT	include/GL/glext.h	2440;"	d
GL_OUTPUT_TEXTURE_COORD4_EXT	include/GL/glext.h	2441;"	d
GL_OUTPUT_TEXTURE_COORD5_EXT	include/GL/glext.h	2442;"	d
GL_OUTPUT_TEXTURE_COORD6_EXT	include/GL/glext.h	2443;"	d
GL_OUTPUT_TEXTURE_COORD7_EXT	include/GL/glext.h	2444;"	d
GL_OUTPUT_TEXTURE_COORD8_EXT	include/GL/glext.h	2445;"	d
GL_OUTPUT_TEXTURE_COORD9_EXT	include/GL/glext.h	2446;"	d
GL_OUTPUT_VERTEX_EXT	include/GL/glext.h	2434;"	d
GL_OUT_OF_MEMORY	include/GL/gl.h	350;"	d
GL_PACK_ALIGNMENT	include/GL/gl.h	593;"	d
GL_PACK_CMYK_HINT_EXT	include/GL/glext.h	985;"	d
GL_PACK_IMAGE_DEPTH_SGIS	include/GL/glext.h	966;"	d
GL_PACK_IMAGE_HEIGHT	include/GL/gl.h	1453;"	d
GL_PACK_IMAGE_HEIGHT	include/GL/glext.h	68;"	d
GL_PACK_IMAGE_HEIGHT_EXT	include/GL/glext.h	858;"	d
GL_PACK_INVERT_MESA	include/GL/glext.h	2768;"	d
GL_PACK_LSB_FIRST	include/GL/gl.h	589;"	d
GL_PACK_RESAMPLE_OML	include/GL/glext.h	2253;"	d
GL_PACK_RESAMPLE_SGIX	include/GL/glext.h	1974;"	d
GL_PACK_ROW_LENGTH	include/GL/gl.h	590;"	d
GL_PACK_SKIP_IMAGES	include/GL/gl.h	1452;"	d
GL_PACK_SKIP_IMAGES	include/GL/glext.h	67;"	d
GL_PACK_SKIP_IMAGES_EXT	include/GL/glext.h	857;"	d
GL_PACK_SKIP_PIXELS	include/GL/gl.h	592;"	d
GL_PACK_SKIP_ROWS	include/GL/gl.h	591;"	d
GL_PACK_SKIP_VOLUMES_SGIS	include/GL/glext.h	965;"	d
GL_PACK_SUBSAMPLE_RATE_SGIX	include/GL/glext.h	1908;"	d
GL_PACK_SWAP_BYTES	include/GL/gl.h	588;"	d
GL_PARALLEL_ARRAYS_INTEL	include/GL/glext.h	1526;"	d
GL_PASS_THROUGH_NV	include/GL/glext.h	2082;"	d
GL_PASS_THROUGH_TOKEN	include/GL/gl.h	361;"	d
GL_PERSPECTIVE_CORRECTION_HINT	include/GL/gl.h	553;"	d
GL_PERTURB_EXT	include/GL/glext.h	1574;"	d
GL_PER_STAGE_CONSTANTS_NV	include/GL/glext.h	2049;"	d
GL_PGI_misc_hints	include/GL/glext.h	4168;"	d
GL_PGI_vertex_hints	include/GL/glext.h	4164;"	d
GL_PHONG_HINT_WIN	include/GL/glext.h	1464;"	d
GL_PHONG_WIN	include/GL/glext.h	1463;"	d
GL_PIXEL_COUNTER_BITS_NV	include/GL/glext.h	2557;"	d
GL_PIXEL_COUNT_AVAILABLE_NV	include/GL/glext.h	2560;"	d
GL_PIXEL_COUNT_NV	include/GL/glext.h	2559;"	d
GL_PIXEL_CUBIC_WEIGHT_EXT	include/GL/glext.h	1542;"	d
GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS	include/GL/glext.h	955;"	d
GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS	include/GL/glext.h	954;"	d
GL_PIXEL_GROUP_COLOR_SGIS	include/GL/glext.h	956;"	d
GL_PIXEL_MAG_FILTER_EXT	include/GL/glext.h	1540;"	d
GL_PIXEL_MAP_A_TO_A	include/GL/gl.h	571;"	d
GL_PIXEL_MAP_A_TO_A_SIZE	include/GL/gl.h	581;"	d
GL_PIXEL_MAP_B_TO_B	include/GL/gl.h	570;"	d
GL_PIXEL_MAP_B_TO_B_SIZE	include/GL/gl.h	580;"	d
GL_PIXEL_MAP_G_TO_G	include/GL/gl.h	569;"	d
GL_PIXEL_MAP_G_TO_G_SIZE	include/GL/gl.h	579;"	d
GL_PIXEL_MAP_I_TO_A	include/GL/gl.h	567;"	d
GL_PIXEL_MAP_I_TO_A_SIZE	include/GL/gl.h	577;"	d
GL_PIXEL_MAP_I_TO_B	include/GL/gl.h	566;"	d
GL_PIXEL_MAP_I_TO_B_SIZE	include/GL/gl.h	576;"	d
GL_PIXEL_MAP_I_TO_G	include/GL/gl.h	565;"	d
GL_PIXEL_MAP_I_TO_G_SIZE	include/GL/gl.h	575;"	d
GL_PIXEL_MAP_I_TO_I	include/GL/gl.h	562;"	d
GL_PIXEL_MAP_I_TO_I_SIZE	include/GL/gl.h	572;"	d
GL_PIXEL_MAP_I_TO_R	include/GL/gl.h	564;"	d
GL_PIXEL_MAP_I_TO_R_SIZE	include/GL/gl.h	574;"	d
GL_PIXEL_MAP_R_TO_R	include/GL/gl.h	568;"	d
GL_PIXEL_MAP_R_TO_R_SIZE	include/GL/gl.h	578;"	d
GL_PIXEL_MAP_S_TO_S	include/GL/gl.h	563;"	d
GL_PIXEL_MAP_S_TO_S_SIZE	include/GL/gl.h	573;"	d
GL_PIXEL_MIN_FILTER_EXT	include/GL/glext.h	1541;"	d
GL_PIXEL_MODE_BIT	include/GL/gl.h	81;"	d
GL_PIXEL_SUBSAMPLE_2424_SGIX	include/GL/glext.h	1911;"	d
GL_PIXEL_SUBSAMPLE_4242_SGIX	include/GL/glext.h	1912;"	d
GL_PIXEL_SUBSAMPLE_4444_SGIX	include/GL/glext.h	1910;"	d
GL_PIXEL_TEXTURE_SGIS	include/GL/glext.h	953;"	d
GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX	include/GL/glext.h	1495;"	d
GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX	include/GL/glext.h	1496;"	d
GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX	include/GL/glext.h	1494;"	d
GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX	include/GL/glext.h	1493;"	d
GL_PIXEL_TEX_GEN_MODE_SGIX	include/GL/glext.h	961;"	d
GL_PIXEL_TEX_GEN_Q_CEILING_SGIX	include/GL/glext.h	1490;"	d
GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX	include/GL/glext.h	1492;"	d
GL_PIXEL_TEX_GEN_Q_ROUND_SGIX	include/GL/glext.h	1491;"	d
GL_PIXEL_TEX_GEN_SGIX	include/GL/glext.h	960;"	d
GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX	include/GL/glext.h	1142;"	d
GL_PIXEL_TILE_CACHE_INCREMENT_SGIX	include/GL/glext.h	1143;"	d
GL_PIXEL_TILE_CACHE_SIZE_SGIX	include/GL/glext.h	1149;"	d
GL_PIXEL_TILE_GRID_DEPTH_SGIX	include/GL/glext.h	1148;"	d
GL_PIXEL_TILE_GRID_HEIGHT_SGIX	include/GL/glext.h	1147;"	d
GL_PIXEL_TILE_GRID_WIDTH_SGIX	include/GL/glext.h	1146;"	d
GL_PIXEL_TILE_HEIGHT_SGIX	include/GL/glext.h	1145;"	d
GL_PIXEL_TILE_WIDTH_SGIX	include/GL/glext.h	1144;"	d
GL_PIXEL_TRANSFORM_2D_EXT	include/GL/glext.h	1539;"	d
GL_PIXEL_TRANSFORM_2D_MATRIX_EXT	include/GL/glext.h	1547;"	d
GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT	include/GL/glext.h	1545;"	d
GL_PN_TRIANGLES_ATI	include/GL/glext.h	2385;"	d
GL_PN_TRIANGLES_NORMAL_MODE_ATI	include/GL/glext.h	2388;"	d
GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI	include/GL/glext.h	2392;"	d
GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI	include/GL/glext.h	2393;"	d
GL_PN_TRIANGLES_POINT_MODE_ATI	include/GL/glext.h	2387;"	d
GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI	include/GL/glext.h	2391;"	d
GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI	include/GL/glext.h	2390;"	d
GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI	include/GL/glext.h	2389;"	d
GL_POINT	include/GL/gl.h	1061;"	d
GL_POINTS	include/GL/gl.h	99;"	d
GL_POINT_BIT	include/GL/gl.h	77;"	d
GL_POINT_DISTANCE_ATTENUATION	include/GL/glext.h	289;"	d
GL_POINT_DISTANCE_ATTENUATION_ARB	include/GL/glext.h	473;"	d
GL_POINT_FADE_THRESHOLD_SIZE	include/GL/glext.h	288;"	d
GL_POINT_FADE_THRESHOLD_SIZE_ARB	include/GL/glext.h	472;"	d
GL_POINT_FADE_THRESHOLD_SIZE_EXT	include/GL/glext.h	1194;"	d
GL_POINT_FADE_THRESHOLD_SIZE_SGIS	include/GL/glext.h	1201;"	d
GL_POINT_SIZE	include/GL/gl.h	461;"	d
GL_POINT_SIZE_GRANULARITY	include/GL/gl.h	463;"	d
GL_POINT_SIZE_MAX	include/GL/glext.h	287;"	d
GL_POINT_SIZE_MAX_ARB	include/GL/glext.h	471;"	d
GL_POINT_SIZE_MAX_EXT	include/GL/glext.h	1193;"	d
GL_POINT_SIZE_MAX_SGIS	include/GL/glext.h	1200;"	d
GL_POINT_SIZE_MIN	include/GL/glext.h	286;"	d
GL_POINT_SIZE_MIN_ARB	include/GL/glext.h	470;"	d
GL_POINT_SIZE_MIN_EXT	include/GL/glext.h	1192;"	d
GL_POINT_SIZE_MIN_SGIS	include/GL/glext.h	1199;"	d
GL_POINT_SIZE_RANGE	include/GL/gl.h	462;"	d
GL_POINT_SMOOTH	include/GL/gl.h	460;"	d
GL_POINT_SMOOTH_HINT	include/GL/gl.h	554;"	d
GL_POINT_SPRITE_ARB	include/GL/glext.h	785;"	d
GL_POINT_SPRITE_NV	include/GL/glext.h	2564;"	d
GL_POINT_SPRITE_R_MODE_NV	include/GL/glext.h	2566;"	d
GL_POINT_TOKEN	include/GL/gl.h	362;"	d
GL_POLYGON	include/GL/gl.h	108;"	d
GL_POLYGON_BIT	include/GL/gl.h	79;"	d
GL_POLYGON_MODE	include/GL/gl.h	481;"	d
GL_POLYGON_OFFSET_BIAS_EXT	include/GL/glext.h	807;"	d
GL_POLYGON_OFFSET_EXT	include/GL/glext.h	805;"	d
GL_POLYGON_OFFSET_FACTOR	include/GL/gl.h	1234;"	d
GL_POLYGON_OFFSET_FACTOR_EXT	include/GL/glext.h	806;"	d
GL_POLYGON_OFFSET_FILL	include/GL/gl.h	1238;"	d
GL_POLYGON_OFFSET_LINE	include/GL/gl.h	1237;"	d
GL_POLYGON_OFFSET_POINT	include/GL/gl.h	1236;"	d
GL_POLYGON_OFFSET_UNITS	include/GL/gl.h	1235;"	d
GL_POLYGON_SMOOTH	include/GL/gl.h	482;"	d
GL_POLYGON_SMOOTH_HINT	include/GL/gl.h	556;"	d
GL_POLYGON_STIPPLE	include/GL/gl.h	483;"	d
GL_POLYGON_STIPPLE_BIT	include/GL/gl.h	80;"	d
GL_POLYGON_TOKEN	include/GL/gl.h	364;"	d
GL_POSITION	include/GL/gl.h	804;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS	include/GL/gl.h	1364;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS	include/GL/glext.h	159;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI	include/GL/glext.h	930;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE	include/GL/gl.h	1360;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE	include/GL/glext.h	155;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI	include/GL/glext.h	926;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS	include/GL/gl.h	1363;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS	include/GL/glext.h	158;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI	include/GL/glext.h	929;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE	include/GL/gl.h	1359;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE	include/GL/glext.h	154;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI	include/GL/glext.h	925;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE	include/GL/gl.h	1369;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE	include/GL/glext.h	162;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI	include/GL/glext.h	936;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS	include/GL/gl.h	1362;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS	include/GL/glext.h	157;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI	include/GL/glext.h	928;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE	include/GL/gl.h	1358;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE	include/GL/glext.h	153;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI	include/GL/glext.h	924;"	d
GL_POST_COLOR_MATRIX_RED_BIAS	include/GL/gl.h	1361;"	d
GL_POST_COLOR_MATRIX_RED_BIAS	include/GL/glext.h	156;"	d
GL_POST_COLOR_MATRIX_RED_BIAS_SGI	include/GL/glext.h	927;"	d
GL_POST_COLOR_MATRIX_RED_SCALE	include/GL/gl.h	1357;"	d
GL_POST_COLOR_MATRIX_RED_SCALE	include/GL/glext.h	152;"	d
GL_POST_COLOR_MATRIX_RED_SCALE_SGI	include/GL/glext.h	923;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS	include/GL/gl.h	1404;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS	include/GL/glext.h	134;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS_EXT	include/GL/glext.h	916;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE	include/GL/gl.h	1400;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE	include/GL/glext.h	130;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE_EXT	include/GL/glext.h	912;"	d
GL_POST_CONVOLUTION_BLUE_BIAS	include/GL/gl.h	1403;"	d
GL_POST_CONVOLUTION_BLUE_BIAS	include/GL/glext.h	133;"	d
GL_POST_CONVOLUTION_BLUE_BIAS_EXT	include/GL/glext.h	915;"	d
GL_POST_CONVOLUTION_BLUE_SCALE	include/GL/gl.h	1399;"	d
GL_POST_CONVOLUTION_BLUE_SCALE	include/GL/glext.h	129;"	d
GL_POST_CONVOLUTION_BLUE_SCALE_EXT	include/GL/glext.h	911;"	d
GL_POST_CONVOLUTION_COLOR_TABLE	include/GL/gl.h	1368;"	d
GL_POST_CONVOLUTION_COLOR_TABLE	include/GL/glext.h	161;"	d
GL_POST_CONVOLUTION_COLOR_TABLE_SGI	include/GL/glext.h	935;"	d
GL_POST_CONVOLUTION_GREEN_BIAS	include/GL/gl.h	1402;"	d
GL_POST_CONVOLUTION_GREEN_BIAS	include/GL/glext.h	132;"	d
GL_POST_CONVOLUTION_GREEN_BIAS_EXT	include/GL/glext.h	914;"	d
GL_POST_CONVOLUTION_GREEN_SCALE	include/GL/gl.h	1398;"	d
GL_POST_CONVOLUTION_GREEN_SCALE	include/GL/glext.h	128;"	d
GL_POST_CONVOLUTION_GREEN_SCALE_EXT	include/GL/glext.h	910;"	d
GL_POST_CONVOLUTION_RED_BIAS	include/GL/gl.h	1401;"	d
GL_POST_CONVOLUTION_RED_BIAS	include/GL/glext.h	131;"	d
GL_POST_CONVOLUTION_RED_BIAS_EXT	include/GL/glext.h	913;"	d
GL_POST_CONVOLUTION_RED_SCALE	include/GL/gl.h	1397;"	d
GL_POST_CONVOLUTION_RED_SCALE	include/GL/glext.h	127;"	d
GL_POST_CONVOLUTION_RED_SCALE_EXT	include/GL/glext.h	909;"	d
GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP	include/GL/glext.h	1277;"	d
GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX	include/GL/glext.h	1213;"	d
GL_POST_TEXTURE_FILTER_BIAS_SGIX	include/GL/glext.h	1211;"	d
GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX	include/GL/glext.h	1214;"	d
GL_POST_TEXTURE_FILTER_SCALE_SGIX	include/GL/glext.h	1212;"	d
GL_PREFER_DOUBLEBUFFER_HINT_PGI	include/GL/glext.h	1324;"	d
GL_PRESERVE_ATI	include/GL/glext.h	2399;"	d
GL_PREVIOUS	include/GL/glext.h	276;"	d
GL_PREVIOUS_ARB	include/GL/glext.h	556;"	d
GL_PREVIOUS_EXT	include/GL/gl.h	1553;"	d
GL_PREVIOUS_EXT	include/GL/glext.h	1623;"	d
GL_PREVIOUS_TEXTURE_INPUT_NV	include/GL/glext.h	2080;"	d
GL_PRIMARY_COLOR	include/GL/glext.h	275;"	d
GL_PRIMARY_COLOR_ARB	include/GL/glext.h	555;"	d
GL_PRIMARY_COLOR_EXT	include/GL/gl.h	1552;"	d
GL_PRIMARY_COLOR_EXT	include/GL/glext.h	1622;"	d
GL_PRIMARY_COLOR_NV	include/GL/glext.h	1796;"	d
GL_PRIMITIVE_RESTART_INDEX_NV	include/GL/glext.h	2728;"	d
GL_PRIMITIVE_RESTART_NV	include/GL/glext.h	2727;"	d
GL_PROGRAM_ADDRESS_REGISTERS_ARB	include/GL/glext.h	632;"	d
GL_PROGRAM_ALU_INSTRUCTIONS_ARB	include/GL/glext.h	676;"	d
GL_PROGRAM_ATTRIBS_ARB	include/GL/glext.h	628;"	d
GL_PROGRAM_BINDING_ARB	include/GL/glext.h	610;"	d
GL_PROGRAM_ERROR_POSITION_ARB	include/GL/glext.h	609;"	d
GL_PROGRAM_ERROR_POSITION_NV	include/GL/glext.h	2181;"	d
GL_PROGRAM_ERROR_STRING_ARB	include/GL/glext.h	613;"	d
GL_PROGRAM_ERROR_STRING_NV	include/GL/glext.h	2710;"	d
GL_PROGRAM_FORMAT_ARB	include/GL/glext.h	615;"	d
GL_PROGRAM_FORMAT_ASCII_ARB	include/GL/glext.h	614;"	d
GL_PROGRAM_INSTRUCTIONS_ARB	include/GL/glext.h	616;"	d
GL_PROGRAM_LENGTH_ARB	include/GL/glext.h	600;"	d
GL_PROGRAM_LENGTH_NV	include/GL/glext.h	2153;"	d
GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB	include/GL/glext.h	634;"	d
GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB	include/GL/glext.h	679;"	d
GL_PROGRAM_NATIVE_ATTRIBS_ARB	include/GL/glext.h	630;"	d
GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB	include/GL/glext.h	618;"	d
GL_PROGRAM_NATIVE_PARAMETERS_ARB	include/GL/glext.h	626;"	d
GL_PROGRAM_NATIVE_TEMPORARIES_ARB	include/GL/glext.h	622;"	d
GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB	include/GL/glext.h	681;"	d
GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB	include/GL/glext.h	680;"	d
GL_PROGRAM_OBJECT_ARB	include/GL/glext.h	735;"	d
GL_PROGRAM_PARAMETERS_ARB	include/GL/glext.h	624;"	d
GL_PROGRAM_PARAMETER_NV	include/GL/glext.h	2174;"	d
GL_PROGRAM_RESIDENT_NV	include/GL/glext.h	2177;"	d
GL_PROGRAM_STRING_ARB	include/GL/glext.h	601;"	d
GL_PROGRAM_STRING_NV	include/GL/glext.h	2154;"	d
GL_PROGRAM_TARGET_NV	include/GL/glext.h	2176;"	d
GL_PROGRAM_TEMPORARIES_ARB	include/GL/glext.h	620;"	d
GL_PROGRAM_TEX_INDIRECTIONS_ARB	include/GL/glext.h	678;"	d
GL_PROGRAM_TEX_INSTRUCTIONS_ARB	include/GL/glext.h	677;"	d
GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB	include/GL/glext.h	638;"	d
GL_PROJECTION	include/GL/gl.h	898;"	d
GL_PROJECTION_MATRIX	include/GL/gl.h	525;"	d
GL_PROJECTION_STACK_DEPTH	include/GL/gl.h	522;"	d
GL_PROXY_COLOR_TABLE	include/GL/gl.h	1370;"	d
GL_PROXY_COLOR_TABLE	include/GL/glext.h	163;"	d
GL_PROXY_COLOR_TABLE_SGI	include/GL/glext.h	937;"	d
GL_PROXY_HISTOGRAM	include/GL/gl.h	1415;"	d
GL_PROXY_HISTOGRAM	include/GL/glext.h	136;"	d
GL_PROXY_HISTOGRAM_EXT	include/GL/glext.h	881;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE	include/GL/gl.h	1372;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE	include/GL/glext.h	165;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI	include/GL/glext.h	939;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE	include/GL/gl.h	1371;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE	include/GL/glext.h	164;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI	include/GL/glext.h	938;"	d
GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP	include/GL/glext.h	1278;"	d
GL_PROXY_TEXTURE_1D	include/GL/gl.h	1280;"	d
GL_PROXY_TEXTURE_1D_EXT	include/GL/glext.h	851;"	d
GL_PROXY_TEXTURE_2D	include/GL/gl.h	1281;"	d
GL_PROXY_TEXTURE_2D_EXT	include/GL/glext.h	852;"	d
GL_PROXY_TEXTURE_3D	include/GL/gl.h	1457;"	d
GL_PROXY_TEXTURE_3D	include/GL/glext.h	72;"	d
GL_PROXY_TEXTURE_3D_EXT	include/GL/glext.h	862;"	d
GL_PROXY_TEXTURE_4D_SGIS	include/GL/glext.h	970;"	d
GL_PROXY_TEXTURE_COLOR_TABLE_SGI	include/GL/glext.h	979;"	d
GL_PROXY_TEXTURE_CUBE_MAP	include/GL/glext.h	240;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARB	include/GL/glext.h	447;"	d
GL_PROXY_TEXTURE_CUBE_MAP_EXT	include/GL/glext.h	1734;"	d
GL_PROXY_TEXTURE_RECTANGLE_NV	include/GL/glext.h	2058;"	d
GL_Q	include/GL/gl.h	1119;"	d
GL_QUADRATIC_ATTENUATION	include/GL/gl.h	810;"	d
GL_QUADS	include/GL/gl.h	106;"	d
GL_QUAD_ALPHA4_SGIS	include/GL/glext.h	1167;"	d
GL_QUAD_ALPHA8_SGIS	include/GL/glext.h	1168;"	d
GL_QUAD_INTENSITY4_SGIS	include/GL/glext.h	1171;"	d
GL_QUAD_INTENSITY8_SGIS	include/GL/glext.h	1172;"	d
GL_QUAD_LUMINANCE4_SGIS	include/GL/glext.h	1169;"	d
GL_QUAD_LUMINANCE8_SGIS	include/GL/glext.h	1170;"	d
GL_QUAD_MESH_SUN	include/GL/glext.h	2540;"	d
GL_QUAD_STRIP	include/GL/gl.h	107;"	d
GL_QUAD_TEXTURE_SELECT_SGIS	include/GL/glext.h	1174;"	d
GL_QUARTER_BIT_ATI	include/GL/glext.h	2376;"	d
GL_QUERY_COUNTER_BITS	include/GL/glext.h	326;"	d
GL_QUERY_COUNTER_BITS_ARB	include/GL/glext.h	727;"	d
GL_QUERY_RESULT	include/GL/glext.h	328;"	d
GL_QUERY_RESULT_ARB	include/GL/glext.h	729;"	d
GL_QUERY_RESULT_AVAILABLE	include/GL/glext.h	329;"	d
GL_QUERY_RESULT_AVAILABLE_ARB	include/GL/glext.h	730;"	d
GL_R	include/GL/gl.h	1118;"	d
GL_R1UI_C3F_V3F_SUN	include/GL/glext.h	1673;"	d
GL_R1UI_C4F_N3F_V3F_SUN	include/GL/glext.h	1675;"	d
GL_R1UI_C4UB_V3F_SUN	include/GL/glext.h	1672;"	d
GL_R1UI_N3F_V3F_SUN	include/GL/glext.h	1674;"	d
GL_R1UI_T2F_C4F_N3F_V3F_SUN	include/GL/glext.h	1678;"	d
GL_R1UI_T2F_N3F_V3F_SUN	include/GL/glext.h	1677;"	d
GL_R1UI_T2F_V3F_SUN	include/GL/glext.h	1676;"	d
GL_R1UI_V3F_SUN	include/GL/glext.h	1671;"	d
GL_R3_G3_B2	include/GL/gl.h	1260;"	d
GL_RASTER_POSITION_UNCLIPPED_IBM	include/GL/glext.h	1448;"	d
GL_READ_BUFFER	include/GL/gl.h	541;"	d
GL_READ_ONLY	include/GL/glext.h	344;"	d
GL_READ_ONLY_ARB	include/GL/glext.h	709;"	d
GL_READ_PIXEL_DATA_RANGE_LENGTH_NV	include/GL/glext.h	2721;"	d
GL_READ_PIXEL_DATA_RANGE_NV	include/GL/glext.h	2719;"	d
GL_READ_PIXEL_DATA_RANGE_POINTER_NV	include/GL/glext.h	2723;"	d
GL_READ_WRITE	include/GL/glext.h	346;"	d
GL_READ_WRITE_ARB	include/GL/glext.h	711;"	d
GL_RECLAIM_MEMORY_HINT_PGI	include/GL/glext.h	1326;"	d
GL_RED	include/GL/gl.h	929;"	d
GL_REDUCE	include/GL/gl.h	1391;"	d
GL_REDUCE	include/GL/glext.h	121;"	d
GL_REDUCE_EXT	include/GL/glext.h	903;"	d
GL_RED_BIAS	include/GL/gl.h	599;"	d
GL_RED_BITS	include/GL/gl.h	624;"	d
GL_RED_BIT_ATI	include/GL/glext.h	2369;"	d
GL_RED_MAX_CLAMP_INGR	include/GL/glext.h	1696;"	d
GL_RED_MIN_CLAMP_INGR	include/GL/glext.h	1692;"	d
GL_RED_SCALE	include/GL/gl.h	598;"	d
GL_REFERENCE_PLANE_EQUATION_SGIX	include/GL/glext.h	1240;"	d
GL_REFERENCE_PLANE_SGIX	include/GL/glext.h	1239;"	d
GL_REFLECTION_MAP	include/GL/glext.h	231;"	d
GL_REFLECTION_MAP_ARB	include/GL/glext.h	438;"	d
GL_REFLECTION_MAP_EXT	include/GL/glext.h	1725;"	d
GL_REFLECTION_MAP_NV	include/GL/glext.h	1720;"	d
GL_REGISTER_COMBINERS_NV	include/GL/glext.h	1786;"	d
GL_REG_0_ATI	include/GL/glext.h	2279;"	d
GL_REG_10_ATI	include/GL/glext.h	2289;"	d
GL_REG_11_ATI	include/GL/glext.h	2290;"	d
GL_REG_12_ATI	include/GL/glext.h	2291;"	d
GL_REG_13_ATI	include/GL/glext.h	2292;"	d
GL_REG_14_ATI	include/GL/glext.h	2293;"	d
GL_REG_15_ATI	include/GL/glext.h	2294;"	d
GL_REG_16_ATI	include/GL/glext.h	2295;"	d
GL_REG_17_ATI	include/GL/glext.h	2296;"	d
GL_REG_18_ATI	include/GL/glext.h	2297;"	d
GL_REG_19_ATI	include/GL/glext.h	2298;"	d
GL_REG_1_ATI	include/GL/glext.h	2280;"	d
GL_REG_20_ATI	include/GL/glext.h	2299;"	d
GL_REG_21_ATI	include/GL/glext.h	2300;"	d
GL_REG_22_ATI	include/GL/glext.h	2301;"	d
GL_REG_23_ATI	include/GL/glext.h	2302;"	d
GL_REG_24_ATI	include/GL/glext.h	2303;"	d
GL_REG_25_ATI	include/GL/glext.h	2304;"	d
GL_REG_26_ATI	include/GL/glext.h	2305;"	d
GL_REG_27_ATI	include/GL/glext.h	2306;"	d
GL_REG_28_ATI	include/GL/glext.h	2307;"	d
GL_REG_29_ATI	include/GL/glext.h	2308;"	d
GL_REG_2_ATI	include/GL/glext.h	2281;"	d
GL_REG_30_ATI	include/GL/glext.h	2309;"	d
GL_REG_31_ATI	include/GL/glext.h	2310;"	d
GL_REG_3_ATI	include/GL/glext.h	2282;"	d
GL_REG_4_ATI	include/GL/glext.h	2283;"	d
GL_REG_5_ATI	include/GL/glext.h	2284;"	d
GL_REG_6_ATI	include/GL/glext.h	2285;"	d
GL_REG_7_ATI	include/GL/glext.h	2286;"	d
GL_REG_8_ATI	include/GL/glext.h	2287;"	d
GL_REG_9_ATI	include/GL/glext.h	2288;"	d
GL_RENDER	include/GL/gl.h	1080;"	d
GL_RENDERER	include/GL/gl.h	1111;"	d
GL_RENDER_MODE	include/GL/gl.h	552;"	d
GL_REND_screen_coordinates	include/GL/glext.h	4506;"	d
GL_REPEAT	include/GL/gl.h	1219;"	d
GL_REPLACE	include/GL/gl.h	1104;"	d
GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN	include/GL/glext.h	1670;"	d
GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN	include/GL/glext.h	1669;"	d
GL_REPLACEMENT_CODE_ARRAY_SUN	include/GL/glext.h	1667;"	d
GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN	include/GL/glext.h	1668;"	d
GL_REPLACEMENT_CODE_SUN	include/GL/glext.h	1666;"	d
GL_REPLACE_EXT	include/GL/glext.h	850;"	d
GL_REPLACE_MIDDLE_SUN	include/GL/glext.h	1663;"	d
GL_REPLACE_OLDEST_SUN	include/GL/glext.h	1664;"	d
GL_REPLICATE_BORDER	include/GL/gl.h	1406;"	d
GL_REPLICATE_BORDER	include/GL/glext.h	177;"	d
GL_REPLICATE_BORDER_HP	include/GL/glext.h	1284;"	d
GL_RESAMPLE_AVERAGE_OML	include/GL/glext.h	2257;"	d
GL_RESAMPLE_DECIMATE_OML	include/GL/glext.h	2258;"	d
GL_RESAMPLE_DECIMATE_SGIX	include/GL/glext.h	1978;"	d
GL_RESAMPLE_REPLICATE_OML	include/GL/glext.h	2255;"	d
GL_RESAMPLE_REPLICATE_SGIX	include/GL/glext.h	1976;"	d
GL_RESAMPLE_ZERO_FILL_OML	include/GL/glext.h	2256;"	d
GL_RESAMPLE_ZERO_FILL_SGIX	include/GL/glext.h	1977;"	d
GL_RESCALE_NORMAL	include/GL/gl.h	1444;"	d
GL_RESCALE_NORMAL	include/GL/glext.h	65;"	d
GL_RESCALE_NORMAL_EXT	include/GL/glext.h	1050;"	d
GL_RESTART_SUN	include/GL/glext.h	1662;"	d
GL_RETURN	include/GL/gl.h	61;"	d
GL_RGB	include/GL/gl.h	933;"	d
GL_RGB10	include/GL/gl.h	1264;"	d
GL_RGB10_A2	include/GL/gl.h	1271;"	d
GL_RGB10_A2_EXT	include/GL/glext.h	841;"	d
GL_RGB10_EXT	include/GL/glext.h	834;"	d
GL_RGB12	include/GL/gl.h	1265;"	d
GL_RGB12_EXT	include/GL/glext.h	835;"	d
GL_RGB16	include/GL/gl.h	1266;"	d
GL_RGB16_EXT	include/GL/glext.h	836;"	d
GL_RGB2_EXT	include/GL/glext.h	830;"	d
GL_RGB4	include/GL/gl.h	1261;"	d
GL_RGB4_EXT	include/GL/glext.h	831;"	d
GL_RGB4_S3TC	include/GL/glext.h	2640;"	d
GL_RGB5	include/GL/gl.h	1262;"	d
GL_RGB5_A1	include/GL/gl.h	1269;"	d
GL_RGB5_A1_EXT	include/GL/glext.h	839;"	d
GL_RGB5_EXT	include/GL/glext.h	832;"	d
GL_RGB8	include/GL/gl.h	1263;"	d
GL_RGB8_EXT	include/GL/glext.h	833;"	d
GL_RGBA	include/GL/gl.h	934;"	d
GL_RGBA12	include/GL/gl.h	1272;"	d
GL_RGBA12_EXT	include/GL/glext.h	842;"	d
GL_RGBA16	include/GL/gl.h	1273;"	d
GL_RGBA16_EXT	include/GL/glext.h	843;"	d
GL_RGBA2	include/GL/gl.h	1267;"	d
GL_RGBA2_EXT	include/GL/glext.h	837;"	d
GL_RGBA4	include/GL/gl.h	1268;"	d
GL_RGBA4_EXT	include/GL/glext.h	838;"	d
GL_RGBA4_S3TC	include/GL/glext.h	2642;"	d
GL_RGBA8	include/GL/gl.h	1270;"	d
GL_RGBA8_EXT	include/GL/glext.h	840;"	d
GL_RGBA_FLOAT16_ATI	include/GL/glext.h	2678;"	d
GL_RGBA_FLOAT32_ATI	include/GL/glext.h	2672;"	d
GL_RGBA_MODE	include/GL/gl.h	549;"	d
GL_RGBA_S3TC	include/GL/glext.h	2641;"	d
GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV	include/GL/glext.h	2066;"	d
GL_RGB_FLOAT16_ATI	include/GL/glext.h	2679;"	d
GL_RGB_FLOAT32_ATI	include/GL/glext.h	2673;"	d
GL_RGB_S3TC	include/GL/glext.h	2639;"	d
GL_RGB_SCALE	include/GL/glext.h	270;"	d
GL_RGB_SCALE_ARB	include/GL/glext.h	550;"	d
GL_RGB_SCALE_EXT	include/GL/gl.h	1548;"	d
GL_RGB_SCALE_EXT	include/GL/glext.h	1618;"	d
GL_RIGHT	include/GL/gl.h	258;"	d
GL_S	include/GL/gl.h	1116;"	d
GL_S3_s3tc	include/GL/glext.h	5686;"	d
GL_SAMPLES	include/GL/glext.h	226;"	d
GL_SAMPLES_3DFX	include/GL/glext.h	1937;"	d
GL_SAMPLES_ARB	include/GL/glext.h	427;"	d
GL_SAMPLES_EXT	include/GL/glext.h	1957;"	d
GL_SAMPLES_PASSED	include/GL/glext.h	359;"	d
GL_SAMPLES_PASSED_ARB	include/GL/glext.h	731;"	d
GL_SAMPLES_SGIS	include/GL/glext.h	1043;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	include/GL/glext.h	222;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE_ARB	include/GL/glext.h	423;"	d
GL_SAMPLE_ALPHA_TO_MASK_EXT	include/GL/glext.h	1946;"	d
GL_SAMPLE_ALPHA_TO_MASK_SGIS	include/GL/glext.h	1032;"	d
GL_SAMPLE_ALPHA_TO_ONE	include/GL/glext.h	223;"	d
GL_SAMPLE_ALPHA_TO_ONE_ARB	include/GL/glext.h	424;"	d
GL_SAMPLE_ALPHA_TO_ONE_EXT	include/GL/glext.h	1947;"	d
GL_SAMPLE_ALPHA_TO_ONE_SGIS	include/GL/glext.h	1033;"	d
GL_SAMPLE_BUFFERS	include/GL/glext.h	225;"	d
GL_SAMPLE_BUFFERS_3DFX	include/GL/glext.h	1936;"	d
GL_SAMPLE_BUFFERS_ARB	include/GL/glext.h	426;"	d
GL_SAMPLE_BUFFERS_EXT	include/GL/glext.h	1956;"	d
GL_SAMPLE_BUFFERS_SGIS	include/GL/glext.h	1042;"	d
GL_SAMPLE_COVERAGE	include/GL/glext.h	224;"	d
GL_SAMPLE_COVERAGE_ARB	include/GL/glext.h	425;"	d
GL_SAMPLE_COVERAGE_INVERT	include/GL/glext.h	228;"	d
GL_SAMPLE_COVERAGE_INVERT_ARB	include/GL/glext.h	429;"	d
GL_SAMPLE_COVERAGE_VALUE	include/GL/glext.h	227;"	d
GL_SAMPLE_COVERAGE_VALUE_ARB	include/GL/glext.h	428;"	d
GL_SAMPLE_MASK_EXT	include/GL/glext.h	1948;"	d
GL_SAMPLE_MASK_INVERT_EXT	include/GL/glext.h	1959;"	d
GL_SAMPLE_MASK_INVERT_SGIS	include/GL/glext.h	1045;"	d
GL_SAMPLE_MASK_SGIS	include/GL/glext.h	1034;"	d
GL_SAMPLE_MASK_VALUE_EXT	include/GL/glext.h	1958;"	d
GL_SAMPLE_MASK_VALUE_SGIS	include/GL/glext.h	1044;"	d
GL_SAMPLE_PATTERN_EXT	include/GL/glext.h	1960;"	d
GL_SAMPLE_PATTERN_SGIS	include/GL/glext.h	1046;"	d
GL_SATURATE_BIT_ATI	include/GL/glext.h	2378;"	d
GL_SCALAR_EXT	include/GL/glext.h	2470;"	d
GL_SCALEBIAS_HINT_SGIX	include/GL/glext.h	2239;"	d
GL_SCALE_BY_FOUR_NV	include/GL/glext.h	1812;"	d
GL_SCALE_BY_ONE_HALF_NV	include/GL/glext.h	1813;"	d
GL_SCALE_BY_TWO_NV	include/GL/glext.h	1811;"	d
GL_SCISSOR_BIT	include/GL/gl.h	95;"	d
GL_SCISSOR_BOX	include/GL/gl.h	542;"	d
GL_SCISSOR_TEST	include/GL/gl.h	543;"	d
GL_SCREEN_COORDINATES_REND	include/GL/glext.h	1593;"	d
GL_SECONDARY_COLOR_ARRAY	include/GL/glext.h	310;"	d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING	include/GL/glext.h	340;"	d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB	include/GL/glext.h	705;"	d
GL_SECONDARY_COLOR_ARRAY_EXT	include/GL/glext.h	1570;"	d
GL_SECONDARY_COLOR_ARRAY_LIST_IBM	include/GL/glext.h	1896;"	d
GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM	include/GL/glext.h	1904;"	d
GL_SECONDARY_COLOR_ARRAY_POINTER	include/GL/glext.h	309;"	d
GL_SECONDARY_COLOR_ARRAY_POINTER_EXT	include/GL/glext.h	1569;"	d
GL_SECONDARY_COLOR_ARRAY_SIZE	include/GL/glext.h	306;"	d
GL_SECONDARY_COLOR_ARRAY_SIZE_EXT	include/GL/glext.h	1566;"	d
GL_SECONDARY_COLOR_ARRAY_STRIDE	include/GL/glext.h	308;"	d
GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT	include/GL/glext.h	1568;"	d
GL_SECONDARY_COLOR_ARRAY_TYPE	include/GL/glext.h	307;"	d
GL_SECONDARY_COLOR_ARRAY_TYPE_EXT	include/GL/glext.h	1567;"	d
GL_SECONDARY_COLOR_NV	include/GL/glext.h	1797;"	d
GL_SECONDARY_INTERPOLATOR_ATI	include/GL/glext.h	2354;"	d
GL_SELECT	include/GL/gl.h	1082;"	d
GL_SELECTION_BUFFER_POINTER	include/GL/gl.h	663;"	d
GL_SELECTION_BUFFER_SIZE	include/GL/gl.h	664;"	d
GL_SEPARABLE_2D	include/GL/gl.h	1387;"	d
GL_SEPARABLE_2D	include/GL/glext.h	117;"	d
GL_SEPARABLE_2D_EXT	include/GL/glext.h	899;"	d
GL_SEPARATE_SPECULAR_COLOR	include/GL/gl.h	1449;"	d
GL_SEPARATE_SPECULAR_COLOR	include/GL/glext.h	94;"	d
GL_SEPARATE_SPECULAR_COLOR_EXT	include/GL/glext.h	1560;"	d
GL_SET	include/GL/gl.h	860;"	d
GL_SGIS_detail_texture	include/GL/glext.h	3886;"	d
GL_SGIS_fog_function	include/GL/glext.h	4114;"	d
GL_SGIS_generate_mipmap	include/GL/glext.h	3956;"	d
GL_SGIS_multisample	include/GL/glext.h	3914;"	d
GL_SGIS_pixel_texture	include/GL/glext.h	3832;"	d
GL_SGIS_point_line_texgen	include/GL/glext.h	4990;"	d
GL_SGIS_point_parameters	include/GL/glext.h	4032;"	d
GL_SGIS_sharpen_texture	include/GL/glext.h	3896;"	d
GL_SGIS_texture4D	include/GL/glext.h	3850;"	d
GL_SGIS_texture_border_clamp	include/GL/glext.h	3972;"	d
GL_SGIS_texture_color_mask	include/GL/glext.h	4994;"	d
GL_SGIS_texture_edge_clamp	include/GL/glext.h	3968;"	d
GL_SGIS_texture_filter4	include/GL/glext.h	3706;"	d
GL_SGIS_texture_lod	include/GL/glext.h	3910;"	d
GL_SGIX_async	include/GL/glext.h	4362;"	d
GL_SGIX_async_histogram	include/GL/glext.h	4384;"	d
GL_SGIX_async_pixel	include/GL/glext.h	4380;"	d
GL_SGIX_blend_alpha_minmax	include/GL/glext.h	4354;"	d
GL_SGIX_calligraphic_fragment	include/GL/glext.h	4216;"	d
GL_SGIX_clipmap	include/GL/glext.h	3960;"	d
GL_SGIX_convolution_accuracy	include/GL/glext.h	4982;"	d
GL_SGIX_depth_pass_instrument	include/GL/glext.h	4948;"	d
GL_SGIX_depth_texture	include/GL/glext.h	4110;"	d
GL_SGIX_flush_raster	include/GL/glext.h	4102;"	d
GL_SGIX_fog_offset	include/GL/glext.h	4124;"	d
GL_SGIX_fog_scale	include/GL/glext.h	4572;"	d
GL_SGIX_fragment_lighting	include/GL/glext.h	4276;"	d
GL_SGIX_framezoom	include/GL/glext.h	4064;"	d
GL_SGIX_igloo_interface	include/GL/glext.h	5002;"	d
GL_SGIX_instruments	include/GL/glext.h	4042;"	d
GL_SGIX_interlace	include/GL/glext.h	3992;"	d
GL_SGIX_ir_instrument1	include/GL/glext.h	4212;"	d
GL_SGIX_list_priority	include/GL/glext.h	4194;"	d
GL_SGIX_pixel_texture	include/GL/glext.h	3824;"	d
GL_SGIX_pixel_tiles	include/GL/glext.h	3996;"	d
GL_SGIX_polynomial_ffd	include/GL/glext.h	4080;"	d
GL_SGIX_reference_plane	include/GL/glext.h	4094;"	d
GL_SGIX_resample	include/GL/glext.h	4986;"	d
GL_SGIX_scalebias_hint	include/GL/glext.h	5234;"	d
GL_SGIX_shadow	include/GL/glext.h	3964;"	d
GL_SGIX_shadow_ambient	include/GL/glext.h	4224;"	d
GL_SGIX_sprite	include/GL/glext.h	4004;"	d
GL_SGIX_subsample	include/GL/glext.h	4936;"	d
GL_SGIX_tag_sample_buffer	include/GL/glext.h	4072;"	d
GL_SGIX_texture_add_env	include/GL/glext.h	4150;"	d
GL_SGIX_texture_coordinate_clamp	include/GL/glext.h	5230;"	d
GL_SGIX_texture_lod_bias	include/GL/glext.h	4220;"	d
GL_SGIX_texture_multi_buffer	include/GL/glext.h	4018;"	d
GL_SGIX_texture_scale_bias	include/GL/glext.h	4060;"	d
GL_SGIX_texture_select	include/GL/glext.h	4000;"	d
GL_SGIX_vertex_preclip	include/GL/glext.h	4978;"	d
GL_SGIX_ycrcb	include/GL/glext.h	4272;"	d
GL_SGIX_ycrcb_subsample	include/GL/glext.h	4944;"	d
GL_SGIX_ycrcba	include/GL/glext.h	4940;"	d
GL_SGI_color_table	include/GL/glext.h	3804;"	d
GL_SGI_texture_color_table	include/GL/glext.h	3860;"	d
GL_SHADER_CONSISTENT_NV	include/GL/glext.h	2070;"	d
GL_SHADER_OBJECT_ARB	include/GL/glext.h	736;"	d
GL_SHADER_OPERATION_NV	include/GL/glext.h	2072;"	d
GL_SHADE_MODEL	include/GL/gl.h	492;"	d
GL_SHADOW_AMBIENT_SGIX	include/GL/glext.h	1379;"	d
GL_SHADOW_ATTENUATION_EXT	include/GL/glext.h	1476;"	d
GL_SHARED_TEXTURE_PALETTE_EXT	include/GL/glext.h	1554;"	d
GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS	include/GL/glext.h	1012;"	d
GL_SHININESS	include/GL/gl.h	889;"	d
GL_SHORT	include/GL/gl.h	229;"	d
GL_SIGNED_ALPHA8_NV	include/GL/glext.h	2110;"	d
GL_SIGNED_ALPHA_NV	include/GL/glext.h	2109;"	d
GL_SIGNED_HILO16_NV	include/GL/glext.h	2100;"	d
GL_SIGNED_HILO8_NV	include/GL/glext.h	2585;"	d
GL_SIGNED_HILO_NV	include/GL/glext.h	2099;"	d
GL_SIGNED_IDENTITY_NV	include/GL/glext.h	1809;"	d
GL_SIGNED_INTENSITY8_NV	include/GL/glext.h	2112;"	d
GL_SIGNED_INTENSITY_NV	include/GL/glext.h	2111;"	d
GL_SIGNED_LUMINANCE8_ALPHA8_NV	include/GL/glext.h	2108;"	d
GL_SIGNED_LUMINANCE8_NV	include/GL/glext.h	2106;"	d
GL_SIGNED_LUMINANCE_ALPHA_NV	include/GL/glext.h	2107;"	d
GL_SIGNED_LUMINANCE_NV	include/GL/glext.h	2105;"	d
GL_SIGNED_NEGATE_NV	include/GL/glext.h	1810;"	d
GL_SIGNED_RGB8_NV	include/GL/glext.h	2104;"	d
GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV	include/GL/glext.h	2117;"	d
GL_SIGNED_RGBA8_NV	include/GL/glext.h	2102;"	d
GL_SIGNED_RGBA_NV	include/GL/glext.h	2101;"	d
GL_SIGNED_RGB_NV	include/GL/glext.h	2103;"	d
GL_SIGNED_RGB_UNSIGNED_ALPHA_NV	include/GL/glext.h	2116;"	d
GL_SINGLE_COLOR	include/GL/gl.h	1448;"	d
GL_SINGLE_COLOR	include/GL/glext.h	93;"	d
GL_SINGLE_COLOR_EXT	include/GL/glext.h	1559;"	d
GL_SLICE_ACCUM_SUN	include/GL/glext.h	2545;"	d
GL_SMOOTH	include/GL/gl.h	1089;"	d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	include/GL/gl.h	1475;"	d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	include/GL/glext.h	98;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	include/GL/gl.h	1474;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	include/GL/glext.h	97;"	d
GL_SMOOTH_POINT_SIZE_GRANULARITY	include/GL/gl.h	1473;"	d
GL_SMOOTH_POINT_SIZE_GRANULARITY	include/GL/glext.h	96;"	d
GL_SMOOTH_POINT_SIZE_RANGE	include/GL/gl.h	1472;"	d
GL_SMOOTH_POINT_SIZE_RANGE	include/GL/glext.h	95;"	d
GL_SOURCE0_ALPHA	include/GL/glext.h	261;"	d
GL_SOURCE0_ALPHA_ARB	include/GL/glext.h	541;"	d
GL_SOURCE0_ALPHA_EXT	include/GL/gl.h	1557;"	d
GL_SOURCE0_ALPHA_EXT	include/GL/glext.h	1627;"	d
GL_SOURCE0_RGB	include/GL/glext.h	258;"	d
GL_SOURCE0_RGB_ARB	include/GL/glext.h	538;"	d
GL_SOURCE0_RGB_EXT	include/GL/gl.h	1554;"	d
GL_SOURCE0_RGB_EXT	include/GL/glext.h	1624;"	d
GL_SOURCE1_ALPHA	include/GL/glext.h	262;"	d
GL_SOURCE1_ALPHA_ARB	include/GL/glext.h	542;"	d
GL_SOURCE1_ALPHA_EXT	include/GL/gl.h	1558;"	d
GL_SOURCE1_ALPHA_EXT	include/GL/glext.h	1628;"	d
GL_SOURCE1_RGB	include/GL/glext.h	259;"	d
GL_SOURCE1_RGB_ARB	include/GL/glext.h	539;"	d
GL_SOURCE1_RGB_EXT	include/GL/gl.h	1555;"	d
GL_SOURCE1_RGB_EXT	include/GL/glext.h	1625;"	d
GL_SOURCE2_ALPHA	include/GL/glext.h	263;"	d
GL_SOURCE2_ALPHA_ARB	include/GL/glext.h	543;"	d
GL_SOURCE2_ALPHA_EXT	include/GL/gl.h	1559;"	d
GL_SOURCE2_ALPHA_EXT	include/GL/glext.h	1629;"	d
GL_SOURCE2_RGB	include/GL/glext.h	260;"	d
GL_SOURCE2_RGB_ARB	include/GL/glext.h	540;"	d
GL_SOURCE2_RGB_EXT	include/GL/gl.h	1556;"	d
GL_SOURCE2_RGB_EXT	include/GL/glext.h	1626;"	d
GL_SOURCE3_ALPHA_NV	include/GL/glext.h	1863;"	d
GL_SOURCE3_RGB_NV	include/GL/glext.h	1862;"	d
GL_SPARE0_NV	include/GL/glext.h	1798;"	d
GL_SPARE0_PLUS_SECONDARY_COLOR_NV	include/GL/glext.h	1802;"	d
GL_SPARE1_NV	include/GL/glext.h	1799;"	d
GL_SPECULAR	include/GL/gl.h	803;"	d
GL_SPHERE_MAP	include/GL/gl.h	1143;"	d
GL_SPOT_CUTOFF	include/GL/gl.h	807;"	d
GL_SPOT_DIRECTION	include/GL/gl.h	805;"	d
GL_SPOT_EXPONENT	include/GL/gl.h	806;"	d
GL_SPRITE_AXIAL_SGIX	include/GL/glext.h	1182;"	d
GL_SPRITE_AXIS_SGIX	include/GL/glext.h	1180;"	d
GL_SPRITE_EYE_ALIGNED_SGIX	include/GL/glext.h	1184;"	d
GL_SPRITE_MODE_SGIX	include/GL/glext.h	1179;"	d
GL_SPRITE_OBJECT_ALIGNED_SGIX	include/GL/glext.h	1183;"	d
GL_SPRITE_SGIX	include/GL/glext.h	1178;"	d
GL_SPRITE_TRANSLATION_SGIX	include/GL/glext.h	1181;"	d
GL_SRC0_ALPHA	include/GL/glext.h	371;"	d
GL_SRC0_RGB	include/GL/glext.h	368;"	d
GL_SRC1_ALPHA	include/GL/glext.h	372;"	d
GL_SRC1_RGB	include/GL/glext.h	369;"	d
GL_SRC2_ALPHA	include/GL/glext.h	373;"	d
GL_SRC2_RGB	include/GL/glext.h	370;"	d
GL_SRC_ALPHA	include/GL/gl.h	123;"	d
GL_SRC_ALPHA_SATURATE	include/GL/gl.h	137;"	d
GL_SRC_COLOR	include/GL/gl.h	121;"	d
GL_STACK_OVERFLOW	include/GL/gl.h	348;"	d
GL_STACK_UNDERFLOW	include/GL/gl.h	349;"	d
GL_STATIC_ATI	include/GL/glext.h	2397;"	d
GL_STATIC_COPY	include/GL/glext.h	355;"	d
GL_STATIC_COPY_ARB	include/GL/glext.h	720;"	d
GL_STATIC_DRAW	include/GL/glext.h	353;"	d
GL_STATIC_DRAW_ARB	include/GL/glext.h	718;"	d
GL_STATIC_READ	include/GL/glext.h	354;"	d
GL_STATIC_READ_ARB	include/GL/glext.h	719;"	d
GL_STENCIL	include/GL/gl.h	923;"	d
GL_STENCIL_BACK_FAIL_ATI	include/GL/glext.h	2743;"	d
GL_STENCIL_BACK_FUNC_ATI	include/GL/glext.h	2742;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI	include/GL/glext.h	2744;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI	include/GL/glext.h	2745;"	d
GL_STENCIL_BITS	include/GL/gl.h	629;"	d
GL_STENCIL_BUFFER_BIT	include/GL/gl.h	86;"	d
GL_STENCIL_CLEAR_VALUE	include/GL/gl.h	510;"	d
GL_STENCIL_FAIL	include/GL/gl.h	513;"	d
GL_STENCIL_FUNC	include/GL/gl.h	511;"	d
GL_STENCIL_INDEX	include/GL/gl.h	927;"	d
GL_STENCIL_PASS_DEPTH_FAIL	include/GL/gl.h	514;"	d
GL_STENCIL_PASS_DEPTH_PASS	include/GL/gl.h	515;"	d
GL_STENCIL_REF	include/GL/gl.h	516;"	d
GL_STENCIL_TEST	include/GL/gl.h	509;"	d
GL_STENCIL_TEST_TWO_SIDE_EXT	include/GL/glext.h	2596;"	d
GL_STENCIL_VALUE_MASK	include/GL/gl.h	512;"	d
GL_STENCIL_WRITEMASK	include/GL/gl.h	517;"	d
GL_STEREO	include/GL/gl.h	551;"	d
GL_STORAGE_CACHED_APPLE	include/GL/glext.h	2628;"	d
GL_STORAGE_SHARED_APPLE	include/GL/glext.h	2629;"	d
GL_STREAM_COPY	include/GL/glext.h	352;"	d
GL_STREAM_COPY_ARB	include/GL/glext.h	717;"	d
GL_STREAM_DRAW	include/GL/glext.h	350;"	d
GL_STREAM_DRAW_ARB	include/GL/glext.h	715;"	d
GL_STREAM_READ	include/GL/glext.h	351;"	d
GL_STREAM_READ_ARB	include/GL/glext.h	716;"	d
GL_STRICT_DEPTHFUNC_HINT_PGI	include/GL/glext.h	1336;"	d
GL_STRICT_LIGHTING_HINT_PGI	include/GL/glext.h	1337;"	d
GL_STRICT_SCISSOR_HINT_PGI	include/GL/glext.h	1338;"	d
GL_SUBPIXEL_BITS	include/GL/gl.h	622;"	d
GL_SUBTRACT	include/GL/glext.h	273;"	d
GL_SUBTRACT_ARB	include/GL/glext.h	553;"	d
GL_SUB_ATI	include/GL/glext.h	2346;"	d
GL_SUNX_constant_data	include/GL/glext.h	4576;"	d
GL_SUN_convolution_border_modes	include/GL/glext.h	4748;"	d
GL_SUN_global_alpha	include/GL/glext.h	4584;"	d
GL_SUN_mesh_array	include/GL/glext.h	5540;"	d
GL_SUN_slice_accum	include/GL/glext.h	5548;"	d
GL_SUN_triangle_list	include/GL/glext.h	4606;"	d
GL_SUN_vertex	include/GL/glext.h	4626;"	d
GL_SWIZZLE_STQ_ATI	include/GL/glext.h	2364;"	d
GL_SWIZZLE_STQ_DQ_ATI	include/GL/glext.h	2366;"	d
GL_SWIZZLE_STRQ_ATI	include/GL/glext.h	2367;"	d
GL_SWIZZLE_STRQ_DQ_ATI	include/GL/glext.h	2368;"	d
GL_SWIZZLE_STR_ATI	include/GL/glext.h	2363;"	d
GL_SWIZZLE_STR_DR_ATI	include/GL/glext.h	2365;"	d
GL_T	include/GL/gl.h	1117;"	d
GL_T2F_C3F_V3F	include/GL/gl.h	1327;"	d
GL_T2F_C4F_N3F_V3F	include/GL/gl.h	1329;"	d
GL_T2F_C4UB_V3F	include/GL/gl.h	1326;"	d
GL_T2F_IUI_N3F_V2F_EXT	include/GL/glext.h	1404;"	d
GL_T2F_IUI_N3F_V3F_EXT	include/GL/glext.h	1405;"	d
GL_T2F_IUI_V2F_EXT	include/GL/glext.h	1402;"	d
GL_T2F_IUI_V3F_EXT	include/GL/glext.h	1403;"	d
GL_T2F_N3F_V3F	include/GL/gl.h	1328;"	d
GL_T2F_V3F	include/GL/gl.h	1324;"	d
GL_T4F_C4F_N3F_V4F	include/GL/gl.h	1330;"	d
GL_T4F_V4F	include/GL/gl.h	1325;"	d
GL_TABLE_TOO_LARGE	include/GL/gl.h	1427;"	d
GL_TABLE_TOO_LARGE	include/GL/glext.h	148;"	d
GL_TABLE_TOO_LARGE_EXT	include/GL/glext.h	893;"	d
GL_TANGENT_ARRAY_EXT	include/GL/glext.h	1598;"	d
GL_TANGENT_ARRAY_POINTER_EXT	include/GL/glext.h	1606;"	d
GL_TANGENT_ARRAY_STRIDE_EXT	include/GL/glext.h	1603;"	d
GL_TANGENT_ARRAY_TYPE_EXT	include/GL/glext.h	1602;"	d
GL_TEXCOORD1_BIT_PGI	include/GL/glext.h	1315;"	d
GL_TEXCOORD2_BIT_PGI	include/GL/glext.h	1316;"	d
GL_TEXCOORD3_BIT_PGI	include/GL/glext.h	1317;"	d
GL_TEXCOORD4_BIT_PGI	include/GL/glext.h	1318;"	d
GL_TEXTURE	include/GL/gl.h	899;"	d
GL_TEXTURE0	include/GL/glext.h	182;"	d
GL_TEXTURE0_ARB	include/GL/gl.h	1480;"	d
GL_TEXTURE0_ARB	include/GL/glext.h	377;"	d
GL_TEXTURE1	include/GL/glext.h	183;"	d
GL_TEXTURE10	include/GL/glext.h	192;"	d
GL_TEXTURE10_ARB	include/GL/gl.h	1490;"	d
GL_TEXTURE10_ARB	include/GL/glext.h	387;"	d
GL_TEXTURE11	include/GL/glext.h	193;"	d
GL_TEXTURE11_ARB	include/GL/gl.h	1491;"	d
GL_TEXTURE11_ARB	include/GL/glext.h	388;"	d
GL_TEXTURE12	include/GL/glext.h	194;"	d
GL_TEXTURE12_ARB	include/GL/gl.h	1492;"	d
GL_TEXTURE12_ARB	include/GL/glext.h	389;"	d
GL_TEXTURE13	include/GL/glext.h	195;"	d
GL_TEXTURE13_ARB	include/GL/gl.h	1493;"	d
GL_TEXTURE13_ARB	include/GL/glext.h	390;"	d
GL_TEXTURE14	include/GL/glext.h	196;"	d
GL_TEXTURE14_ARB	include/GL/gl.h	1494;"	d
GL_TEXTURE14_ARB	include/GL/glext.h	391;"	d
GL_TEXTURE15	include/GL/glext.h	197;"	d
GL_TEXTURE15_ARB	include/GL/gl.h	1495;"	d
GL_TEXTURE15_ARB	include/GL/glext.h	392;"	d
GL_TEXTURE16	include/GL/glext.h	198;"	d
GL_TEXTURE16_ARB	include/GL/gl.h	1496;"	d
GL_TEXTURE16_ARB	include/GL/glext.h	393;"	d
GL_TEXTURE17	include/GL/glext.h	199;"	d
GL_TEXTURE17_ARB	include/GL/gl.h	1497;"	d
GL_TEXTURE17_ARB	include/GL/glext.h	394;"	d
GL_TEXTURE18	include/GL/glext.h	200;"	d
GL_TEXTURE18_ARB	include/GL/gl.h	1498;"	d
GL_TEXTURE18_ARB	include/GL/glext.h	395;"	d
GL_TEXTURE19	include/GL/glext.h	201;"	d
GL_TEXTURE19_ARB	include/GL/gl.h	1499;"	d
GL_TEXTURE19_ARB	include/GL/glext.h	396;"	d
GL_TEXTURE1_ARB	include/GL/gl.h	1481;"	d
GL_TEXTURE1_ARB	include/GL/glext.h	378;"	d
GL_TEXTURE2	include/GL/glext.h	184;"	d
GL_TEXTURE20	include/GL/glext.h	202;"	d
GL_TEXTURE20_ARB	include/GL/gl.h	1500;"	d
GL_TEXTURE20_ARB	include/GL/glext.h	397;"	d
GL_TEXTURE21	include/GL/glext.h	203;"	d
GL_TEXTURE21_ARB	include/GL/gl.h	1501;"	d
GL_TEXTURE21_ARB	include/GL/glext.h	398;"	d
GL_TEXTURE22	include/GL/glext.h	204;"	d
GL_TEXTURE22_ARB	include/GL/gl.h	1502;"	d
GL_TEXTURE22_ARB	include/GL/glext.h	399;"	d
GL_TEXTURE23	include/GL/glext.h	205;"	d
GL_TEXTURE23_ARB	include/GL/gl.h	1503;"	d
GL_TEXTURE23_ARB	include/GL/glext.h	400;"	d
GL_TEXTURE24	include/GL/glext.h	206;"	d
GL_TEXTURE24_ARB	include/GL/gl.h	1504;"	d
GL_TEXTURE24_ARB	include/GL/glext.h	401;"	d
GL_TEXTURE25	include/GL/glext.h	207;"	d
GL_TEXTURE25_ARB	include/GL/gl.h	1505;"	d
GL_TEXTURE25_ARB	include/GL/glext.h	402;"	d
GL_TEXTURE26	include/GL/glext.h	208;"	d
GL_TEXTURE26_ARB	include/GL/gl.h	1506;"	d
GL_TEXTURE26_ARB	include/GL/glext.h	403;"	d
GL_TEXTURE27	include/GL/glext.h	209;"	d
GL_TEXTURE27_ARB	include/GL/gl.h	1507;"	d
GL_TEXTURE27_ARB	include/GL/glext.h	404;"	d
GL_TEXTURE28	include/GL/glext.h	210;"	d
GL_TEXTURE28_ARB	include/GL/gl.h	1508;"	d
GL_TEXTURE28_ARB	include/GL/glext.h	405;"	d
GL_TEXTURE29	include/GL/glext.h	211;"	d
GL_TEXTURE29_ARB	include/GL/gl.h	1509;"	d
GL_TEXTURE29_ARB	include/GL/glext.h	406;"	d
GL_TEXTURE2_ARB	include/GL/gl.h	1482;"	d
GL_TEXTURE2_ARB	include/GL/glext.h	379;"	d
GL_TEXTURE3	include/GL/glext.h	185;"	d
GL_TEXTURE30	include/GL/glext.h	212;"	d
GL_TEXTURE30_ARB	include/GL/gl.h	1510;"	d
GL_TEXTURE30_ARB	include/GL/glext.h	407;"	d
GL_TEXTURE31	include/GL/glext.h	213;"	d
GL_TEXTURE31_ARB	include/GL/gl.h	1511;"	d
GL_TEXTURE31_ARB	include/GL/glext.h	408;"	d
GL_TEXTURE3_ARB	include/GL/gl.h	1483;"	d
GL_TEXTURE3_ARB	include/GL/glext.h	380;"	d
GL_TEXTURE4	include/GL/glext.h	186;"	d
GL_TEXTURE4_ARB	include/GL/gl.h	1484;"	d
GL_TEXTURE4_ARB	include/GL/glext.h	381;"	d
GL_TEXTURE5	include/GL/glext.h	187;"	d
GL_TEXTURE5_ARB	include/GL/gl.h	1485;"	d
GL_TEXTURE5_ARB	include/GL/glext.h	382;"	d
GL_TEXTURE6	include/GL/glext.h	188;"	d
GL_TEXTURE6_ARB	include/GL/gl.h	1486;"	d
GL_TEXTURE6_ARB	include/GL/glext.h	383;"	d
GL_TEXTURE7	include/GL/glext.h	189;"	d
GL_TEXTURE7_ARB	include/GL/gl.h	1487;"	d
GL_TEXTURE7_ARB	include/GL/glext.h	384;"	d
GL_TEXTURE8	include/GL/glext.h	190;"	d
GL_TEXTURE8_ARB	include/GL/gl.h	1488;"	d
GL_TEXTURE8_ARB	include/GL/glext.h	385;"	d
GL_TEXTURE9	include/GL/glext.h	191;"	d
GL_TEXTURE9_ARB	include/GL/gl.h	1489;"	d
GL_TEXTURE9_ARB	include/GL/glext.h	386;"	d
GL_TEXTURE_1D	include/GL/gl.h	658;"	d
GL_TEXTURE_1D_BINDING_EXT	include/GL/glext.h	992;"	d
GL_TEXTURE_2D	include/GL/gl.h	659;"	d
GL_TEXTURE_2D_BINDING_EXT	include/GL/glext.h	993;"	d
GL_TEXTURE_3D	include/GL/gl.h	1456;"	d
GL_TEXTURE_3D	include/GL/glext.h	71;"	d
GL_TEXTURE_3D_BINDING_EXT	include/GL/glext.h	994;"	d
GL_TEXTURE_3D_EXT	include/GL/glext.h	861;"	d
GL_TEXTURE_4DSIZE_SGIS	include/GL/glext.h	971;"	d
GL_TEXTURE_4D_BINDING_SGIS	include/GL/glext.h	974;"	d
GL_TEXTURE_4D_SGIS	include/GL/glext.h	969;"	d
GL_TEXTURE_ALPHA_SIZE	include/GL/gl.h	1277;"	d
GL_TEXTURE_ALPHA_SIZE_EXT	include/GL/glext.h	847;"	d
GL_TEXTURE_APPLICATION_MODE_EXT	include/GL/glext.h	1477;"	d
GL_TEXTURE_BASE_LEVEL	include/GL/gl.h	1468;"	d
GL_TEXTURE_BASE_LEVEL	include/GL/glext.h	90;"	d
GL_TEXTURE_BASE_LEVEL_SGIS	include/GL/glext.h	1026;"	d
GL_TEXTURE_BINDING_1D	include/GL/gl.h	1286;"	d
GL_TEXTURE_BINDING_2D	include/GL/gl.h	1287;"	d
GL_TEXTURE_BINDING_3D	include/GL/gl.h	1288;"	d
GL_TEXTURE_BINDING_3D	include/GL/glext.h	66;"	d
GL_TEXTURE_BINDING_CUBE_MAP	include/GL/glext.h	233;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARB	include/GL/glext.h	440;"	d
GL_TEXTURE_BINDING_CUBE_MAP_EXT	include/GL/glext.h	1727;"	d
GL_TEXTURE_BINDING_RECTANGLE_NV	include/GL/glext.h	2057;"	d
GL_TEXTURE_BIT	include/GL/gl.h	94;"	d
GL_TEXTURE_BLUE_SIZE	include/GL/gl.h	1276;"	d
GL_TEXTURE_BLUE_SIZE_EXT	include/GL/glext.h	846;"	d
GL_TEXTURE_BORDER	include/GL/gl.h	742;"	d
GL_TEXTURE_BORDER_COLOR	include/GL/gl.h	741;"	d
GL_TEXTURE_BORDER_VALUES_NV	include/GL/glext.h	2130;"	d
GL_TEXTURE_CLIPMAP_CENTER_SGIX	include/GL/glext.h	1098;"	d
GL_TEXTURE_CLIPMAP_DEPTH_SGIX	include/GL/glext.h	1103;"	d
GL_TEXTURE_CLIPMAP_FRAME_SGIX	include/GL/glext.h	1099;"	d
GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX	include/GL/glext.h	1102;"	d
GL_TEXTURE_CLIPMAP_OFFSET_SGIX	include/GL/glext.h	1100;"	d
GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX	include/GL/glext.h	1101;"	d
GL_TEXTURE_COLOR_TABLE_SGI	include/GL/glext.h	978;"	d
GL_TEXTURE_COLOR_WRITEMASK_SGIS	include/GL/glext.h	1993;"	d
GL_TEXTURE_COMPARE_FAIL_VALUE_ARB	include/GL/glext.h	586;"	d
GL_TEXTURE_COMPARE_FUNC	include/GL/glext.h	319;"	d
GL_TEXTURE_COMPARE_FUNC_ARB	include/GL/glext.h	581;"	d
GL_TEXTURE_COMPARE_MODE	include/GL/glext.h	318;"	d
GL_TEXTURE_COMPARE_MODE_ARB	include/GL/glext.h	580;"	d
GL_TEXTURE_COMPARE_OPERATOR_SGIX	include/GL/glext.h	1113;"	d
GL_TEXTURE_COMPARE_SGIX	include/GL/glext.h	1112;"	d
GL_TEXTURE_COMPONENTS	include/GL/gl.h	1569;"	d
GL_TEXTURE_COMPRESSED	include/GL/glext.h	250;"	d
GL_TEXTURE_COMPRESSED_ARB	include/GL/glext.h	460;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE	include/GL/glext.h	249;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB	include/GL/glext.h	459;"	d
GL_TEXTURE_COMPRESSION_HINT	include/GL/glext.h	248;"	d
GL_TEXTURE_COMPRESSION_HINT_ARB	include/GL/glext.h	458;"	d
GL_TEXTURE_CONSTANT_DATA_SUNX	include/GL/glext.h	1653;"	d
GL_TEXTURE_COORD_ARRAY	include/GL/gl.h	1295;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING	include/GL/glext.h	338;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB	include/GL/glext.h	703;"	d
GL_TEXTURE_COORD_ARRAY_COUNT_EXT	include/GL/glext.h	1077;"	d
GL_TEXTURE_COORD_ARRAY_EXT	include/GL/glext.h	1058;"	d
GL_TEXTURE_COORD_ARRAY_LIST_IBM	include/GL/glext.h	1893;"	d
GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM	include/GL/glext.h	1901;"	d
GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL	include/GL/glext.h	1530;"	d
GL_TEXTURE_COORD_ARRAY_POINTER	include/GL/gl.h	1315;"	d
GL_TEXTURE_COORD_ARRAY_POINTER_EXT	include/GL/glext.h	1084;"	d
GL_TEXTURE_COORD_ARRAY_SIZE	include/GL/gl.h	1307;"	d
GL_TEXTURE_COORD_ARRAY_SIZE_EXT	include/GL/glext.h	1074;"	d
GL_TEXTURE_COORD_ARRAY_STRIDE	include/GL/gl.h	1309;"	d
GL_TEXTURE_COORD_ARRAY_STRIDE_EXT	include/GL/glext.h	1076;"	d
GL_TEXTURE_COORD_ARRAY_TYPE	include/GL/gl.h	1308;"	d
GL_TEXTURE_COORD_ARRAY_TYPE_EXT	include/GL/glext.h	1075;"	d
GL_TEXTURE_CUBE_MAP	include/GL/glext.h	232;"	d
GL_TEXTURE_CUBE_MAP_ARB	include/GL/glext.h	439;"	d
GL_TEXTURE_CUBE_MAP_EXT	include/GL/glext.h	1726;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	include/GL/glext.h	235;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB	include/GL/glext.h	442;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT	include/GL/glext.h	1729;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	include/GL/glext.h	237;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB	include/GL/glext.h	444;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT	include/GL/glext.h	1731;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	include/GL/glext.h	239;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB	include/GL/glext.h	446;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT	include/GL/glext.h	1733;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	include/GL/glext.h	234;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB	include/GL/glext.h	441;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT	include/GL/glext.h	1728;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	include/GL/glext.h	236;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB	include/GL/glext.h	443;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT	include/GL/glext.h	1730;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	include/GL/glext.h	238;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB	include/GL/glext.h	445;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT	include/GL/glext.h	1732;"	d
GL_TEXTURE_DEFORMATION_BIT_SGIX	include/GL/glext.h	1227;"	d
GL_TEXTURE_DEFORMATION_SGIX	include/GL/glext.h	1233;"	d
GL_TEXTURE_DEPTH	include/GL/gl.h	1458;"	d
GL_TEXTURE_DEPTH	include/GL/glext.h	73;"	d
GL_TEXTURE_DEPTH_EXT	include/GL/glext.h	863;"	d
GL_TEXTURE_DEPTH_SIZE	include/GL/glext.h	316;"	d
GL_TEXTURE_DEPTH_SIZE_ARB	include/GL/glext.h	575;"	d
GL_TEXTURE_DS_SIZE_NV	include/GL/glext.h	2133;"	d
GL_TEXTURE_DT_SIZE_NV	include/GL/glext.h	2134;"	d
GL_TEXTURE_ENV	include/GL/gl.h	1138;"	d
GL_TEXTURE_ENV_BIAS_SGIX	include/GL/glext.h	1292;"	d
GL_TEXTURE_ENV_COLOR	include/GL/gl.h	1135;"	d
GL_TEXTURE_ENV_MODE	include/GL/gl.h	1134;"	d
GL_TEXTURE_FILTER4_SIZE_SGIS	include/GL/glext.h	870;"	d
GL_TEXTURE_FILTER_CONTROL	include/GL/glext.h	312;"	d
GL_TEXTURE_FILTER_CONTROL_EXT	include/GL/glext.h	1747;"	d
GL_TEXTURE_FLOAT_COMPONENTS_NV	include/GL/glext.h	2699;"	d
GL_TEXTURE_GEN_MODE	include/GL/gl.h	1146;"	d
GL_TEXTURE_GEN_Q	include/GL/gl.h	561;"	d
GL_TEXTURE_GEN_R	include/GL/gl.h	560;"	d
GL_TEXTURE_GEN_S	include/GL/gl.h	558;"	d
GL_TEXTURE_GEN_T	include/GL/gl.h	559;"	d
GL_TEXTURE_GEQUAL_R_SGIX	include/GL/glext.h	1115;"	d
GL_TEXTURE_GREEN_SIZE	include/GL/gl.h	1275;"	d
GL_TEXTURE_GREEN_SIZE_EXT	include/GL/glext.h	845;"	d
GL_TEXTURE_HEIGHT	include/GL/gl.h	739;"	d
GL_TEXTURE_HI_SIZE_NV	include/GL/glext.h	2131;"	d
GL_TEXTURE_INDEX_SIZE_EXT	include/GL/glext.h	1353;"	d
GL_TEXTURE_INTENSITY_SIZE	include/GL/gl.h	1279;"	d
GL_TEXTURE_INTENSITY_SIZE_EXT	include/GL/glext.h	849;"	d
GL_TEXTURE_INTERNAL_FORMAT	include/GL/gl.h	740;"	d
GL_TEXTURE_LEQUAL_R_SGIX	include/GL/glext.h	1114;"	d
GL_TEXTURE_LIGHTING_MODE_HP	include/GL/glext.h	1452;"	d
GL_TEXTURE_LIGHT_EXT	include/GL/glext.h	1478;"	d
GL_TEXTURE_LOD_BIAS	include/GL/glext.h	313;"	d
GL_TEXTURE_LOD_BIAS_EXT	include/GL/glext.h	1748;"	d
GL_TEXTURE_LOD_BIAS_R_SGIX	include/GL/glext.h	1375;"	d
GL_TEXTURE_LOD_BIAS_S_SGIX	include/GL/glext.h	1373;"	d
GL_TEXTURE_LOD_BIAS_T_SGIX	include/GL/glext.h	1374;"	d
GL_TEXTURE_LO_SIZE_NV	include/GL/glext.h	2132;"	d
GL_TEXTURE_LUMINANCE_SIZE	include/GL/gl.h	1278;"	d
GL_TEXTURE_LUMINANCE_SIZE_EXT	include/GL/glext.h	848;"	d
GL_TEXTURE_MAG_FILTER	include/GL/gl.h	1163;"	d
GL_TEXTURE_MAG_SIZE_NV	include/GL/glext.h	2135;"	d
GL_TEXTURE_MATERIAL_FACE_EXT	include/GL/glext.h	1479;"	d
GL_TEXTURE_MATERIAL_PARAMETER_EXT	include/GL/glext.h	1480;"	d
GL_TEXTURE_MATRIX	include/GL/gl.h	526;"	d
GL_TEXTURE_MAX_ANISOTROPY_EXT	include/GL/glext.h	1752;"	d
GL_TEXTURE_MAX_CLAMP_R_SGIX	include/GL/glext.h	2235;"	d
GL_TEXTURE_MAX_CLAMP_S_SGIX	include/GL/glext.h	2233;"	d
GL_TEXTURE_MAX_CLAMP_T_SGIX	include/GL/glext.h	2234;"	d
GL_TEXTURE_MAX_LEVEL	include/GL/gl.h	1469;"	d
GL_TEXTURE_MAX_LEVEL	include/GL/glext.h	91;"	d
GL_TEXTURE_MAX_LEVEL_SGIS	include/GL/glext.h	1027;"	d
GL_TEXTURE_MAX_LOD	include/GL/gl.h	1467;"	d
GL_TEXTURE_MAX_LOD	include/GL/glext.h	89;"	d
GL_TEXTURE_MAX_LOD_SGIS	include/GL/glext.h	1025;"	d
GL_TEXTURE_MIN_FILTER	include/GL/gl.h	1164;"	d
GL_TEXTURE_MIN_LOD	include/GL/gl.h	1466;"	d
GL_TEXTURE_MIN_LOD	include/GL/glext.h	88;"	d
GL_TEXTURE_MIN_LOD_SGIS	include/GL/glext.h	1024;"	d
GL_TEXTURE_MULTI_BUFFER_HINT_SGIX	include/GL/glext.h	1188;"	d
GL_TEXTURE_NORMAL_EXT	include/GL/glext.h	1575;"	d
GL_TEXTURE_POST_SPECULAR_HP	include/GL/glext.h	1453;"	d
GL_TEXTURE_PRE_SPECULAR_HP	include/GL/glext.h	1454;"	d
GL_TEXTURE_PRIORITY	include/GL/gl.h	1284;"	d
GL_TEXTURE_PRIORITY_EXT	include/GL/glext.h	990;"	d
GL_TEXTURE_RECTANGLE_NV	include/GL/glext.h	2056;"	d
GL_TEXTURE_RED_SIZE	include/GL/gl.h	1274;"	d
GL_TEXTURE_RED_SIZE_EXT	include/GL/glext.h	844;"	d
GL_TEXTURE_RESIDENT	include/GL/gl.h	1285;"	d
GL_TEXTURE_RESIDENT_EXT	include/GL/glext.h	991;"	d
GL_TEXTURE_SHADER_NV	include/GL/glext.h	2071;"	d
GL_TEXTURE_STACK_DEPTH	include/GL/gl.h	523;"	d
GL_TEXTURE_TOO_LARGE_EXT	include/GL/glext.h	853;"	d
GL_TEXTURE_UNSIGNED_REMAP_MODE_NV	include/GL/glext.h	2732;"	d
GL_TEXTURE_WIDTH	include/GL/gl.h	738;"	d
GL_TEXTURE_WRAP_Q_SGIS	include/GL/glext.h	972;"	d
GL_TEXTURE_WRAP_R	include/GL/gl.h	1459;"	d
GL_TEXTURE_WRAP_R	include/GL/glext.h	74;"	d
GL_TEXTURE_WRAP_R_EXT	include/GL/glext.h	864;"	d
GL_TEXTURE_WRAP_S	include/GL/gl.h	1165;"	d
GL_TEXTURE_WRAP_T	include/GL/gl.h	1166;"	d
GL_TEXT_FRAGMENT_SHADER_ATI	include/GL/glext.h	2601;"	d
GL_TRACK_MATRIX_NV	include/GL/glext.h	2178;"	d
GL_TRACK_MATRIX_TRANSFORM_NV	include/GL/glext.h	2179;"	d
GL_TRANSFORM_BIT	include/GL/gl.h	88;"	d
GL_TRANSFORM_HINT_APPLE	include/GL/glext.h	1643;"	d
GL_TRANSPOSE_COLOR_MATRIX	include/GL/glext.h	220;"	d
GL_TRANSPOSE_COLOR_MATRIX_ARB	include/GL/glext.h	418;"	d
GL_TRANSPOSE_CURRENT_MATRIX_ARB	include/GL/glext.h	639;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX	include/GL/glext.h	217;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX_ARB	include/GL/glext.h	415;"	d
GL_TRANSPOSE_NV	include/GL/glext.h	2158;"	d
GL_TRANSPOSE_PROJECTION_MATRIX	include/GL/glext.h	218;"	d
GL_TRANSPOSE_PROJECTION_MATRIX_ARB	include/GL/glext.h	416;"	d
GL_TRANSPOSE_TEXTURE_MATRIX	include/GL/glext.h	219;"	d
GL_TRANSPOSE_TEXTURE_MATRIX_ARB	include/GL/glext.h	417;"	d
GL_TRIANGLES	include/GL/gl.h	103;"	d
GL_TRIANGLE_FAN	include/GL/gl.h	105;"	d
GL_TRIANGLE_LIST_SUN	include/GL/glext.h	1665;"	d
GL_TRIANGLE_MESH_SUN	include/GL/glext.h	2541;"	d
GL_TRIANGLE_STRIP	include/GL/gl.h	104;"	d
GL_TRUE	include/GL/gl.h	148;"	d
GL_UNPACK_ALIGNMENT	include/GL/gl.h	587;"	d
GL_UNPACK_CLIENT_STORAGE_APPLE	include/GL/glext.h	2605;"	d
GL_UNPACK_CMYK_HINT_EXT	include/GL/glext.h	986;"	d
GL_UNPACK_CONSTANT_DATA_SUNX	include/GL/glext.h	1652;"	d
GL_UNPACK_IMAGE_DEPTH_SGIS	include/GL/glext.h	968;"	d
GL_UNPACK_IMAGE_HEIGHT	include/GL/gl.h	1455;"	d
GL_UNPACK_IMAGE_HEIGHT	include/GL/glext.h	70;"	d
GL_UNPACK_IMAGE_HEIGHT_EXT	include/GL/glext.h	860;"	d
GL_UNPACK_LSB_FIRST	include/GL/gl.h	583;"	d
GL_UNPACK_RESAMPLE_OML	include/GL/glext.h	2254;"	d
GL_UNPACK_RESAMPLE_SGIX	include/GL/glext.h	1975;"	d
GL_UNPACK_ROW_LENGTH	include/GL/gl.h	584;"	d
GL_UNPACK_SKIP_IMAGES	include/GL/gl.h	1454;"	d
GL_UNPACK_SKIP_IMAGES	include/GL/glext.h	69;"	d
GL_UNPACK_SKIP_IMAGES_EXT	include/GL/glext.h	859;"	d
GL_UNPACK_SKIP_PIXELS	include/GL/gl.h	586;"	d
GL_UNPACK_SKIP_ROWS	include/GL/gl.h	585;"	d
GL_UNPACK_SKIP_VOLUMES_SGIS	include/GL/glext.h	967;"	d
GL_UNPACK_SUBSAMPLE_RATE_SGIX	include/GL/glext.h	1909;"	d
GL_UNPACK_SWAP_BYTES	include/GL/gl.h	582;"	d
GL_UNSIGNED_BYTE	include/GL/gl.h	228;"	d
GL_UNSIGNED_BYTE_2_3_3_REV	include/GL/gl.h	1435;"	d
GL_UNSIGNED_BYTE_2_3_3_REV	include/GL/glext.h	76;"	d
GL_UNSIGNED_BYTE_3_3_2	include/GL/gl.h	1430;"	d
GL_UNSIGNED_BYTE_3_3_2	include/GL/glext.h	60;"	d
GL_UNSIGNED_BYTE_3_3_2_EXT	include/GL/glext.h	1016;"	d
GL_UNSIGNED_IDENTITY_NV	include/GL/glext.h	1803;"	d
GL_UNSIGNED_INT	include/GL/gl.h	232;"	d
GL_UNSIGNED_INT_10_10_10_2	include/GL/gl.h	1434;"	d
GL_UNSIGNED_INT_10_10_10_2	include/GL/glext.h	64;"	d
GL_UNSIGNED_INT_10_10_10_2_EXT	include/GL/glext.h	1020;"	d
GL_UNSIGNED_INT_24_8_NV	include/GL/glext.h	2045;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	include/GL/gl.h	1441;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	include/GL/glext.h	82;"	d
GL_UNSIGNED_INT_8_8_8_8	include/GL/gl.h	1433;"	d
GL_UNSIGNED_INT_8_8_8_8	include/GL/glext.h	63;"	d
GL_UNSIGNED_INT_8_8_8_8_EXT	include/GL/glext.h	1019;"	d
GL_UNSIGNED_INT_8_8_8_8_REV	include/GL/gl.h	1440;"	d
GL_UNSIGNED_INT_8_8_8_8_REV	include/GL/glext.h	81;"	d
GL_UNSIGNED_INT_8_8_S8_S8_REV_NV	include/GL/glext.h	2068;"	d
GL_UNSIGNED_INT_S8_S8_8_8_NV	include/GL/glext.h	2067;"	d
GL_UNSIGNED_INVERT_NV	include/GL/glext.h	1804;"	d
GL_UNSIGNED_SHORT	include/GL/gl.h	230;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV	include/GL/gl.h	1439;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV	include/GL/glext.h	80;"	d
GL_UNSIGNED_SHORT_4_4_4_4	include/GL/gl.h	1431;"	d
GL_UNSIGNED_SHORT_4_4_4_4	include/GL/glext.h	61;"	d
GL_UNSIGNED_SHORT_4_4_4_4_EXT	include/GL/glext.h	1017;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV	include/GL/gl.h	1438;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV	include/GL/glext.h	79;"	d
GL_UNSIGNED_SHORT_5_5_5_1	include/GL/gl.h	1432;"	d
GL_UNSIGNED_SHORT_5_5_5_1	include/GL/glext.h	62;"	d
GL_UNSIGNED_SHORT_5_5_5_1_EXT	include/GL/glext.h	1018;"	d
GL_UNSIGNED_SHORT_5_6_5	include/GL/gl.h	1436;"	d
GL_UNSIGNED_SHORT_5_6_5	include/GL/glext.h	77;"	d
GL_UNSIGNED_SHORT_5_6_5_REV	include/GL/gl.h	1437;"	d
GL_UNSIGNED_SHORT_5_6_5_REV	include/GL/glext.h	78;"	d
GL_UNSIGNED_SHORT_8_8_APPLE	include/GL/glext.h	2634;"	d
GL_UNSIGNED_SHORT_8_8_MESA	include/GL/glext.h	2772;"	d
GL_UNSIGNED_SHORT_8_8_REV_APPLE	include/GL/glext.h	2635;"	d
GL_UNSIGNED_SHORT_8_8_REV_MESA	include/GL/glext.h	2773;"	d
GL_V2F	include/GL/gl.h	1317;"	d
GL_V3F	include/GL/gl.h	1318;"	d
GL_VARIABLE_A_NV	include/GL/glext.h	1787;"	d
GL_VARIABLE_B_NV	include/GL/glext.h	1788;"	d
GL_VARIABLE_C_NV	include/GL/glext.h	1789;"	d
GL_VARIABLE_D_NV	include/GL/glext.h	1790;"	d
GL_VARIABLE_E_NV	include/GL/glext.h	1791;"	d
GL_VARIABLE_F_NV	include/GL/glext.h	1792;"	d
GL_VARIABLE_G_NV	include/GL/glext.h	1793;"	d
GL_VARIANT_ARRAY_EXT	include/GL/glext.h	2512;"	d
GL_VARIANT_ARRAY_POINTER_EXT	include/GL/glext.h	2513;"	d
GL_VARIANT_ARRAY_STRIDE_EXT	include/GL/glext.h	2510;"	d
GL_VARIANT_ARRAY_TYPE_EXT	include/GL/glext.h	2511;"	d
GL_VARIANT_DATATYPE_EXT	include/GL/glext.h	2509;"	d
GL_VARIANT_EXT	include/GL/glext.h	2473;"	d
GL_VARIANT_VALUE_EXT	include/GL/glext.h	2508;"	d
GL_VECTOR_EXT	include/GL/glext.h	2471;"	d
GL_VENDOR	include/GL/gl.h	1110;"	d
GL_VERSION	include/GL/gl.h	1112;"	d
GL_VERSION_1_1	include/GL/gl.h	51;"	d
GL_VERSION_1_2	include/GL/gl.h	52;"	d
GL_VERSION_1_2	include/GL/glext.h	2805;"	d
GL_VERSION_1_3	include/GL/glext.h	2887;"	d
GL_VERSION_1_4	include/GL/glext.h	2985;"	d
GL_VERSION_1_5	include/GL/glext.h	3081;"	d
GL_VERTEX23_BIT_PGI	include/GL/glext.h	1319;"	d
GL_VERTEX4_BIT_PGI	include/GL/glext.h	1320;"	d
GL_VERTEX_ARRAY	include/GL/gl.h	1291;"	d
GL_VERTEX_ARRAY_BINDING_APPLE	include/GL/glext.h	2620;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING	include/GL/glext.h	334;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING_ARB	include/GL/glext.h	699;"	d
GL_VERTEX_ARRAY_COUNT_EXT	include/GL/glext.h	1063;"	d
GL_VERTEX_ARRAY_EXT	include/GL/glext.h	1054;"	d
GL_VERTEX_ARRAY_LIST_IBM	include/GL/glext.h	1889;"	d
GL_VERTEX_ARRAY_LIST_STRIDE_IBM	include/GL/glext.h	1897;"	d
GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL	include/GL/glext.h	1527;"	d
GL_VERTEX_ARRAY_POINTER	include/GL/gl.h	1311;"	d
GL_VERTEX_ARRAY_POINTER_EXT	include/GL/glext.h	1080;"	d
GL_VERTEX_ARRAY_RANGE_APPLE	include/GL/glext.h	2624;"	d
GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE	include/GL/glext.h	2625;"	d
GL_VERTEX_ARRAY_RANGE_LENGTH_NV	include/GL/glext.h	1779;"	d
GL_VERTEX_ARRAY_RANGE_NV	include/GL/glext.h	1778;"	d
GL_VERTEX_ARRAY_RANGE_POINTER_APPLE	include/GL/glext.h	2627;"	d
GL_VERTEX_ARRAY_RANGE_POINTER_NV	include/GL/glext.h	1782;"	d
GL_VERTEX_ARRAY_RANGE_VALID_NV	include/GL/glext.h	1780;"	d
GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV	include/GL/glext.h	2143;"	d
GL_VERTEX_ARRAY_SIZE	include/GL/gl.h	1297;"	d
GL_VERTEX_ARRAY_SIZE_EXT	include/GL/glext.h	1060;"	d
GL_VERTEX_ARRAY_STORAGE_HINT_APPLE	include/GL/glext.h	2626;"	d
GL_VERTEX_ARRAY_STRIDE	include/GL/gl.h	1299;"	d
GL_VERTEX_ARRAY_STRIDE_EXT	include/GL/glext.h	1062;"	d
GL_VERTEX_ARRAY_TYPE	include/GL/gl.h	1298;"	d
GL_VERTEX_ARRAY_TYPE_EXT	include/GL/glext.h	1061;"	d
GL_VERTEX_ATTRIB_ARRAY0_NV	include/GL/glext.h	2182;"	d
GL_VERTEX_ATTRIB_ARRAY10_NV	include/GL/glext.h	2192;"	d
GL_VERTEX_ATTRIB_ARRAY11_NV	include/GL/glext.h	2193;"	d
GL_VERTEX_ATTRIB_ARRAY12_NV	include/GL/glext.h	2194;"	d
GL_VERTEX_ATTRIB_ARRAY13_NV	include/GL/glext.h	2195;"	d
GL_VERTEX_ATTRIB_ARRAY14_NV	include/GL/glext.h	2196;"	d
GL_VERTEX_ATTRIB_ARRAY15_NV	include/GL/glext.h	2197;"	d
GL_VERTEX_ATTRIB_ARRAY1_NV	include/GL/glext.h	2183;"	d
GL_VERTEX_ATTRIB_ARRAY2_NV	include/GL/glext.h	2184;"	d
GL_VERTEX_ATTRIB_ARRAY3_NV	include/GL/glext.h	2185;"	d
GL_VERTEX_ATTRIB_ARRAY4_NV	include/GL/glext.h	2186;"	d
GL_VERTEX_ATTRIB_ARRAY5_NV	include/GL/glext.h	2187;"	d
GL_VERTEX_ATTRIB_ARRAY6_NV	include/GL/glext.h	2188;"	d
GL_VERTEX_ATTRIB_ARRAY7_NV	include/GL/glext.h	2189;"	d
GL_VERTEX_ATTRIB_ARRAY8_NV	include/GL/glext.h	2190;"	d
GL_VERTEX_ATTRIB_ARRAY9_NV	include/GL/glext.h	2191;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	include/GL/glext.h	343;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB	include/GL/glext.h	708;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB	include/GL/glext.h	595;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB	include/GL/glext.h	612;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB	include/GL/glext.h	608;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB	include/GL/glext.h	596;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB	include/GL/glext.h	597;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB	include/GL/glext.h	598;"	d
GL_VERTEX_BLEND_ARB	include/GL/glext.h	480;"	d
GL_VERTEX_CONSISTENT_HINT_PGI	include/GL/glext.h	1300;"	d
GL_VERTEX_DATA_HINT_PGI	include/GL/glext.h	1299;"	d
GL_VERTEX_PRECLIP_HINT_SGIX	include/GL/glext.h	1966;"	d
GL_VERTEX_PRECLIP_SGIX	include/GL/glext.h	1965;"	d
GL_VERTEX_PROGRAM_ARB	include/GL/glext.h	594;"	d
GL_VERTEX_PROGRAM_BINDING_NV	include/GL/glext.h	2180;"	d
GL_VERTEX_PROGRAM_NV	include/GL/glext.h	2147;"	d
GL_VERTEX_PROGRAM_POINT_SIZE_ARB	include/GL/glext.h	606;"	d
GL_VERTEX_PROGRAM_POINT_SIZE_NV	include/GL/glext.h	2172;"	d
GL_VERTEX_PROGRAM_TWO_SIDE_ARB	include/GL/glext.h	607;"	d
GL_VERTEX_PROGRAM_TWO_SIDE_NV	include/GL/glext.h	2173;"	d
GL_VERTEX_SHADER_ARB	include/GL/glext.h	764;"	d
GL_VERTEX_SHADER_BINDING_EXT	include/GL/glext.h	2409;"	d
GL_VERTEX_SHADER_EXT	include/GL/glext.h	2408;"	d
GL_VERTEX_SHADER_INSTRUCTIONS_EXT	include/GL/glext.h	2487;"	d
GL_VERTEX_SHADER_INVARIANTS_EXT	include/GL/glext.h	2489;"	d
GL_VERTEX_SHADER_LOCALS_EXT	include/GL/glext.h	2491;"	d
GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	include/GL/glext.h	2490;"	d
GL_VERTEX_SHADER_OPTIMIZED_EXT	include/GL/glext.h	2492;"	d
GL_VERTEX_SHADER_VARIANTS_EXT	include/GL/glext.h	2488;"	d
GL_VERTEX_SOURCE_ATI	include/GL/glext.h	2530;"	d
GL_VERTEX_STATE_PROGRAM_NV	include/GL/glext.h	2148;"	d
GL_VERTEX_STREAM0_ATI	include/GL/glext.h	2522;"	d
GL_VERTEX_STREAM1_ATI	include/GL/glext.h	2523;"	d
GL_VERTEX_STREAM2_ATI	include/GL/glext.h	2524;"	d
GL_VERTEX_STREAM3_ATI	include/GL/glext.h	2525;"	d
GL_VERTEX_STREAM4_ATI	include/GL/glext.h	2526;"	d
GL_VERTEX_STREAM5_ATI	include/GL/glext.h	2527;"	d
GL_VERTEX_STREAM6_ATI	include/GL/glext.h	2528;"	d
GL_VERTEX_STREAM7_ATI	include/GL/glext.h	2529;"	d
GL_VERTEX_WEIGHTING_EXT	include/GL/glext.h	1761;"	d
GL_VERTEX_WEIGHT_ARRAY_EXT	include/GL/glext.h	1765;"	d
GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT	include/GL/glext.h	1769;"	d
GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT	include/GL/glext.h	1766;"	d
GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT	include/GL/glext.h	1768;"	d
GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT	include/GL/glext.h	1767;"	d
GL_VIBRANCE_BIAS_NV	include/GL/glext.h	2129;"	d
GL_VIBRANCE_SCALE_NV	include/GL/glext.h	2123;"	d
GL_VIEWPORT	include/GL/gl.h	520;"	d
GL_VIEWPORT_BIT	include/GL/gl.h	87;"	d
GL_WEIGHT_ARRAY_ARB	include/GL/glext.h	486;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING	include/GL/glext.h	342;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB	include/GL/glext.h	707;"	d
GL_WEIGHT_ARRAY_POINTER_ARB	include/GL/glext.h	485;"	d
GL_WEIGHT_ARRAY_SIZE_ARB	include/GL/glext.h	484;"	d
GL_WEIGHT_ARRAY_STRIDE_ARB	include/GL/glext.h	483;"	d
GL_WEIGHT_ARRAY_TYPE_ARB	include/GL/glext.h	482;"	d
GL_WEIGHT_SUM_UNITY_ARB	include/GL/glext.h	479;"	d
GL_WIDE_LINE_HINT_PGI	include/GL/glext.h	1342;"	d
GL_WIN_phong_shading	include/GL/glext.h	4334;"	d
GL_WIN_specular_fog	include/GL/glext.h	4338;"	d
GL_WIN_swap_hint	include/GL/glext.h	5915;"	d
GL_WRAP_BORDER_SUN	include/GL/glext.h	1739;"	d
GL_WRITE_ONLY	include/GL/glext.h	345;"	d
GL_WRITE_ONLY_ARB	include/GL/glext.h	710;"	d
GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV	include/GL/glext.h	2720;"	d
GL_WRITE_PIXEL_DATA_RANGE_NV	include/GL/glext.h	2718;"	d
GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV	include/GL/glext.h	2722;"	d
GL_W_EXT	include/GL/glext.h	2496;"	d
GL_XOR	include/GL/gl.h	851;"	d
GL_X_EXT	include/GL/glext.h	2493;"	d
GL_YCBCR_422_APPLE	include/GL/glext.h	2633;"	d
GL_YCBCR_MESA	include/GL/glext.h	2774;"	d
GL_YCRCBA_SGIX	include/GL/glext.h	1920;"	d
GL_YCRCB_422_SGIX	include/GL/glext.h	1420;"	d
GL_YCRCB_444_SGIX	include/GL/glext.h	1421;"	d
GL_YCRCB_SGIX	include/GL/glext.h	1919;"	d
GL_Y_EXT	include/GL/glext.h	2494;"	d
GL_ZERO	include/GL/gl.h	119;"	d
GL_ZERO_EXT	include/GL/glext.h	2501;"	d
GL_ZOOM_X	include/GL/gl.h	600;"	d
GL_ZOOM_Y	include/GL/gl.h	601;"	d
GL_Z_EXT	include/GL/glext.h	2495;"	d
GLbitfield	include/GL/gl.h	/^typedef unsigned int GLbitfield;$/;"	t
GLboolean	include/GL/gl.h	/^typedef unsigned char GLboolean;$/;"	t
GLbyte	include/GL/gl.h	/^typedef signed char GLbyte;$/;"	t
GLcharARB	include/GL/glext.h	/^typedef char GLcharARB;		\/* native character *\/$/;"	t
GLclampd	include/GL/gl.h	/^typedef double GLclampd;$/;"	t
GLclampf	include/GL/gl.h	/^typedef float GLclampf;$/;"	t
GLdouble	include/GL/gl.h	/^typedef double GLdouble;$/;"	t
GLenum	include/GL/gl.h	/^typedef unsigned int GLenum;$/;"	t
GLfloat	include/GL/gl.h	/^typedef float GLfloat;$/;"	t
GLhalfNV	include/GL/glext.h	/^typedef unsigned short GLhalfNV;$/;"	t
GLhandleARB	include/GL/glext.h	/^typedef unsigned int GLhandleARB;	\/* shader object handle *\/$/;"	t
GLint	include/GL/gl.h	/^typedef int GLint;$/;"	t
GLintptr	include/GL/glext.h	/^typedef ptrdiff_t GLintptr;$/;"	t
GLintptrARB	include/GL/glext.h	/^typedef ptrdiff_t GLintptrARB;$/;"	t
GLshort	include/GL/gl.h	/^typedef short GLshort;$/;"	t
GLsizei	include/GL/gl.h	/^typedef int GLsizei;$/;"	t
GLsizeiptr	include/GL/glext.h	/^typedef ptrdiff_t GLsizeiptr;$/;"	t
GLsizeiptrARB	include/GL/glext.h	/^typedef ptrdiff_t GLsizeiptrARB;$/;"	t
GLubyte	include/GL/gl.h	/^typedef unsigned char GLubyte;$/;"	t
GLuint	include/GL/gl.h	/^typedef unsigned int GLuint;$/;"	t
GLushort	include/GL/gl.h	/^typedef unsigned short GLushort;$/;"	t
GLvoid	include/GL/gl.h	/^typedef void GLvoid;$/;"	t
GenAsyncMarkersSGIX	include/GL/glprocs.h	/^  GLuint (APIENTRY *GenAsyncMarkersSGIX) (GLsizei range);$/;"	m	struct:__anon1
GenBuffers	include/GL/glprocs.h	/^  void (APIENTRY *GenBuffers) (GLsizei n, GLuint *buffers);$/;"	m	struct:__anon1
GenBuffersARB	include/GL/glprocs.h	/^  void (APIENTRY *GenBuffersARB) (GLsizei n, GLuint *buffers);$/;"	m	struct:__anon1
GenFencesAPPLE	include/GL/glprocs.h	/^  void (APIENTRY *GenFencesAPPLE) (GLsizei n, GLuint *fences);$/;"	m	struct:__anon1
GenFencesNV	include/GL/glprocs.h	/^  void (APIENTRY *GenFencesNV) (GLsizei n, GLuint *fences);$/;"	m	struct:__anon1
GenFragmentShadersATI	include/GL/glprocs.h	/^  GLuint (APIENTRY *GenFragmentShadersATI) (GLuint range);$/;"	m	struct:__anon1
GenOcclusionQueriesNV	include/GL/glprocs.h	/^  void (APIENTRY *GenOcclusionQueriesNV) (GLsizei n, GLuint *ids);$/;"	m	struct:__anon1
GenProgramsARB	include/GL/glprocs.h	/^  void (APIENTRY *GenProgramsARB) (GLsizei n, GLuint *programs);$/;"	m	struct:__anon1
GenProgramsNV	include/GL/glprocs.h	/^  void (APIENTRY *GenProgramsNV) (GLsizei n, GLuint *programs);$/;"	m	struct:__anon1
GenQueries	include/GL/glprocs.h	/^  void (APIENTRY *GenQueries) (GLsizei n, GLuint *ids);$/;"	m	struct:__anon1
GenQueriesARB	include/GL/glprocs.h	/^  void (APIENTRY *GenQueriesARB) (GLsizei n, GLuint *ids);$/;"	m	struct:__anon1
GenSymbolsEXT	include/GL/glprocs.h	/^  GLuint (APIENTRY *GenSymbolsEXT) (GLenum datatype, GLenum storagetype, GLenum range, GLuint components);$/;"	m	struct:__anon1
GenTexturesEXT	include/GL/glprocs.h	/^  void (APIENTRY *GenTexturesEXT) (GLsizei n, GLuint *textures);$/;"	m	struct:__anon1
GenVertexArraysAPPLE	include/GL/glprocs.h	/^  void (APIENTRY *GenVertexArraysAPPLE) (GLsizei n, const GLuint *arrays);$/;"	m	struct:__anon1
GenVertexShadersEXT	include/GL/glprocs.h	/^  GLuint (APIENTRY *GenVertexShadersEXT) (GLuint range);$/;"	m	struct:__anon1
GenlockSampleRateI3D	include/GL/glprocs.h	/^  BOOL (WINAPI *GenlockSampleRateI3D) (HDC hDC, UINT uRate);$/;"	m	struct:__anon1
GenlockSourceDelayI3D	include/GL/glprocs.h	/^  BOOL (WINAPI *GenlockSourceDelayI3D) (HDC hDC, UINT uDelay);$/;"	m	struct:__anon1
GenlockSourceEdgeI3D	include/GL/glprocs.h	/^  BOOL (WINAPI *GenlockSourceEdgeI3D) (HDC hDC, UINT uEdge);$/;"	m	struct:__anon1
GenlockSourceI3D	include/GL/glprocs.h	/^  BOOL (WINAPI *GenlockSourceI3D) (HDC hDC, UINT uSource);$/;"	m	struct:__anon1
Get	include/Singleton.h	/^	static inline T* Get()$/;"	f	class:Singleton
GetActiveAttribARB	include/GL/glprocs.h	/^  void (APIENTRY *GetActiveAttribARB) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);$/;"	m	struct:__anon1
GetActiveUniformARB	include/GL/glprocs.h	/^  void (APIENTRY *GetActiveUniformARB) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);$/;"	m	struct:__anon1
GetArrayObjectfvATI	include/GL/glprocs.h	/^  void (APIENTRY *GetArrayObjectfvATI) (GLenum array, GLenum pname, GLfloat *params);$/;"	m	struct:__anon1
GetArrayObjectivATI	include/GL/glprocs.h	/^  void (APIENTRY *GetArrayObjectivATI) (GLenum array, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetAttachedObjectsARB	include/GL/glprocs.h	/^  void (APIENTRY *GetAttachedObjectsARB) (GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj);$/;"	m	struct:__anon1
GetAttribLocationARB	include/GL/glprocs.h	/^  GLint (APIENTRY *GetAttribLocationARB) (GLhandleARB programObj, const GLcharARB *name);$/;"	m	struct:__anon1
GetBufferParameteriv	include/GL/glprocs.h	/^  void (APIENTRY *GetBufferParameteriv) (GLenum target, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetBufferParameterivARB	include/GL/glprocs.h	/^  void (APIENTRY *GetBufferParameterivARB) (GLenum target, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetBufferPointerv	include/GL/glprocs.h	/^  void (APIENTRY *GetBufferPointerv) (GLenum target, GLenum pname, GLvoid* *params);$/;"	m	struct:__anon1
GetBufferPointervARB	include/GL/glprocs.h	/^  void (APIENTRY *GetBufferPointervARB) (GLenum target, GLenum pname, GLvoid* *params);$/;"	m	struct:__anon1
GetBufferSubData	include/GL/glprocs.h	/^  void (APIENTRY *GetBufferSubData) (GLenum target, GLintptr offset, GLsizeiptr size, GLvoid *data);$/;"	m	struct:__anon1
GetBufferSubDataARB	include/GL/glprocs.h	/^  void (APIENTRY *GetBufferSubDataARB) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, GLvoid *data);$/;"	m	struct:__anon1
GetColorTable	include/GL/glprocs.h	/^  void (APIENTRY *GetColorTable) (GLenum target, GLenum format, GLenum type, GLvoid *table);$/;"	m	struct:__anon1
GetColorTableEXT	include/GL/glprocs.h	/^  void (APIENTRY *GetColorTableEXT) (GLenum target, GLenum format, GLenum type, GLvoid *data);$/;"	m	struct:__anon1
GetColorTableParameterfv	include/GL/glprocs.h	/^  void (APIENTRY *GetColorTableParameterfv) (GLenum target, GLenum pname, GLfloat *params);$/;"	m	struct:__anon1
GetColorTableParameterfvEXT	include/GL/glprocs.h	/^  void (APIENTRY *GetColorTableParameterfvEXT) (GLenum target, GLenum pname, GLfloat *params);$/;"	m	struct:__anon1
GetColorTableParameterfvSGI	include/GL/glprocs.h	/^  void (APIENTRY *GetColorTableParameterfvSGI) (GLenum target, GLenum pname, GLfloat *params);$/;"	m	struct:__anon1
GetColorTableParameteriv	include/GL/glprocs.h	/^  void (APIENTRY *GetColorTableParameteriv) (GLenum target, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetColorTableParameterivEXT	include/GL/glprocs.h	/^  void (APIENTRY *GetColorTableParameterivEXT) (GLenum target, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetColorTableParameterivSGI	include/GL/glprocs.h	/^  void (APIENTRY *GetColorTableParameterivSGI) (GLenum target, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetColorTableSGI	include/GL/glprocs.h	/^  void (APIENTRY *GetColorTableSGI) (GLenum target, GLenum format, GLenum type, GLvoid *table);$/;"	m	struct:__anon1
GetCombinerInputParameterfvNV	include/GL/glprocs.h	/^  void (APIENTRY *GetCombinerInputParameterfvNV) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params);$/;"	m	struct:__anon1
GetCombinerInputParameterivNV	include/GL/glprocs.h	/^  void (APIENTRY *GetCombinerInputParameterivNV) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetCombinerOutputParameterfvNV	include/GL/glprocs.h	/^  void (APIENTRY *GetCombinerOutputParameterfvNV) (GLenum stage, GLenum portion, GLenum pname, GLfloat *params);$/;"	m	struct:__anon1
GetCombinerOutputParameterivNV	include/GL/glprocs.h	/^  void (APIENTRY *GetCombinerOutputParameterivNV) (GLenum stage, GLenum portion, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetCombinerStageParameterfvNV	include/GL/glprocs.h	/^  void (APIENTRY *GetCombinerStageParameterfvNV) (GLenum stage, GLenum pname, GLfloat *params);$/;"	m	struct:__anon1
GetCompressedTexImage	include/GL/glprocs.h	/^  void (APIENTRY *GetCompressedTexImage) (GLenum target, GLint level, GLvoid *img);$/;"	m	struct:__anon1
GetCompressedTexImageARB	include/GL/glprocs.h	/^  void (APIENTRY *GetCompressedTexImageARB) (GLenum target, GLint level, GLvoid *img);$/;"	m	struct:__anon1
GetConvolutionFilter	include/GL/glprocs.h	/^  void (APIENTRY *GetConvolutionFilter) (GLenum target, GLenum format, GLenum type, GLvoid *image);$/;"	m	struct:__anon1
GetConvolutionFilterEXT	include/GL/glprocs.h	/^  void (APIENTRY *GetConvolutionFilterEXT) (GLenum target, GLenum format, GLenum type, GLvoid *image);$/;"	m	struct:__anon1
GetConvolutionParameterfv	include/GL/glprocs.h	/^  void (APIENTRY *GetConvolutionParameterfv) (GLenum target, GLenum pname, GLfloat *params);$/;"	m	struct:__anon1
GetConvolutionParameterfvEXT	include/GL/glprocs.h	/^  void (APIENTRY *GetConvolutionParameterfvEXT) (GLenum target, GLenum pname, GLfloat *params);$/;"	m	struct:__anon1
GetConvolutionParameteriv	include/GL/glprocs.h	/^  void (APIENTRY *GetConvolutionParameteriv) (GLenum target, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetConvolutionParameterivEXT	include/GL/glprocs.h	/^  void (APIENTRY *GetConvolutionParameterivEXT) (GLenum target, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetCurrentReadDCARB	include/GL/glprocs.h	/^  HDC (WINAPI *GetCurrentReadDCARB) (void);$/;"	m	struct:__anon1
GetCurrentReadDCEXT	include/GL/glprocs.h	/^  HDC (WINAPI *GetCurrentReadDCEXT) (void);$/;"	m	struct:__anon1
GetDetailTexFuncSGIS	include/GL/glprocs.h	/^  void (APIENTRY *GetDetailTexFuncSGIS) (GLenum target, GLfloat *points);$/;"	m	struct:__anon1
GetDigitalVideoParametersI3D	include/GL/glprocs.h	/^  BOOL (WINAPI *GetDigitalVideoParametersI3D) (HDC hDC, int iAttribute, int *piValue);$/;"	m	struct:__anon1
GetExtensionsStringARB	include/GL/glprocs.h	/^  const (WINAPI *GetExtensionsStringARB) (HDC hdc);$/;"	m	struct:__anon1
GetExtensionsStringEXT	include/GL/glprocs.h	/^  const (WINAPI *GetExtensionsStringEXT) (void);$/;"	m	struct:__anon1
GetFenceivNV	include/GL/glprocs.h	/^  void (APIENTRY *GetFenceivNV) (GLuint fence, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetFinalCombinerInputParameterfvNV	include/GL/glprocs.h	/^  void (APIENTRY *GetFinalCombinerInputParameterfvNV) (GLenum variable, GLenum pname, GLfloat *params);$/;"	m	struct:__anon1
GetFinalCombinerInputParameterivNV	include/GL/glprocs.h	/^  void (APIENTRY *GetFinalCombinerInputParameterivNV) (GLenum variable, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetFogFuncSGIS	include/GL/glprocs.h	/^  void (APIENTRY *GetFogFuncSGIS) (GLfloat *points);$/;"	m	struct:__anon1
GetFragmentLightfvSGIX	include/GL/glprocs.h	/^  void (APIENTRY *GetFragmentLightfvSGIX) (GLenum light, GLenum pname, GLfloat *params);$/;"	m	struct:__anon1
GetFragmentLightivSGIX	include/GL/glprocs.h	/^  void (APIENTRY *GetFragmentLightivSGIX) (GLenum light, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetFragmentMaterialfvSGIX	include/GL/glprocs.h	/^  void (APIENTRY *GetFragmentMaterialfvSGIX) (GLenum face, GLenum pname, GLfloat *params);$/;"	m	struct:__anon1
GetFragmentMaterialivSGIX	include/GL/glprocs.h	/^  void (APIENTRY *GetFragmentMaterialivSGIX) (GLenum face, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetFrameUsageI3D	include/GL/glprocs.h	/^  BOOL (WINAPI *GetFrameUsageI3D) (float *pUsage);$/;"	m	struct:__anon1
GetGammaTableI3D	include/GL/glprocs.h	/^  BOOL (WINAPI *GetGammaTableI3D) (HDC hDC, int iEntries, USHORT *puRed, USHORT *puGreen, USHORT *puBlue);$/;"	m	struct:__anon1
GetGammaTableParametersI3D	include/GL/glprocs.h	/^  BOOL (WINAPI *GetGammaTableParametersI3D) (HDC hDC, int iAttribute, int *piValue);$/;"	m	struct:__anon1
GetGenlockSampleRateI3D	include/GL/glprocs.h	/^  BOOL (WINAPI *GetGenlockSampleRateI3D) (HDC hDC, UINT *uRate);$/;"	m	struct:__anon1
GetGenlockSourceDelayI3D	include/GL/glprocs.h	/^  BOOL (WINAPI *GetGenlockSourceDelayI3D) (HDC hDC, UINT *uDelay);$/;"	m	struct:__anon1
GetGenlockSourceEdgeI3D	include/GL/glprocs.h	/^  BOOL (WINAPI *GetGenlockSourceEdgeI3D) (HDC hDC, UINT *uEdge);$/;"	m	struct:__anon1
GetGenlockSourceI3D	include/GL/glprocs.h	/^  BOOL (WINAPI *GetGenlockSourceI3D) (HDC hDC, UINT *uSource);$/;"	m	struct:__anon1
GetHandleARB	include/GL/glprocs.h	/^  GLhandleARB (APIENTRY *GetHandleARB) (GLenum pname);$/;"	m	struct:__anon1
GetHistogram	include/GL/glprocs.h	/^  void (APIENTRY *GetHistogram) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	m	struct:__anon1
GetHistogramEXT	include/GL/glprocs.h	/^  void (APIENTRY *GetHistogramEXT) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	m	struct:__anon1
GetHistogramParameterfv	include/GL/glprocs.h	/^  void (APIENTRY *GetHistogramParameterfv) (GLenum target, GLenum pname, GLfloat *params);$/;"	m	struct:__anon1
GetHistogramParameterfvEXT	include/GL/glprocs.h	/^  void (APIENTRY *GetHistogramParameterfvEXT) (GLenum target, GLenum pname, GLfloat *params);$/;"	m	struct:__anon1
GetHistogramParameteriv	include/GL/glprocs.h	/^  void (APIENTRY *GetHistogramParameteriv) (GLenum target, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetHistogramParameterivEXT	include/GL/glprocs.h	/^  void (APIENTRY *GetHistogramParameterivEXT) (GLenum target, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetImageTransformParameterfvHP	include/GL/glprocs.h	/^  void (APIENTRY *GetImageTransformParameterfvHP) (GLenum target, GLenum pname, GLfloat *params);$/;"	m	struct:__anon1
GetImageTransformParameterivHP	include/GL/glprocs.h	/^  void (APIENTRY *GetImageTransformParameterivHP) (GLenum target, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetInfoLogARB	include/GL/glprocs.h	/^  void (APIENTRY *GetInfoLogARB) (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog);$/;"	m	struct:__anon1
GetInstrumentsSGIX	include/GL/glprocs.h	/^  GLint (APIENTRY *GetInstrumentsSGIX) (void);$/;"	m	struct:__anon1
GetInvariantBooleanvEXT	include/GL/glprocs.h	/^  void (APIENTRY *GetInvariantBooleanvEXT) (GLuint id, GLenum value, GLboolean *data);$/;"	m	struct:__anon1
GetInvariantFloatvEXT	include/GL/glprocs.h	/^  void (APIENTRY *GetInvariantFloatvEXT) (GLuint id, GLenum value, GLfloat *data);$/;"	m	struct:__anon1
GetInvariantIntegervEXT	include/GL/glprocs.h	/^  void (APIENTRY *GetInvariantIntegervEXT) (GLuint id, GLenum value, GLint *data);$/;"	m	struct:__anon1
GetListParameterfvSGIX	include/GL/glprocs.h	/^  void (APIENTRY *GetListParameterfvSGIX) (GLuint list, GLenum pname, GLfloat *params);$/;"	m	struct:__anon1
GetListParameterivSGIX	include/GL/glprocs.h	/^  void (APIENTRY *GetListParameterivSGIX) (GLuint list, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetLocalConstantBooleanvEXT	include/GL/glprocs.h	/^  void (APIENTRY *GetLocalConstantBooleanvEXT) (GLuint id, GLenum value, GLboolean *data);$/;"	m	struct:__anon1
GetLocalConstantFloatvEXT	include/GL/glprocs.h	/^  void (APIENTRY *GetLocalConstantFloatvEXT) (GLuint id, GLenum value, GLfloat *data);$/;"	m	struct:__anon1
GetLocalConstantIntegervEXT	include/GL/glprocs.h	/^  void (APIENTRY *GetLocalConstantIntegervEXT) (GLuint id, GLenum value, GLint *data);$/;"	m	struct:__anon1
GetMapAttribParameterfvNV	include/GL/glprocs.h	/^  void (APIENTRY *GetMapAttribParameterfvNV) (GLenum target, GLuint index, GLenum pname, GLfloat *params);$/;"	m	struct:__anon1
GetMapAttribParameterivNV	include/GL/glprocs.h	/^  void (APIENTRY *GetMapAttribParameterivNV) (GLenum target, GLuint index, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetMapControlPointsNV	include/GL/glprocs.h	/^  void (APIENTRY *GetMapControlPointsNV) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, GLvoid *points);$/;"	m	struct:__anon1
GetMapParameterfvNV	include/GL/glprocs.h	/^  void (APIENTRY *GetMapParameterfvNV) (GLenum target, GLenum pname, GLfloat *params);$/;"	m	struct:__anon1
GetMapParameterivNV	include/GL/glprocs.h	/^  void (APIENTRY *GetMapParameterivNV) (GLenum target, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetMinmax	include/GL/glprocs.h	/^  void (APIENTRY *GetMinmax) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	m	struct:__anon1
GetMinmaxEXT	include/GL/glprocs.h	/^  void (APIENTRY *GetMinmaxEXT) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	m	struct:__anon1
GetMinmaxParameterfv	include/GL/glprocs.h	/^  void (APIENTRY *GetMinmaxParameterfv) (GLenum target, GLenum pname, GLfloat *params);$/;"	m	struct:__anon1
GetMinmaxParameterfvEXT	include/GL/glprocs.h	/^  void (APIENTRY *GetMinmaxParameterfvEXT) (GLenum target, GLenum pname, GLfloat *params);$/;"	m	struct:__anon1
GetMinmaxParameteriv	include/GL/glprocs.h	/^  void (APIENTRY *GetMinmaxParameteriv) (GLenum target, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetMinmaxParameterivEXT	include/GL/glprocs.h	/^  void (APIENTRY *GetMinmaxParameterivEXT) (GLenum target, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetMscRateOML	include/GL/glprocs.h	/^  BOOL (WINAPI *GetMscRateOML) (HDC hdc, INT32 *numerator, INT32 *denominator);$/;"	m	struct:__anon1
GetObjectBufferfvATI	include/GL/glprocs.h	/^  void (APIENTRY *GetObjectBufferfvATI) (GLuint buffer, GLenum pname, GLfloat *params);$/;"	m	struct:__anon1
GetObjectBufferivATI	include/GL/glprocs.h	/^  void (APIENTRY *GetObjectBufferivATI) (GLuint buffer, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetObjectParameterfvARB	include/GL/glprocs.h	/^  void (APIENTRY *GetObjectParameterfvARB) (GLhandleARB obj, GLenum pname, GLfloat *params);$/;"	m	struct:__anon1
GetObjectParameterivARB	include/GL/glprocs.h	/^  void (APIENTRY *GetObjectParameterivARB) (GLhandleARB obj, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetOcclusionQueryivNV	include/GL/glprocs.h	/^  void (APIENTRY *GetOcclusionQueryivNV) (GLuint id, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetOcclusionQueryuivNV	include/GL/glprocs.h	/^  void (APIENTRY *GetOcclusionQueryuivNV) (GLuint id, GLenum pname, GLuint *params);$/;"	m	struct:__anon1
GetPbufferDCARB	include/GL/glprocs.h	/^  HDC (WINAPI *GetPbufferDCARB) (HPBUFFERARB hPbuffer);$/;"	m	struct:__anon1
GetPbufferDCEXT	include/GL/glprocs.h	/^  HDC (WINAPI *GetPbufferDCEXT) (HPBUFFEREXT hPbuffer);$/;"	m	struct:__anon1
GetPixelFormatAttribfvARB	include/GL/glprocs.h	/^  BOOL (WINAPI *GetPixelFormatAttribfvARB) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, FLOAT *pfValues);$/;"	m	struct:__anon1
GetPixelFormatAttribfvEXT	include/GL/glprocs.h	/^  BOOL (WINAPI *GetPixelFormatAttribfvEXT) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *piAttributes, FLOAT *pfValues);$/;"	m	struct:__anon1
GetPixelFormatAttribivARB	include/GL/glprocs.h	/^  BOOL (WINAPI *GetPixelFormatAttribivARB) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, int *piValues);$/;"	m	struct:__anon1
GetPixelFormatAttribivEXT	include/GL/glprocs.h	/^  BOOL (WINAPI *GetPixelFormatAttribivEXT) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *piAttributes, int *piValues);$/;"	m	struct:__anon1
GetPixelTexGenParameterfvSGIS	include/GL/glprocs.h	/^  void (APIENTRY *GetPixelTexGenParameterfvSGIS) (GLenum pname, GLfloat *params);$/;"	m	struct:__anon1
GetPixelTexGenParameterivSGIS	include/GL/glprocs.h	/^  void (APIENTRY *GetPixelTexGenParameterivSGIS) (GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetPointervEXT	include/GL/glprocs.h	/^  void (APIENTRY *GetPointervEXT) (GLenum pname, GLvoid* *params);$/;"	m	struct:__anon1
GetProgramEnvParameterdvARB	include/GL/glprocs.h	/^  void (APIENTRY *GetProgramEnvParameterdvARB) (GLenum target, GLuint index, GLdouble *params);$/;"	m	struct:__anon1
GetProgramEnvParameterfvARB	include/GL/glprocs.h	/^  void (APIENTRY *GetProgramEnvParameterfvARB) (GLenum target, GLuint index, GLfloat *params);$/;"	m	struct:__anon1
GetProgramLocalParameterdvARB	include/GL/glprocs.h	/^  void (APIENTRY *GetProgramLocalParameterdvARB) (GLenum target, GLuint index, GLdouble *params);$/;"	m	struct:__anon1
GetProgramLocalParameterfvARB	include/GL/glprocs.h	/^  void (APIENTRY *GetProgramLocalParameterfvARB) (GLenum target, GLuint index, GLfloat *params);$/;"	m	struct:__anon1
GetProgramNamedParameterdvNV	include/GL/glprocs.h	/^  void (APIENTRY *GetProgramNamedParameterdvNV) (GLuint id, GLsizei len, const GLubyte *name, GLdouble *params);$/;"	m	struct:__anon1
GetProgramNamedParameterfvNV	include/GL/glprocs.h	/^  void (APIENTRY *GetProgramNamedParameterfvNV) (GLuint id, GLsizei len, const GLubyte *name, GLfloat *params);$/;"	m	struct:__anon1
GetProgramParameterdvNV	include/GL/glprocs.h	/^  void (APIENTRY *GetProgramParameterdvNV) (GLenum target, GLuint index, GLenum pname, GLdouble *params);$/;"	m	struct:__anon1
GetProgramParameterfvNV	include/GL/glprocs.h	/^  void (APIENTRY *GetProgramParameterfvNV) (GLenum target, GLuint index, GLenum pname, GLfloat *params);$/;"	m	struct:__anon1
GetProgramStringARB	include/GL/glprocs.h	/^  void (APIENTRY *GetProgramStringARB) (GLenum target, GLenum pname, GLvoid *string);$/;"	m	struct:__anon1
GetProgramStringNV	include/GL/glprocs.h	/^  void (APIENTRY *GetProgramStringNV) (GLuint id, GLenum pname, GLubyte *program);$/;"	m	struct:__anon1
GetProgramivARB	include/GL/glprocs.h	/^  void (APIENTRY *GetProgramivARB) (GLenum target, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetProgramivNV	include/GL/glprocs.h	/^  void (APIENTRY *GetProgramivNV) (GLuint id, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetQueryObjectiv	include/GL/glprocs.h	/^  void (APIENTRY *GetQueryObjectiv) (GLuint id, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetQueryObjectivARB	include/GL/glprocs.h	/^  void (APIENTRY *GetQueryObjectivARB) (GLuint id, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetQueryObjectuiv	include/GL/glprocs.h	/^  void (APIENTRY *GetQueryObjectuiv) (GLuint id, GLenum pname, GLuint *params);$/;"	m	struct:__anon1
GetQueryObjectuivARB	include/GL/glprocs.h	/^  void (APIENTRY *GetQueryObjectuivARB) (GLuint id, GLenum pname, GLuint *params);$/;"	m	struct:__anon1
GetQueryiv	include/GL/glprocs.h	/^  void (APIENTRY *GetQueryiv) (GLenum target, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetQueryivARB	include/GL/glprocs.h	/^  void (APIENTRY *GetQueryivARB) (GLenum target, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetSeparableFilter	include/GL/glprocs.h	/^  void (APIENTRY *GetSeparableFilter) (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);$/;"	m	struct:__anon1
GetSeparableFilterEXT	include/GL/glprocs.h	/^  void (APIENTRY *GetSeparableFilterEXT) (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);$/;"	m	struct:__anon1
GetShaderSourceARB	include/GL/glprocs.h	/^  void (APIENTRY *GetShaderSourceARB) (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source);$/;"	m	struct:__anon1
GetSharpenTexFuncSGIS	include/GL/glprocs.h	/^  void (APIENTRY *GetSharpenTexFuncSGIS) (GLenum target, GLfloat *points);$/;"	m	struct:__anon1
GetSwapIntervalEXT	include/GL/glprocs.h	/^  int (WINAPI *GetSwapIntervalEXT) (void);$/;"	m	struct:__anon1
GetSyncValuesOML	include/GL/glprocs.h	/^  BOOL (WINAPI *GetSyncValuesOML) (HDC hdc, INT64 *ust, INT64 *msc, INT64 *sbc);$/;"	m	struct:__anon1
GetTexBumpParameterfvATI	include/GL/glprocs.h	/^  void (APIENTRY *GetTexBumpParameterfvATI) (GLenum pname, GLfloat *param);$/;"	m	struct:__anon1
GetTexBumpParameterivATI	include/GL/glprocs.h	/^  void (APIENTRY *GetTexBumpParameterivATI) (GLenum pname, GLint *param);$/;"	m	struct:__anon1
GetTexFilterFuncSGIS	include/GL/glprocs.h	/^  void (APIENTRY *GetTexFilterFuncSGIS) (GLenum target, GLenum filter, GLfloat *weights);$/;"	m	struct:__anon1
GetTrackMatrixivNV	include/GL/glprocs.h	/^  void (APIENTRY *GetTrackMatrixivNV) (GLenum target, GLuint address, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetUniformLocationARB	include/GL/glprocs.h	/^  GLint (APIENTRY *GetUniformLocationARB) (GLhandleARB programObj, const GLcharARB *name);$/;"	m	struct:__anon1
GetUniformfvARB	include/GL/glprocs.h	/^  void (APIENTRY *GetUniformfvARB) (GLhandleARB programObj, GLint location, GLfloat *params);$/;"	m	struct:__anon1
GetUniformivARB	include/GL/glprocs.h	/^  void (APIENTRY *GetUniformivARB) (GLhandleARB programObj, GLint location, GLint *params);$/;"	m	struct:__anon1
GetVariantArrayObjectfvATI	include/GL/glprocs.h	/^  void (APIENTRY *GetVariantArrayObjectfvATI) (GLuint id, GLenum pname, GLfloat *params);$/;"	m	struct:__anon1
GetVariantArrayObjectivATI	include/GL/glprocs.h	/^  void (APIENTRY *GetVariantArrayObjectivATI) (GLuint id, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetVariantBooleanvEXT	include/GL/glprocs.h	/^  void (APIENTRY *GetVariantBooleanvEXT) (GLuint id, GLenum value, GLboolean *data);$/;"	m	struct:__anon1
GetVariantFloatvEXT	include/GL/glprocs.h	/^  void (APIENTRY *GetVariantFloatvEXT) (GLuint id, GLenum value, GLfloat *data);$/;"	m	struct:__anon1
GetVariantIntegervEXT	include/GL/glprocs.h	/^  void (APIENTRY *GetVariantIntegervEXT) (GLuint id, GLenum value, GLint *data);$/;"	m	struct:__anon1
GetVariantPointervEXT	include/GL/glprocs.h	/^  void (APIENTRY *GetVariantPointervEXT) (GLuint id, GLenum value, GLvoid* *data);$/;"	m	struct:__anon1
GetVertexAttribArrayObjectfvATI	include/GL/glprocs.h	/^  void (APIENTRY *GetVertexAttribArrayObjectfvATI) (GLuint index, GLenum pname, GLfloat *params);$/;"	m	struct:__anon1
GetVertexAttribArrayObjectivATI	include/GL/glprocs.h	/^  void (APIENTRY *GetVertexAttribArrayObjectivATI) (GLuint index, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetVertexAttribPointervARB	include/GL/glprocs.h	/^  void (APIENTRY *GetVertexAttribPointervARB) (GLuint index, GLenum pname, GLvoid* *pointer);$/;"	m	struct:__anon1
GetVertexAttribPointervNV	include/GL/glprocs.h	/^  void (APIENTRY *GetVertexAttribPointervNV) (GLuint index, GLenum pname, GLvoid* *pointer);$/;"	m	struct:__anon1
GetVertexAttribdvARB	include/GL/glprocs.h	/^  void (APIENTRY *GetVertexAttribdvARB) (GLuint index, GLenum pname, GLdouble *params);$/;"	m	struct:__anon1
GetVertexAttribdvNV	include/GL/glprocs.h	/^  void (APIENTRY *GetVertexAttribdvNV) (GLuint index, GLenum pname, GLdouble *params);$/;"	m	struct:__anon1
GetVertexAttribfvARB	include/GL/glprocs.h	/^  void (APIENTRY *GetVertexAttribfvARB) (GLuint index, GLenum pname, GLfloat *params);$/;"	m	struct:__anon1
GetVertexAttribfvNV	include/GL/glprocs.h	/^  void (APIENTRY *GetVertexAttribfvNV) (GLuint index, GLenum pname, GLfloat *params);$/;"	m	struct:__anon1
GetVertexAttribivARB	include/GL/glprocs.h	/^  void (APIENTRY *GetVertexAttribivARB) (GLuint index, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GetVertexAttribivNV	include/GL/glprocs.h	/^  void (APIENTRY *GetVertexAttribivNV) (GLuint index, GLenum pname, GLint *params);$/;"	m	struct:__anon1
GlobalAlphaFactorbSUN	include/GL/glprocs.h	/^  void (APIENTRY *GlobalAlphaFactorbSUN) (GLbyte factor);$/;"	m	struct:__anon1
GlobalAlphaFactordSUN	include/GL/glprocs.h	/^  void (APIENTRY *GlobalAlphaFactordSUN) (GLdouble factor);$/;"	m	struct:__anon1
GlobalAlphaFactorfSUN	include/GL/glprocs.h	/^  void (APIENTRY *GlobalAlphaFactorfSUN) (GLfloat factor);$/;"	m	struct:__anon1
GlobalAlphaFactoriSUN	include/GL/glprocs.h	/^  void (APIENTRY *GlobalAlphaFactoriSUN) (GLint factor);$/;"	m	struct:__anon1
GlobalAlphaFactorsSUN	include/GL/glprocs.h	/^  void (APIENTRY *GlobalAlphaFactorsSUN) (GLshort factor);$/;"	m	struct:__anon1
GlobalAlphaFactorubSUN	include/GL/glprocs.h	/^  void (APIENTRY *GlobalAlphaFactorubSUN) (GLubyte factor);$/;"	m	struct:__anon1
GlobalAlphaFactoruiSUN	include/GL/glprocs.h	/^  void (APIENTRY *GlobalAlphaFactoruiSUN) (GLuint factor);$/;"	m	struct:__anon1
GlobalAlphaFactorusSUN	include/GL/glprocs.h	/^  void (APIENTRY *GlobalAlphaFactorusSUN) (GLushort factor);$/;"	m	struct:__anon1
Gravity	particles/Gravity.cpp	/^Gravity::Gravity(Particle *p, Vec2f gravity) :$/;"	f	class:Gravity
Gravity	particles/Gravity.h	/^class Gravity : public Force $/;"	c
HAVE_BOOL	include/gfx/config-vc.h	9;"	d
HAVE_BOOL	include/gfx/config.h	5;"	d
HAVE_CASTING_LIMITS	include/gfx/config-vc.h	78;"	d
HAVE_EXT_HASH_MAP	include/gfx/config.h	26;"	d
HAVE_EXT_HASH_SET	include/gfx/config.h	27;"	d
HAVE_FLTK	include/gfx/config-vc.h	43;"	d
HAVE_FLTK_GL	include/gfx/config-vc.h	46;"	d
HAVE_GETRUSAGE	include/gfx/config.h	11;"	d
HAVE_GL_GLEXT_H	include/gfx/config-vc.h	69;"	d
HAVE_GL_GLEXT_H	include/gfx/config.h	73;"	d
HAVE_GL_WGLEXT_H	include/gfx/config-vc.h	75;"	d
HAVE_LIBJPEG	include/gfx/config-vc.h	55;"	d
HAVE_LIBJPEG	include/gfx/config.h	59;"	d
HAVE_LIBPNG	include/gfx/config-vc.h	52;"	d
HAVE_LIBPNG	include/gfx/config.h	56;"	d
HAVE_LIBTIFF	include/gfx/config-vc.h	49;"	d
HAVE_LIBTIFF	include/gfx/config.h	50;"	d
HAVE_OPENGL	include/gfx/config-vc.h	60;"	d
HAVE_OPENGL	include/gfx/config.h	64;"	d
HAVE_POLYOFFSET	include/gfx/config-vc.h	66;"	d
HAVE_POLYOFFSET	include/gfx/config.h	70;"	d
HAVE_RANDOM	include/gfx/config.h	17;"	d
HAVE_RINT	include/gfx/config.h	8;"	d
HAVE_SSTREAM	include/gfx/config-vc.h	37;"	d
HAVE_SSTREAM	include/gfx/config.h	33;"	d
HAVE_STRSTREAM	include/gfx/config.h	36;"	d
HAVE_TIMES	include/gfx/config.h	14;"	d
HAVE_VALARRAY	include/gfx/config-vc.h	34;"	d
HAVE_VALARRAY	include/gfx/config.h	30;"	d
HPBUFFERARB	include/GL/wglext.h	/^DECLARE_HANDLE(HPBUFFERARB);$/;"	v
HPBUFFEREXT	include/GL/wglext.h	/^DECLARE_HANDLE(HPBUFFEREXT);$/;"	v
HUGE	include/gfx/gfx.h	61;"	d
HintPGI	include/GL/glprocs.h	/^  void (APIENTRY *HintPGI) (GLenum target, GLint mode);$/;"	m	struct:__anon1
Histogram	include/GL/glprocs.h	/^  void (APIENTRY *Histogram) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);$/;"	m	struct:__anon1
HistogramEXT	include/GL/glprocs.h	/^  void (APIENTRY *HistogramEXT) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);$/;"	m	struct:__anon1
IMAGE_IO_H	imageio.h	2;"	d
IMAGE_IO_H	particles/imageio.h	2;"	d
ITER_DIM	FieldToolbox.cpp	4;"	d	file:
ITER_DIM	ScalarField.cpp	8;"	d	file:
ITER_DIM	VectorField.cpp	11;"	d	file:
IX	Rectangle.cpp	6;"	d	file:
IX	ScalarField.cpp	10;"	d	file:
IX	StableFluids.cpp	25;"	d	file:
IX	VectorField.cpp	6;"	d	file:
IX_DIM	FieldToolbox.cpp	3;"	d	file:
IX_DIM	ScalarField.cpp	7;"	d	file:
IX_DIM	VectorField.cpp	10;"	d	file:
IglooInterfaceSGIX	include/GL/glprocs.h	/^  void (APIENTRY *IglooInterfaceSGIX) (GLenum pname, const GLvoid *params);$/;"	m	struct:__anon1
ImageTransformParameterfHP	include/GL/glprocs.h	/^  void (APIENTRY *ImageTransformParameterfHP) (GLenum target, GLenum pname, GLfloat param);$/;"	m	struct:__anon1
ImageTransformParameterfvHP	include/GL/glprocs.h	/^  void (APIENTRY *ImageTransformParameterfvHP) (GLenum target, GLenum pname, const GLfloat *params);$/;"	m	struct:__anon1
ImageTransformParameteriHP	include/GL/glprocs.h	/^  void (APIENTRY *ImageTransformParameteriHP) (GLenum target, GLenum pname, GLint param);$/;"	m	struct:__anon1
ImageTransformParameterivHP	include/GL/glprocs.h	/^  void (APIENTRY *ImageTransformParameterivHP) (GLenum target, GLenum pname, const GLint *params);$/;"	m	struct:__anon1
IndexFuncEXT	include/GL/glprocs.h	/^  void (APIENTRY *IndexFuncEXT) (GLenum func, GLclampf ref);$/;"	m	struct:__anon1
IndexMaterialEXT	include/GL/glprocs.h	/^  void (APIENTRY *IndexMaterialEXT) (GLenum face, GLenum mode);$/;"	m	struct:__anon1
IndexPointerEXT	include/GL/glprocs.h	/^  void (APIENTRY *IndexPointerEXT) (GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	m	struct:__anon1
IndexPointerListIBM	include/GL/glprocs.h	/^  void (APIENTRY *IndexPointerListIBM) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	m	struct:__anon1
InitActiveStencilFaceEXT	include/GL/glprocs.c	/^static void APIENTRY InitActiveStencilFaceEXT (GLenum face)$/;"	f	file:
InitActiveTexture	include/GL/glprocs.c	/^static void APIENTRY InitActiveTexture (GLenum texture)$/;"	f	file:
InitActiveTextureARB	include/GL/glprocs.c	/^static void APIENTRY InitActiveTextureARB (GLenum texture)$/;"	f	file:
InitAddSwapHintRectWIN	include/GL/glprocs.c	/^static void APIENTRY InitAddSwapHintRectWIN (GLint x, GLint y, GLsizei width, GLsizei height)$/;"	f	file:
InitAllocateMemoryNV	include/GL/glprocs.c	/^static void* WINAPI InitAllocateMemoryNV (GLsizei size, GLfloat readfreq, GLfloat writefreq, GLfloat priority)$/;"	f	file:
InitAlphaFragmentOp1ATI	include/GL/glprocs.c	/^static void APIENTRY InitAlphaFragmentOp1ATI (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod)$/;"	f	file:
InitAlphaFragmentOp2ATI	include/GL/glprocs.c	/^static void APIENTRY InitAlphaFragmentOp2ATI (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod)$/;"	f	file:
InitAlphaFragmentOp3ATI	include/GL/glprocs.c	/^static void APIENTRY InitAlphaFragmentOp3ATI (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod)$/;"	f	file:
InitApplyTextureEXT	include/GL/glprocs.c	/^static void APIENTRY InitApplyTextureEXT (GLenum mode)$/;"	f	file:
InitAreProgramsResidentNV	include/GL/glprocs.c	/^static GLboolean APIENTRY InitAreProgramsResidentNV (GLsizei n, const GLuint *programs, GLboolean *residences)$/;"	f	file:
InitAreTexturesResidentEXT	include/GL/glprocs.c	/^static GLboolean APIENTRY InitAreTexturesResidentEXT (GLsizei n, const GLuint *textures, GLboolean *residences)$/;"	f	file:
InitArrayElementEXT	include/GL/glprocs.c	/^static void APIENTRY InitArrayElementEXT (GLint i)$/;"	f	file:
InitArrayObjectATI	include/GL/glprocs.c	/^static void APIENTRY InitArrayObjectATI (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset)$/;"	f	file:
InitAssociateImageBufferEventsI3D	include/GL/glprocs.c	/^static BOOL WINAPI InitAssociateImageBufferEventsI3D (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count)$/;"	f	file:
InitAsyncMarkerSGIX	include/GL/glprocs.c	/^static void APIENTRY InitAsyncMarkerSGIX (GLuint marker)$/;"	f	file:
InitAttachObjectARB	include/GL/glprocs.c	/^static void APIENTRY InitAttachObjectARB (GLhandleARB containerObj, GLhandleARB obj)$/;"	f	file:
InitBeginFragmentShaderATI	include/GL/glprocs.c	/^static void APIENTRY InitBeginFragmentShaderATI (void)$/;"	f	file:
InitBeginFrameTrackingI3D	include/GL/glprocs.c	/^static BOOL WINAPI InitBeginFrameTrackingI3D (void)$/;"	f	file:
InitBeginOcclusionQueryNV	include/GL/glprocs.c	/^static void APIENTRY InitBeginOcclusionQueryNV (GLuint id)$/;"	f	file:
InitBeginQuery	include/GL/glprocs.c	/^static void APIENTRY InitBeginQuery (GLenum target, GLuint id)$/;"	f	file:
InitBeginQueryARB	include/GL/glprocs.c	/^static void APIENTRY InitBeginQueryARB (GLenum target, GLuint id)$/;"	f	file:
InitBeginVertexShaderEXT	include/GL/glprocs.c	/^static void APIENTRY InitBeginVertexShaderEXT (void)$/;"	f	file:
InitBindAttribLocationARB	include/GL/glprocs.c	/^static void APIENTRY InitBindAttribLocationARB (GLhandleARB programObj, GLuint index, const GLcharARB *name)$/;"	f	file:
InitBindBuffer	include/GL/glprocs.c	/^static void APIENTRY InitBindBuffer (GLenum target, GLuint buffer)$/;"	f	file:
InitBindBufferARB	include/GL/glprocs.c	/^static void APIENTRY InitBindBufferARB (GLenum target, GLuint buffer)$/;"	f	file:
InitBindDisplayColorTableEXT	include/GL/glprocs.c	/^static GLboolean WINAPI InitBindDisplayColorTableEXT (GLushort id)$/;"	f	file:
InitBindFragmentShaderATI	include/GL/glprocs.c	/^static void APIENTRY InitBindFragmentShaderATI (GLuint id)$/;"	f	file:
InitBindLightParameterEXT	include/GL/glprocs.c	/^static GLuint APIENTRY InitBindLightParameterEXT (GLenum light, GLenum value)$/;"	f	file:
InitBindMaterialParameterEXT	include/GL/glprocs.c	/^static GLuint APIENTRY InitBindMaterialParameterEXT (GLenum face, GLenum value)$/;"	f	file:
InitBindParameterEXT	include/GL/glprocs.c	/^static GLuint APIENTRY InitBindParameterEXT (GLenum value)$/;"	f	file:
InitBindProgramARB	include/GL/glprocs.c	/^static void APIENTRY InitBindProgramARB (GLenum target, GLuint program)$/;"	f	file:
InitBindProgramNV	include/GL/glprocs.c	/^static void APIENTRY InitBindProgramNV (GLenum target, GLuint id)$/;"	f	file:
InitBindTexGenParameterEXT	include/GL/glprocs.c	/^static GLuint APIENTRY InitBindTexGenParameterEXT (GLenum unit, GLenum coord, GLenum value)$/;"	f	file:
InitBindTexImageARB	include/GL/glprocs.c	/^static BOOL WINAPI InitBindTexImageARB (HPBUFFERARB hPbuffer, int iBuffer)$/;"	f	file:
InitBindTextureEXT	include/GL/glprocs.c	/^static void APIENTRY InitBindTextureEXT (GLenum target, GLuint texture)$/;"	f	file:
InitBindTextureUnitParameterEXT	include/GL/glprocs.c	/^static GLuint APIENTRY InitBindTextureUnitParameterEXT (GLenum unit, GLenum value)$/;"	f	file:
InitBindVertexArrayAPPLE	include/GL/glprocs.c	/^static void APIENTRY InitBindVertexArrayAPPLE (GLuint array)$/;"	f	file:
InitBindVertexShaderEXT	include/GL/glprocs.c	/^static void APIENTRY InitBindVertexShaderEXT (GLuint id)$/;"	f	file:
InitBinormal3bEXT	include/GL/glprocs.c	/^static void APIENTRY InitBinormal3bEXT (GLbyte bx, GLbyte by, GLbyte bz)$/;"	f	file:
InitBinormal3bvEXT	include/GL/glprocs.c	/^static void APIENTRY InitBinormal3bvEXT (const GLbyte *v)$/;"	f	file:
InitBinormal3dEXT	include/GL/glprocs.c	/^static void APIENTRY InitBinormal3dEXT (GLdouble bx, GLdouble by, GLdouble bz)$/;"	f	file:
InitBinormal3dvEXT	include/GL/glprocs.c	/^static void APIENTRY InitBinormal3dvEXT (const GLdouble *v)$/;"	f	file:
InitBinormal3fEXT	include/GL/glprocs.c	/^static void APIENTRY InitBinormal3fEXT (GLfloat bx, GLfloat by, GLfloat bz)$/;"	f	file:
InitBinormal3fvEXT	include/GL/glprocs.c	/^static void APIENTRY InitBinormal3fvEXT (const GLfloat *v)$/;"	f	file:
InitBinormal3iEXT	include/GL/glprocs.c	/^static void APIENTRY InitBinormal3iEXT (GLint bx, GLint by, GLint bz)$/;"	f	file:
InitBinormal3ivEXT	include/GL/glprocs.c	/^static void APIENTRY InitBinormal3ivEXT (const GLint *v)$/;"	f	file:
InitBinormal3sEXT	include/GL/glprocs.c	/^static void APIENTRY InitBinormal3sEXT (GLshort bx, GLshort by, GLshort bz)$/;"	f	file:
InitBinormal3svEXT	include/GL/glprocs.c	/^static void APIENTRY InitBinormal3svEXT (const GLshort *v)$/;"	f	file:
InitBinormalPointerEXT	include/GL/glprocs.c	/^static void APIENTRY InitBinormalPointerEXT (GLenum type, GLsizei stride, const GLvoid *pointer)$/;"	f	file:
InitBlendColor	include/GL/glprocs.c	/^static void APIENTRY InitBlendColor (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)$/;"	f	file:
InitBlendColorEXT	include/GL/glprocs.c	/^static void APIENTRY InitBlendColorEXT (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)$/;"	f	file:
InitBlendEquation	include/GL/glprocs.c	/^static void APIENTRY InitBlendEquation (GLenum mode)$/;"	f	file:
InitBlendEquationEXT	include/GL/glprocs.c	/^static void APIENTRY InitBlendEquationEXT (GLenum mode)$/;"	f	file:
InitBlendEquationSeparateEXT	include/GL/glprocs.c	/^static void APIENTRY InitBlendEquationSeparateEXT (GLenum modeRGB, GLenum modeAlpha)$/;"	f	file:
InitBlendFuncSeparate	include/GL/glprocs.c	/^static void APIENTRY InitBlendFuncSeparate (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha)$/;"	f	file:
InitBlendFuncSeparateEXT	include/GL/glprocs.c	/^static void APIENTRY InitBlendFuncSeparateEXT (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha)$/;"	f	file:
InitBlendFuncSeparateINGR	include/GL/glprocs.c	/^static void APIENTRY InitBlendFuncSeparateINGR (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha)$/;"	f	file:
InitBufferData	include/GL/glprocs.c	/^static void APIENTRY InitBufferData (GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage)$/;"	f	file:
InitBufferDataARB	include/GL/glprocs.c	/^static void APIENTRY InitBufferDataARB (GLenum target, GLsizeiptrARB size, const GLvoid *data, GLenum usage)$/;"	f	file:
InitBufferSubData	include/GL/glprocs.c	/^static void APIENTRY InitBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data)$/;"	f	file:
InitBufferSubDataARB	include/GL/glprocs.c	/^static void APIENTRY InitBufferSubDataARB (GLenum target, GLintptrARB offset, GLsizeiptrARB size, const GLvoid *data)$/;"	f	file:
InitChoosePixelFormatARB	include/GL/glprocs.c	/^static BOOL WINAPI InitChoosePixelFormatARB (HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats)$/;"	f	file:
InitChoosePixelFormatEXT	include/GL/glprocs.c	/^static BOOL WINAPI InitChoosePixelFormatEXT (HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats)$/;"	f	file:
InitClientActiveTexture	include/GL/glprocs.c	/^static void APIENTRY InitClientActiveTexture (GLenum texture)$/;"	f	file:
InitClientActiveTextureARB	include/GL/glprocs.c	/^static void APIENTRY InitClientActiveTextureARB (GLenum texture)$/;"	f	file:
InitClientActiveVertexStreamATI	include/GL/glprocs.c	/^static void APIENTRY InitClientActiveVertexStreamATI (GLenum stream)$/;"	f	file:
InitColor3fVertex3fSUN	include/GL/glprocs.c	/^static void APIENTRY InitColor3fVertex3fSUN (GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z)$/;"	f	file:
InitColor3fVertex3fvSUN	include/GL/glprocs.c	/^static void APIENTRY InitColor3fVertex3fvSUN (const GLfloat *c, const GLfloat *v)$/;"	f	file:
InitColor3hNV	include/GL/glprocs.c	/^static void APIENTRY InitColor3hNV (GLhalfNV red, GLhalfNV green, GLhalfNV blue)$/;"	f	file:
InitColor3hvNV	include/GL/glprocs.c	/^static void APIENTRY InitColor3hvNV (const GLhalfNV *v)$/;"	f	file:
InitColor4fNormal3fVertex3fSUN	include/GL/glprocs.c	/^static void APIENTRY InitColor4fNormal3fVertex3fSUN (GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)$/;"	f	file:
InitColor4fNormal3fVertex3fvSUN	include/GL/glprocs.c	/^static void APIENTRY InitColor4fNormal3fVertex3fvSUN (const GLfloat *c, const GLfloat *n, const GLfloat *v)$/;"	f	file:
InitColor4hNV	include/GL/glprocs.c	/^static void APIENTRY InitColor4hNV (GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha)$/;"	f	file:
InitColor4hvNV	include/GL/glprocs.c	/^static void APIENTRY InitColor4hvNV (const GLhalfNV *v)$/;"	f	file:
InitColor4ubVertex2fSUN	include/GL/glprocs.c	/^static void APIENTRY InitColor4ubVertex2fSUN (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y)$/;"	f	file:
InitColor4ubVertex2fvSUN	include/GL/glprocs.c	/^static void APIENTRY InitColor4ubVertex2fvSUN (const GLubyte *c, const GLfloat *v)$/;"	f	file:
InitColor4ubVertex3fSUN	include/GL/glprocs.c	/^static void APIENTRY InitColor4ubVertex3fSUN (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z)$/;"	f	file:
InitColor4ubVertex3fvSUN	include/GL/glprocs.c	/^static void APIENTRY InitColor4ubVertex3fvSUN (const GLubyte *c, const GLfloat *v)$/;"	f	file:
InitColorFragmentOp1ATI	include/GL/glprocs.c	/^static void APIENTRY InitColorFragmentOp1ATI (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod)$/;"	f	file:
InitColorFragmentOp2ATI	include/GL/glprocs.c	/^static void APIENTRY InitColorFragmentOp2ATI (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod)$/;"	f	file:
InitColorFragmentOp3ATI	include/GL/glprocs.c	/^static void APIENTRY InitColorFragmentOp3ATI (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod)$/;"	f	file:
InitColorPointerEXT	include/GL/glprocs.c	/^static void APIENTRY InitColorPointerEXT (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer)$/;"	f	file:
InitColorPointerListIBM	include/GL/glprocs.c	/^static void APIENTRY InitColorPointerListIBM (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride)$/;"	f	file:
InitColorPointervINTEL	include/GL/glprocs.c	/^static void APIENTRY InitColorPointervINTEL (GLint size, GLenum type, const GLvoid* *pointer)$/;"	f	file:
InitColorSubTable	include/GL/glprocs.c	/^static void APIENTRY InitColorSubTable (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data)$/;"	f	file:
InitColorSubTableEXT	include/GL/glprocs.c	/^static void APIENTRY InitColorSubTableEXT (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data)$/;"	f	file:
InitColorTable	include/GL/glprocs.c	/^static void APIENTRY InitColorTable (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table)$/;"	f	file:
InitColorTableEXT	include/GL/glprocs.c	/^static void APIENTRY InitColorTableEXT (GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const GLvoid *table)$/;"	f	file:
InitColorTableParameterfv	include/GL/glprocs.c	/^static void APIENTRY InitColorTableParameterfv (GLenum target, GLenum pname, const GLfloat *params)$/;"	f	file:
InitColorTableParameterfvSGI	include/GL/glprocs.c	/^static void APIENTRY InitColorTableParameterfvSGI (GLenum target, GLenum pname, const GLfloat *params)$/;"	f	file:
InitColorTableParameteriv	include/GL/glprocs.c	/^static void APIENTRY InitColorTableParameteriv (GLenum target, GLenum pname, const GLint *params)$/;"	f	file:
InitColorTableParameterivSGI	include/GL/glprocs.c	/^static void APIENTRY InitColorTableParameterivSGI (GLenum target, GLenum pname, const GLint *params)$/;"	f	file:
InitColorTableSGI	include/GL/glprocs.c	/^static void APIENTRY InitColorTableSGI (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table)$/;"	f	file:
InitCombinerInputNV	include/GL/glprocs.c	/^static void APIENTRY InitCombinerInputNV (GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage)$/;"	f	file:
InitCombinerOutputNV	include/GL/glprocs.c	/^static void APIENTRY InitCombinerOutputNV (GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum)$/;"	f	file:
InitCombinerParameterfNV	include/GL/glprocs.c	/^static void APIENTRY InitCombinerParameterfNV (GLenum pname, GLfloat param)$/;"	f	file:
InitCombinerParameterfvNV	include/GL/glprocs.c	/^static void APIENTRY InitCombinerParameterfvNV (GLenum pname, const GLfloat *params)$/;"	f	file:
InitCombinerParameteriNV	include/GL/glprocs.c	/^static void APIENTRY InitCombinerParameteriNV (GLenum pname, GLint param)$/;"	f	file:
InitCombinerParameterivNV	include/GL/glprocs.c	/^static void APIENTRY InitCombinerParameterivNV (GLenum pname, const GLint *params)$/;"	f	file:
InitCombinerStageParameterfvNV	include/GL/glprocs.c	/^static void APIENTRY InitCombinerStageParameterfvNV (GLenum stage, GLenum pname, const GLfloat *params)$/;"	f	file:
InitCompileShaderARB	include/GL/glprocs.c	/^static void APIENTRY InitCompileShaderARB (GLhandleARB shaderObj)$/;"	f	file:
InitCompressedTexImage1D	include/GL/glprocs.c	/^static void APIENTRY InitCompressedTexImage1D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data)$/;"	f	file:
InitCompressedTexImage1DARB	include/GL/glprocs.c	/^static void APIENTRY InitCompressedTexImage1DARB (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data)$/;"	f	file:
InitCompressedTexImage2D	include/GL/glprocs.c	/^static void APIENTRY InitCompressedTexImage2D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data)$/;"	f	file:
InitCompressedTexImage2DARB	include/GL/glprocs.c	/^static void APIENTRY InitCompressedTexImage2DARB (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data)$/;"	f	file:
InitCompressedTexImage3D	include/GL/glprocs.c	/^static void APIENTRY InitCompressedTexImage3D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data)$/;"	f	file:
InitCompressedTexImage3DARB	include/GL/glprocs.c	/^static void APIENTRY InitCompressedTexImage3DARB (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data)$/;"	f	file:
InitCompressedTexSubImage1D	include/GL/glprocs.c	/^static void APIENTRY InitCompressedTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data)$/;"	f	file:
InitCompressedTexSubImage1DARB	include/GL/glprocs.c	/^static void APIENTRY InitCompressedTexSubImage1DARB (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data)$/;"	f	file:
InitCompressedTexSubImage2D	include/GL/glprocs.c	/^static void APIENTRY InitCompressedTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data)$/;"	f	file:
InitCompressedTexSubImage2DARB	include/GL/glprocs.c	/^static void APIENTRY InitCompressedTexSubImage2DARB (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data)$/;"	f	file:
InitCompressedTexSubImage3D	include/GL/glprocs.c	/^static void APIENTRY InitCompressedTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data)$/;"	f	file:
InitCompressedTexSubImage3DARB	include/GL/glprocs.c	/^static void APIENTRY InitCompressedTexSubImage3DARB (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data)$/;"	f	file:
InitConvolutionFilter1D	include/GL/glprocs.c	/^static void APIENTRY InitConvolutionFilter1D (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image)$/;"	f	file:
InitConvolutionFilter1DEXT	include/GL/glprocs.c	/^static void APIENTRY InitConvolutionFilter1DEXT (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image)$/;"	f	file:
InitConvolutionFilter2D	include/GL/glprocs.c	/^static void APIENTRY InitConvolutionFilter2D (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image)$/;"	f	file:
InitConvolutionFilter2DEXT	include/GL/glprocs.c	/^static void APIENTRY InitConvolutionFilter2DEXT (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image)$/;"	f	file:
InitConvolutionParameterf	include/GL/glprocs.c	/^static void APIENTRY InitConvolutionParameterf (GLenum target, GLenum pname, GLfloat params)$/;"	f	file:
InitConvolutionParameterfEXT	include/GL/glprocs.c	/^static void APIENTRY InitConvolutionParameterfEXT (GLenum target, GLenum pname, GLfloat params)$/;"	f	file:
InitConvolutionParameterfv	include/GL/glprocs.c	/^static void APIENTRY InitConvolutionParameterfv (GLenum target, GLenum pname, const GLfloat *params)$/;"	f	file:
InitConvolutionParameterfvEXT	include/GL/glprocs.c	/^static void APIENTRY InitConvolutionParameterfvEXT (GLenum target, GLenum pname, const GLfloat *params)$/;"	f	file:
InitConvolutionParameteri	include/GL/glprocs.c	/^static void APIENTRY InitConvolutionParameteri (GLenum target, GLenum pname, GLint params)$/;"	f	file:
InitConvolutionParameteriEXT	include/GL/glprocs.c	/^static void APIENTRY InitConvolutionParameteriEXT (GLenum target, GLenum pname, GLint params)$/;"	f	file:
InitConvolutionParameteriv	include/GL/glprocs.c	/^static void APIENTRY InitConvolutionParameteriv (GLenum target, GLenum pname, const GLint *params)$/;"	f	file:
InitConvolutionParameterivEXT	include/GL/glprocs.c	/^static void APIENTRY InitConvolutionParameterivEXT (GLenum target, GLenum pname, const GLint *params)$/;"	f	file:
InitCopyColorSubTable	include/GL/glprocs.c	/^static void APIENTRY InitCopyColorSubTable (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width)$/;"	f	file:
InitCopyColorSubTableEXT	include/GL/glprocs.c	/^static void APIENTRY InitCopyColorSubTableEXT (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width)$/;"	f	file:
InitCopyColorTable	include/GL/glprocs.c	/^static void APIENTRY InitCopyColorTable (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width)$/;"	f	file:
InitCopyColorTableSGI	include/GL/glprocs.c	/^static void APIENTRY InitCopyColorTableSGI (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width)$/;"	f	file:
InitCopyConvolutionFilter1D	include/GL/glprocs.c	/^static void APIENTRY InitCopyConvolutionFilter1D (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width)$/;"	f	file:
InitCopyConvolutionFilter1DEXT	include/GL/glprocs.c	/^static void APIENTRY InitCopyConvolutionFilter1DEXT (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width)$/;"	f	file:
InitCopyConvolutionFilter2D	include/GL/glprocs.c	/^static void APIENTRY InitCopyConvolutionFilter2D (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height)$/;"	f	file:
InitCopyConvolutionFilter2DEXT	include/GL/glprocs.c	/^static void APIENTRY InitCopyConvolutionFilter2DEXT (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height)$/;"	f	file:
InitCopyTexImage1DEXT	include/GL/glprocs.c	/^static void APIENTRY InitCopyTexImage1DEXT (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border)$/;"	f	file:
InitCopyTexImage2DEXT	include/GL/glprocs.c	/^static void APIENTRY InitCopyTexImage2DEXT (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)$/;"	f	file:
InitCopyTexSubImage1DEXT	include/GL/glprocs.c	/^static void APIENTRY InitCopyTexSubImage1DEXT (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width)$/;"	f	file:
InitCopyTexSubImage2DEXT	include/GL/glprocs.c	/^static void APIENTRY InitCopyTexSubImage2DEXT (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)$/;"	f	file:
InitCopyTexSubImage3D	include/GL/glprocs.c	/^static void APIENTRY InitCopyTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)$/;"	f	file:
InitCopyTexSubImage3DEXT	include/GL/glprocs.c	/^static void APIENTRY InitCopyTexSubImage3DEXT (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)$/;"	f	file:
InitCreateBufferRegionARB	include/GL/glprocs.c	/^static HANDLE WINAPI InitCreateBufferRegionARB (HDC hDC, int iLayerPlane, UINT uType)$/;"	f	file:
InitCreateDisplayColorTableEXT	include/GL/glprocs.c	/^static GLboolean WINAPI InitCreateDisplayColorTableEXT (GLushort id)$/;"	f	file:
InitCreateImageBufferI3D	include/GL/glprocs.c	/^static LPVOID WINAPI InitCreateImageBufferI3D (HDC hDC, DWORD dwSize, UINT uFlags)$/;"	f	file:
InitCreatePbufferARB	include/GL/glprocs.c	/^static HPBUFFERARB WINAPI InitCreatePbufferARB (HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList)$/;"	f	file:
InitCreatePbufferEXT	include/GL/glprocs.c	/^static HPBUFFEREXT WINAPI InitCreatePbufferEXT (HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList)$/;"	f	file:
InitCreateProgramObjectARB	include/GL/glprocs.c	/^static GLhandleARB APIENTRY InitCreateProgramObjectARB (void)$/;"	f	file:
InitCreateShaderObjectARB	include/GL/glprocs.c	/^static GLhandleARB APIENTRY InitCreateShaderObjectARB (GLenum shaderType)$/;"	f	file:
InitCullParameterdvEXT	include/GL/glprocs.c	/^static void APIENTRY InitCullParameterdvEXT (GLenum pname, GLdouble *params)$/;"	f	file:
InitCullParameterfvEXT	include/GL/glprocs.c	/^static void APIENTRY InitCullParameterfvEXT (GLenum pname, GLfloat *params)$/;"	f	file:
InitCurrentPaletteMatrixARB	include/GL/glprocs.c	/^static void APIENTRY InitCurrentPaletteMatrixARB (GLint index)$/;"	f	file:
InitDeformSGIX	include/GL/glprocs.c	/^static void APIENTRY InitDeformSGIX (GLbitfield mask)$/;"	f	file:
InitDeformationMap3dSGIX	include/GL/glprocs.c	/^static void APIENTRY InitDeformationMap3dSGIX (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points)$/;"	f	file:
InitDeformationMap3fSGIX	include/GL/glprocs.c	/^static void APIENTRY InitDeformationMap3fSGIX (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points)$/;"	f	file:
InitDeleteAsyncMarkersSGIX	include/GL/glprocs.c	/^static void APIENTRY InitDeleteAsyncMarkersSGIX (GLuint marker, GLsizei range)$/;"	f	file:
InitDeleteBufferRegionARB	include/GL/glprocs.c	/^static VOID WINAPI InitDeleteBufferRegionARB (HANDLE hRegion)$/;"	f	file:
InitDeleteBuffers	include/GL/glprocs.c	/^static void APIENTRY InitDeleteBuffers (GLsizei n, const GLuint *buffers)$/;"	f	file:
InitDeleteBuffersARB	include/GL/glprocs.c	/^static void APIENTRY InitDeleteBuffersARB (GLsizei n, const GLuint *buffers)$/;"	f	file:
InitDeleteFencesAPPLE	include/GL/glprocs.c	/^static void APIENTRY InitDeleteFencesAPPLE (GLsizei n, const GLuint *fences)$/;"	f	file:
InitDeleteFencesNV	include/GL/glprocs.c	/^static void APIENTRY InitDeleteFencesNV (GLsizei n, const GLuint *fences)$/;"	f	file:
InitDeleteFragmentShaderATI	include/GL/glprocs.c	/^static void APIENTRY InitDeleteFragmentShaderATI (GLuint id)$/;"	f	file:
InitDeleteObjectARB	include/GL/glprocs.c	/^static void APIENTRY InitDeleteObjectARB (GLhandleARB obj)$/;"	f	file:
InitDeleteOcclusionQueriesNV	include/GL/glprocs.c	/^static void APIENTRY InitDeleteOcclusionQueriesNV (GLsizei n, const GLuint *ids)$/;"	f	file:
InitDeleteProgramsARB	include/GL/glprocs.c	/^static void APIENTRY InitDeleteProgramsARB (GLsizei n, const GLuint *programs)$/;"	f	file:
InitDeleteProgramsNV	include/GL/glprocs.c	/^static void APIENTRY InitDeleteProgramsNV (GLsizei n, const GLuint *programs)$/;"	f	file:
InitDeleteQueries	include/GL/glprocs.c	/^static void APIENTRY InitDeleteQueries (GLsizei n, const GLuint *ids)$/;"	f	file:
InitDeleteQueriesARB	include/GL/glprocs.c	/^static void APIENTRY InitDeleteQueriesARB (GLsizei n, const GLuint *ids)$/;"	f	file:
InitDeleteTexturesEXT	include/GL/glprocs.c	/^static void APIENTRY InitDeleteTexturesEXT (GLsizei n, const GLuint *textures)$/;"	f	file:
InitDeleteVertexArraysAPPLE	include/GL/glprocs.c	/^static void APIENTRY InitDeleteVertexArraysAPPLE (GLsizei n, const GLuint *arrays)$/;"	f	file:
InitDeleteVertexShaderEXT	include/GL/glprocs.c	/^static void APIENTRY InitDeleteVertexShaderEXT (GLuint id)$/;"	f	file:
InitDepthBoundsEXT	include/GL/glprocs.c	/^static void APIENTRY InitDepthBoundsEXT (GLclampd zmin, GLclampd zmax)$/;"	f	file:
InitDestroyDisplayColorTableEXT	include/GL/glprocs.c	/^static VOID WINAPI InitDestroyDisplayColorTableEXT (GLushort id)$/;"	f	file:
InitDestroyImageBufferI3D	include/GL/glprocs.c	/^static BOOL WINAPI InitDestroyImageBufferI3D (HDC hDC, LPVOID pAddress)$/;"	f	file:
InitDestroyPbufferARB	include/GL/glprocs.c	/^static BOOL WINAPI InitDestroyPbufferARB (HPBUFFERARB hPbuffer)$/;"	f	file:
InitDestroyPbufferEXT	include/GL/glprocs.c	/^static BOOL WINAPI InitDestroyPbufferEXT (HPBUFFEREXT hPbuffer)$/;"	f	file:
InitDetachObjectARB	include/GL/glprocs.c	/^static void APIENTRY InitDetachObjectARB (GLhandleARB containerObj, GLhandleARB attachedObj)$/;"	f	file:
InitDetailTexFuncSGIS	include/GL/glprocs.c	/^static void APIENTRY InitDetailTexFuncSGIS (GLenum target, GLsizei n, const GLfloat *points)$/;"	f	file:
InitDisableFrameLockI3D	include/GL/glprocs.c	/^static BOOL WINAPI InitDisableFrameLockI3D (void)$/;"	f	file:
InitDisableGenlockI3D	include/GL/glprocs.c	/^static BOOL WINAPI InitDisableGenlockI3D (HDC hDC)$/;"	f	file:
InitDisableVariantClientStateEXT	include/GL/glprocs.c	/^static void APIENTRY InitDisableVariantClientStateEXT (GLuint id)$/;"	f	file:
InitDisableVertexAttribArrayARB	include/GL/glprocs.c	/^static void APIENTRY InitDisableVertexAttribArrayARB (GLuint index)$/;"	f	file:
InitDrawArraysEXT	include/GL/glprocs.c	/^static void APIENTRY InitDrawArraysEXT (GLenum mode, GLint first, GLsizei count)$/;"	f	file:
InitDrawBuffersATI	include/GL/glprocs.c	/^static void APIENTRY InitDrawBuffersATI (GLsizei n, const GLenum *bufs)$/;"	f	file:
InitDrawElementArrayAPPLE	include/GL/glprocs.c	/^static void APIENTRY InitDrawElementArrayAPPLE (GLenum mode, GLint first, GLsizei count)$/;"	f	file:
InitDrawElementArrayATI	include/GL/glprocs.c	/^static void APIENTRY InitDrawElementArrayATI (GLenum mode, GLsizei count)$/;"	f	file:
InitDrawMeshArraysSUN	include/GL/glprocs.c	/^static void APIENTRY InitDrawMeshArraysSUN (GLenum mode, GLint first, GLsizei count, GLsizei width)$/;"	f	file:
InitDrawRangeElementArrayAPPLE	include/GL/glprocs.c	/^static void APIENTRY InitDrawRangeElementArrayAPPLE (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count)$/;"	f	file:
InitDrawRangeElementArrayATI	include/GL/glprocs.c	/^static void APIENTRY InitDrawRangeElementArrayATI (GLenum mode, GLuint start, GLuint end, GLsizei count)$/;"	f	file:
InitDrawRangeElements	include/GL/glprocs.c	/^static void APIENTRY InitDrawRangeElements (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices)$/;"	f	file:
InitDrawRangeElementsEXT	include/GL/glprocs.c	/^static void APIENTRY InitDrawRangeElementsEXT (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices)$/;"	f	file:
InitEdgeFlagPointerEXT	include/GL/glprocs.c	/^static void APIENTRY InitEdgeFlagPointerEXT (GLsizei stride, GLsizei count, const GLboolean *pointer)$/;"	f	file:
InitEdgeFlagPointerListIBM	include/GL/glprocs.c	/^static void APIENTRY InitEdgeFlagPointerListIBM (GLint stride, const GLboolean* *pointer, GLint ptrstride)$/;"	f	file:
InitElementPointerAPPLE	include/GL/glprocs.c	/^static void APIENTRY InitElementPointerAPPLE (GLenum type, const GLvoid *pointer)$/;"	f	file:
InitElementPointerATI	include/GL/glprocs.c	/^static void APIENTRY InitElementPointerATI (GLenum type, const GLvoid *pointer)$/;"	f	file:
InitEnableFrameLockI3D	include/GL/glprocs.c	/^static BOOL WINAPI InitEnableFrameLockI3D (void)$/;"	f	file:
InitEnableGenlockI3D	include/GL/glprocs.c	/^static BOOL WINAPI InitEnableGenlockI3D (HDC hDC)$/;"	f	file:
InitEnableVariantClientStateEXT	include/GL/glprocs.c	/^static void APIENTRY InitEnableVariantClientStateEXT (GLuint id)$/;"	f	file:
InitEnableVertexAttribArrayARB	include/GL/glprocs.c	/^static void APIENTRY InitEnableVertexAttribArrayARB (GLuint index)$/;"	f	file:
InitEndFragmentShaderATI	include/GL/glprocs.c	/^static void APIENTRY InitEndFragmentShaderATI (void)$/;"	f	file:
InitEndFrameTrackingI3D	include/GL/glprocs.c	/^static BOOL WINAPI InitEndFrameTrackingI3D (void)$/;"	f	file:
InitEndOcclusionQueryNV	include/GL/glprocs.c	/^static void APIENTRY InitEndOcclusionQueryNV (void)$/;"	f	file:
InitEndQuery	include/GL/glprocs.c	/^static void APIENTRY InitEndQuery (GLenum target)$/;"	f	file:
InitEndQueryARB	include/GL/glprocs.c	/^static void APIENTRY InitEndQueryARB (GLenum target)$/;"	f	file:
InitEndVertexShaderEXT	include/GL/glprocs.c	/^static void APIENTRY InitEndVertexShaderEXT (void)$/;"	f	file:
InitEvalMapsNV	include/GL/glprocs.c	/^static void APIENTRY InitEvalMapsNV (GLenum target, GLenum mode)$/;"	f	file:
InitExecuteProgramNV	include/GL/glprocs.c	/^static void APIENTRY InitExecuteProgramNV (GLenum target, GLuint id, const GLfloat *params)$/;"	f	file:
InitExtractComponentEXT	include/GL/glprocs.c	/^static void APIENTRY InitExtractComponentEXT (GLuint res, GLuint src, GLuint num)$/;"	f	file:
InitFinalCombinerInputNV	include/GL/glprocs.c	/^static void APIENTRY InitFinalCombinerInputNV (GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage)$/;"	f	file:
InitFinishAsyncSGIX	include/GL/glprocs.c	/^static GLint APIENTRY InitFinishAsyncSGIX (GLuint *markerp)$/;"	f	file:
InitFinishFenceAPPLE	include/GL/glprocs.c	/^static void APIENTRY InitFinishFenceAPPLE (GLuint fence)$/;"	f	file:
InitFinishFenceNV	include/GL/glprocs.c	/^static void APIENTRY InitFinishFenceNV (GLuint fence)$/;"	f	file:
InitFinishObjectAPPLE	include/GL/glprocs.c	/^static void APIENTRY InitFinishObjectAPPLE (GLenum object, GLint name)$/;"	f	file:
InitFinishTextureSUNX	include/GL/glprocs.c	/^static void APIENTRY InitFinishTextureSUNX (void)$/;"	f	file:
InitFlushPixelDataRangeNV	include/GL/glprocs.c	/^static void APIENTRY InitFlushPixelDataRangeNV (GLenum target)$/;"	f	file:
InitFlushRasterSGIX	include/GL/glprocs.c	/^static void APIENTRY InitFlushRasterSGIX (void)$/;"	f	file:
InitFlushVertexArrayRangeAPPLE	include/GL/glprocs.c	/^static void APIENTRY InitFlushVertexArrayRangeAPPLE (GLsizei length, GLvoid *pointer)$/;"	f	file:
InitFlushVertexArrayRangeNV	include/GL/glprocs.c	/^static void APIENTRY InitFlushVertexArrayRangeNV (void)$/;"	f	file:
InitFogCoordPointer	include/GL/glprocs.c	/^static void APIENTRY InitFogCoordPointer (GLenum type, GLsizei stride, const GLvoid *pointer)$/;"	f	file:
InitFogCoordPointerEXT	include/GL/glprocs.c	/^static void APIENTRY InitFogCoordPointerEXT (GLenum type, GLsizei stride, const GLvoid *pointer)$/;"	f	file:
InitFogCoordPointerListIBM	include/GL/glprocs.c	/^static void APIENTRY InitFogCoordPointerListIBM (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride)$/;"	f	file:
InitFogCoordd	include/GL/glprocs.c	/^static void APIENTRY InitFogCoordd (GLdouble coord)$/;"	f	file:
InitFogCoorddEXT	include/GL/glprocs.c	/^static void APIENTRY InitFogCoorddEXT (GLdouble coord)$/;"	f	file:
InitFogCoorddv	include/GL/glprocs.c	/^static void APIENTRY InitFogCoorddv (const GLdouble *coord)$/;"	f	file:
InitFogCoorddvEXT	include/GL/glprocs.c	/^static void APIENTRY InitFogCoorddvEXT (const GLdouble *coord)$/;"	f	file:
InitFogCoordf	include/GL/glprocs.c	/^static void APIENTRY InitFogCoordf (GLfloat coord)$/;"	f	file:
InitFogCoordfEXT	include/GL/glprocs.c	/^static void APIENTRY InitFogCoordfEXT (GLfloat coord)$/;"	f	file:
InitFogCoordfv	include/GL/glprocs.c	/^static void APIENTRY InitFogCoordfv (const GLfloat *coord)$/;"	f	file:
InitFogCoordfvEXT	include/GL/glprocs.c	/^static void APIENTRY InitFogCoordfvEXT (const GLfloat *coord)$/;"	f	file:
InitFogCoordhNV	include/GL/glprocs.c	/^static void APIENTRY InitFogCoordhNV (GLhalfNV fog)$/;"	f	file:
InitFogCoordhvNV	include/GL/glprocs.c	/^static void APIENTRY InitFogCoordhvNV (const GLhalfNV *fog)$/;"	f	file:
InitFogFuncSGIS	include/GL/glprocs.c	/^static void APIENTRY InitFogFuncSGIS (GLsizei n, const GLfloat *points)$/;"	f	file:
InitFragmentColorMaterialSGIX	include/GL/glprocs.c	/^static void APIENTRY InitFragmentColorMaterialSGIX (GLenum face, GLenum mode)$/;"	f	file:
InitFragmentLightModelfSGIX	include/GL/glprocs.c	/^static void APIENTRY InitFragmentLightModelfSGIX (GLenum pname, GLfloat param)$/;"	f	file:
InitFragmentLightModelfvSGIX	include/GL/glprocs.c	/^static void APIENTRY InitFragmentLightModelfvSGIX (GLenum pname, const GLfloat *params)$/;"	f	file:
InitFragmentLightModeliSGIX	include/GL/glprocs.c	/^static void APIENTRY InitFragmentLightModeliSGIX (GLenum pname, GLint param)$/;"	f	file:
InitFragmentLightModelivSGIX	include/GL/glprocs.c	/^static void APIENTRY InitFragmentLightModelivSGIX (GLenum pname, const GLint *params)$/;"	f	file:
InitFragmentLightfSGIX	include/GL/glprocs.c	/^static void APIENTRY InitFragmentLightfSGIX (GLenum light, GLenum pname, GLfloat param)$/;"	f	file:
InitFragmentLightfvSGIX	include/GL/glprocs.c	/^static void APIENTRY InitFragmentLightfvSGIX (GLenum light, GLenum pname, const GLfloat *params)$/;"	f	file:
InitFragmentLightiSGIX	include/GL/glprocs.c	/^static void APIENTRY InitFragmentLightiSGIX (GLenum light, GLenum pname, GLint param)$/;"	f	file:
InitFragmentLightivSGIX	include/GL/glprocs.c	/^static void APIENTRY InitFragmentLightivSGIX (GLenum light, GLenum pname, const GLint *params)$/;"	f	file:
InitFragmentMaterialfSGIX	include/GL/glprocs.c	/^static void APIENTRY InitFragmentMaterialfSGIX (GLenum face, GLenum pname, GLfloat param)$/;"	f	file:
InitFragmentMaterialfvSGIX	include/GL/glprocs.c	/^static void APIENTRY InitFragmentMaterialfvSGIX (GLenum face, GLenum pname, const GLfloat *params)$/;"	f	file:
InitFragmentMaterialiSGIX	include/GL/glprocs.c	/^static void APIENTRY InitFragmentMaterialiSGIX (GLenum face, GLenum pname, GLint param)$/;"	f	file:
InitFragmentMaterialivSGIX	include/GL/glprocs.c	/^static void APIENTRY InitFragmentMaterialivSGIX (GLenum face, GLenum pname, const GLint *params)$/;"	f	file:
InitFrameZoomSGIX	include/GL/glprocs.c	/^static void APIENTRY InitFrameZoomSGIX (GLint factor)$/;"	f	file:
InitFreeMemoryNV	include/GL/glprocs.c	/^static void WINAPI InitFreeMemoryNV (void)$/;"	f	file:
InitFreeObjectBufferATI	include/GL/glprocs.c	/^static void APIENTRY InitFreeObjectBufferATI (GLuint buffer)$/;"	f	file:
InitGenAsyncMarkersSGIX	include/GL/glprocs.c	/^static GLuint APIENTRY InitGenAsyncMarkersSGIX (GLsizei range)$/;"	f	file:
InitGenBuffers	include/GL/glprocs.c	/^static void APIENTRY InitGenBuffers (GLsizei n, GLuint *buffers)$/;"	f	file:
InitGenBuffersARB	include/GL/glprocs.c	/^static void APIENTRY InitGenBuffersARB (GLsizei n, GLuint *buffers)$/;"	f	file:
InitGenFencesAPPLE	include/GL/glprocs.c	/^static void APIENTRY InitGenFencesAPPLE (GLsizei n, GLuint *fences)$/;"	f	file:
InitGenFencesNV	include/GL/glprocs.c	/^static void APIENTRY InitGenFencesNV (GLsizei n, GLuint *fences)$/;"	f	file:
InitGenFragmentShadersATI	include/GL/glprocs.c	/^static GLuint APIENTRY InitGenFragmentShadersATI (GLuint range)$/;"	f	file:
InitGenOcclusionQueriesNV	include/GL/glprocs.c	/^static void APIENTRY InitGenOcclusionQueriesNV (GLsizei n, GLuint *ids)$/;"	f	file:
InitGenProgramsARB	include/GL/glprocs.c	/^static void APIENTRY InitGenProgramsARB (GLsizei n, GLuint *programs)$/;"	f	file:
InitGenProgramsNV	include/GL/glprocs.c	/^static void APIENTRY InitGenProgramsNV (GLsizei n, GLuint *programs)$/;"	f	file:
InitGenQueries	include/GL/glprocs.c	/^static void APIENTRY InitGenQueries (GLsizei n, GLuint *ids)$/;"	f	file:
InitGenQueriesARB	include/GL/glprocs.c	/^static void APIENTRY InitGenQueriesARB (GLsizei n, GLuint *ids)$/;"	f	file:
InitGenSymbolsEXT	include/GL/glprocs.c	/^static GLuint APIENTRY InitGenSymbolsEXT (GLenum datatype, GLenum storagetype, GLenum range, GLuint components)$/;"	f	file:
InitGenTexturesEXT	include/GL/glprocs.c	/^static void APIENTRY InitGenTexturesEXT (GLsizei n, GLuint *textures)$/;"	f	file:
InitGenVertexArraysAPPLE	include/GL/glprocs.c	/^static void APIENTRY InitGenVertexArraysAPPLE (GLsizei n, const GLuint *arrays)$/;"	f	file:
InitGenVertexShadersEXT	include/GL/glprocs.c	/^static GLuint APIENTRY InitGenVertexShadersEXT (GLuint range)$/;"	f	file:
InitGenlockSampleRateI3D	include/GL/glprocs.c	/^static BOOL WINAPI InitGenlockSampleRateI3D (HDC hDC, UINT uRate)$/;"	f	file:
InitGenlockSourceDelayI3D	include/GL/glprocs.c	/^static BOOL WINAPI InitGenlockSourceDelayI3D (HDC hDC, UINT uDelay)$/;"	f	file:
InitGenlockSourceEdgeI3D	include/GL/glprocs.c	/^static BOOL WINAPI InitGenlockSourceEdgeI3D (HDC hDC, UINT uEdge)$/;"	f	file:
InitGenlockSourceI3D	include/GL/glprocs.c	/^static BOOL WINAPI InitGenlockSourceI3D (HDC hDC, UINT uSource)$/;"	f	file:
InitGetActiveAttribARB	include/GL/glprocs.c	/^static void APIENTRY InitGetActiveAttribARB (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name)$/;"	f	file:
InitGetActiveUniformARB	include/GL/glprocs.c	/^static void APIENTRY InitGetActiveUniformARB (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name)$/;"	f	file:
InitGetArrayObjectfvATI	include/GL/glprocs.c	/^static void APIENTRY InitGetArrayObjectfvATI (GLenum array, GLenum pname, GLfloat *params)$/;"	f	file:
InitGetArrayObjectivATI	include/GL/glprocs.c	/^static void APIENTRY InitGetArrayObjectivATI (GLenum array, GLenum pname, GLint *params)$/;"	f	file:
InitGetAttachedObjectsARB	include/GL/glprocs.c	/^static void APIENTRY InitGetAttachedObjectsARB (GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj)$/;"	f	file:
InitGetAttribLocationARB	include/GL/glprocs.c	/^static GLint APIENTRY InitGetAttribLocationARB (GLhandleARB programObj, const GLcharARB *name)$/;"	f	file:
InitGetBufferParameteriv	include/GL/glprocs.c	/^static void APIENTRY InitGetBufferParameteriv (GLenum target, GLenum pname, GLint *params)$/;"	f	file:
InitGetBufferParameterivARB	include/GL/glprocs.c	/^static void APIENTRY InitGetBufferParameterivARB (GLenum target, GLenum pname, GLint *params)$/;"	f	file:
InitGetBufferPointerv	include/GL/glprocs.c	/^static void APIENTRY InitGetBufferPointerv (GLenum target, GLenum pname, GLvoid* *params)$/;"	f	file:
InitGetBufferPointervARB	include/GL/glprocs.c	/^static void APIENTRY InitGetBufferPointervARB (GLenum target, GLenum pname, GLvoid* *params)$/;"	f	file:
InitGetBufferSubData	include/GL/glprocs.c	/^static void APIENTRY InitGetBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, GLvoid *data)$/;"	f	file:
InitGetBufferSubDataARB	include/GL/glprocs.c	/^static void APIENTRY InitGetBufferSubDataARB (GLenum target, GLintptrARB offset, GLsizeiptrARB size, GLvoid *data)$/;"	f	file:
InitGetColorTable	include/GL/glprocs.c	/^static void APIENTRY InitGetColorTable (GLenum target, GLenum format, GLenum type, GLvoid *table)$/;"	f	file:
InitGetColorTableEXT	include/GL/glprocs.c	/^static void APIENTRY InitGetColorTableEXT (GLenum target, GLenum format, GLenum type, GLvoid *data)$/;"	f	file:
InitGetColorTableParameterfv	include/GL/glprocs.c	/^static void APIENTRY InitGetColorTableParameterfv (GLenum target, GLenum pname, GLfloat *params)$/;"	f	file:
InitGetColorTableParameterfvEXT	include/GL/glprocs.c	/^static void APIENTRY InitGetColorTableParameterfvEXT (GLenum target, GLenum pname, GLfloat *params)$/;"	f	file:
InitGetColorTableParameterfvSGI	include/GL/glprocs.c	/^static void APIENTRY InitGetColorTableParameterfvSGI (GLenum target, GLenum pname, GLfloat *params)$/;"	f	file:
InitGetColorTableParameteriv	include/GL/glprocs.c	/^static void APIENTRY InitGetColorTableParameteriv (GLenum target, GLenum pname, GLint *params)$/;"	f	file:
InitGetColorTableParameterivEXT	include/GL/glprocs.c	/^static void APIENTRY InitGetColorTableParameterivEXT (GLenum target, GLenum pname, GLint *params)$/;"	f	file:
InitGetColorTableParameterivSGI	include/GL/glprocs.c	/^static void APIENTRY InitGetColorTableParameterivSGI (GLenum target, GLenum pname, GLint *params)$/;"	f	file:
InitGetColorTableSGI	include/GL/glprocs.c	/^static void APIENTRY InitGetColorTableSGI (GLenum target, GLenum format, GLenum type, GLvoid *table)$/;"	f	file:
InitGetCombinerInputParameterfvNV	include/GL/glprocs.c	/^static void APIENTRY InitGetCombinerInputParameterfvNV (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params)$/;"	f	file:
InitGetCombinerInputParameterivNV	include/GL/glprocs.c	/^static void APIENTRY InitGetCombinerInputParameterivNV (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params)$/;"	f	file:
InitGetCombinerOutputParameterfvNV	include/GL/glprocs.c	/^static void APIENTRY InitGetCombinerOutputParameterfvNV (GLenum stage, GLenum portion, GLenum pname, GLfloat *params)$/;"	f	file:
InitGetCombinerOutputParameterivNV	include/GL/glprocs.c	/^static void APIENTRY InitGetCombinerOutputParameterivNV (GLenum stage, GLenum portion, GLenum pname, GLint *params)$/;"	f	file:
InitGetCombinerStageParameterfvNV	include/GL/glprocs.c	/^static void APIENTRY InitGetCombinerStageParameterfvNV (GLenum stage, GLenum pname, GLfloat *params)$/;"	f	file:
InitGetCompressedTexImage	include/GL/glprocs.c	/^static void APIENTRY InitGetCompressedTexImage (GLenum target, GLint level, GLvoid *img)$/;"	f	file:
InitGetCompressedTexImageARB	include/GL/glprocs.c	/^static void APIENTRY InitGetCompressedTexImageARB (GLenum target, GLint level, GLvoid *img)$/;"	f	file:
InitGetConvolutionFilter	include/GL/glprocs.c	/^static void APIENTRY InitGetConvolutionFilter (GLenum target, GLenum format, GLenum type, GLvoid *image)$/;"	f	file:
InitGetConvolutionFilterEXT	include/GL/glprocs.c	/^static void APIENTRY InitGetConvolutionFilterEXT (GLenum target, GLenum format, GLenum type, GLvoid *image)$/;"	f	file:
InitGetConvolutionParameterfv	include/GL/glprocs.c	/^static void APIENTRY InitGetConvolutionParameterfv (GLenum target, GLenum pname, GLfloat *params)$/;"	f	file:
InitGetConvolutionParameterfvEXT	include/GL/glprocs.c	/^static void APIENTRY InitGetConvolutionParameterfvEXT (GLenum target, GLenum pname, GLfloat *params)$/;"	f	file:
InitGetConvolutionParameteriv	include/GL/glprocs.c	/^static void APIENTRY InitGetConvolutionParameteriv (GLenum target, GLenum pname, GLint *params)$/;"	f	file:
InitGetConvolutionParameterivEXT	include/GL/glprocs.c	/^static void APIENTRY InitGetConvolutionParameterivEXT (GLenum target, GLenum pname, GLint *params)$/;"	f	file:
InitGetCurrentReadDCARB	include/GL/glprocs.c	/^static HDC WINAPI InitGetCurrentReadDCARB (void)$/;"	f	file:
InitGetCurrentReadDCEXT	include/GL/glprocs.c	/^static HDC WINAPI InitGetCurrentReadDCEXT (void)$/;"	f	file:
InitGetDetailTexFuncSGIS	include/GL/glprocs.c	/^static void APIENTRY InitGetDetailTexFuncSGIS (GLenum target, GLfloat *points)$/;"	f	file:
InitGetDigitalVideoParametersI3D	include/GL/glprocs.c	/^static BOOL WINAPI InitGetDigitalVideoParametersI3D (HDC hDC, int iAttribute, int *piValue)$/;"	f	file:
InitGetExtensionsStringARB	include/GL/glprocs.c	/^static const WINAPI InitGetExtensionsStringARB (HDC hdc)$/;"	f	file:
InitGetExtensionsStringEXT	include/GL/glprocs.c	/^static const WINAPI InitGetExtensionsStringEXT (void)$/;"	f	file:
InitGetFenceivNV	include/GL/glprocs.c	/^static void APIENTRY InitGetFenceivNV (GLuint fence, GLenum pname, GLint *params)$/;"	f	file:
InitGetFinalCombinerInputParameterfvNV	include/GL/glprocs.c	/^static void APIENTRY InitGetFinalCombinerInputParameterfvNV (GLenum variable, GLenum pname, GLfloat *params)$/;"	f	file:
InitGetFinalCombinerInputParameterivNV	include/GL/glprocs.c	/^static void APIENTRY InitGetFinalCombinerInputParameterivNV (GLenum variable, GLenum pname, GLint *params)$/;"	f	file:
InitGetFogFuncSGIS	include/GL/glprocs.c	/^static void APIENTRY InitGetFogFuncSGIS (GLfloat *points)$/;"	f	file:
InitGetFragmentLightfvSGIX	include/GL/glprocs.c	/^static void APIENTRY InitGetFragmentLightfvSGIX (GLenum light, GLenum pname, GLfloat *params)$/;"	f	file:
InitGetFragmentLightivSGIX	include/GL/glprocs.c	/^static void APIENTRY InitGetFragmentLightivSGIX (GLenum light, GLenum pname, GLint *params)$/;"	f	file:
InitGetFragmentMaterialfvSGIX	include/GL/glprocs.c	/^static void APIENTRY InitGetFragmentMaterialfvSGIX (GLenum face, GLenum pname, GLfloat *params)$/;"	f	file:
InitGetFragmentMaterialivSGIX	include/GL/glprocs.c	/^static void APIENTRY InitGetFragmentMaterialivSGIX (GLenum face, GLenum pname, GLint *params)$/;"	f	file:
InitGetFrameUsageI3D	include/GL/glprocs.c	/^static BOOL WINAPI InitGetFrameUsageI3D (float *pUsage)$/;"	f	file:
InitGetGammaTableI3D	include/GL/glprocs.c	/^static BOOL WINAPI InitGetGammaTableI3D (HDC hDC, int iEntries, USHORT *puRed, USHORT *puGreen, USHORT *puBlue)$/;"	f	file:
InitGetGammaTableParametersI3D	include/GL/glprocs.c	/^static BOOL WINAPI InitGetGammaTableParametersI3D (HDC hDC, int iAttribute, int *piValue)$/;"	f	file:
InitGetGenlockSampleRateI3D	include/GL/glprocs.c	/^static BOOL WINAPI InitGetGenlockSampleRateI3D (HDC hDC, UINT *uRate)$/;"	f	file:
InitGetGenlockSourceDelayI3D	include/GL/glprocs.c	/^static BOOL WINAPI InitGetGenlockSourceDelayI3D (HDC hDC, UINT *uDelay)$/;"	f	file:
InitGetGenlockSourceEdgeI3D	include/GL/glprocs.c	/^static BOOL WINAPI InitGetGenlockSourceEdgeI3D (HDC hDC, UINT *uEdge)$/;"	f	file:
InitGetGenlockSourceI3D	include/GL/glprocs.c	/^static BOOL WINAPI InitGetGenlockSourceI3D (HDC hDC, UINT *uSource)$/;"	f	file:
InitGetHandleARB	include/GL/glprocs.c	/^static GLhandleARB APIENTRY InitGetHandleARB (GLenum pname)$/;"	f	file:
InitGetHistogram	include/GL/glprocs.c	/^static void APIENTRY InitGetHistogram (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values)$/;"	f	file:
InitGetHistogramEXT	include/GL/glprocs.c	/^static void APIENTRY InitGetHistogramEXT (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values)$/;"	f	file:
InitGetHistogramParameterfv	include/GL/glprocs.c	/^static void APIENTRY InitGetHistogramParameterfv (GLenum target, GLenum pname, GLfloat *params)$/;"	f	file:
InitGetHistogramParameterfvEXT	include/GL/glprocs.c	/^static void APIENTRY InitGetHistogramParameterfvEXT (GLenum target, GLenum pname, GLfloat *params)$/;"	f	file:
InitGetHistogramParameteriv	include/GL/glprocs.c	/^static void APIENTRY InitGetHistogramParameteriv (GLenum target, GLenum pname, GLint *params)$/;"	f	file:
InitGetHistogramParameterivEXT	include/GL/glprocs.c	/^static void APIENTRY InitGetHistogramParameterivEXT (GLenum target, GLenum pname, GLint *params)$/;"	f	file:
InitGetImageTransformParameterfvHP	include/GL/glprocs.c	/^static void APIENTRY InitGetImageTransformParameterfvHP (GLenum target, GLenum pname, GLfloat *params)$/;"	f	file:
InitGetImageTransformParameterivHP	include/GL/glprocs.c	/^static void APIENTRY InitGetImageTransformParameterivHP (GLenum target, GLenum pname, GLint *params)$/;"	f	file:
InitGetInfoLogARB	include/GL/glprocs.c	/^static void APIENTRY InitGetInfoLogARB (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog)$/;"	f	file:
InitGetInstrumentsSGIX	include/GL/glprocs.c	/^static GLint APIENTRY InitGetInstrumentsSGIX (void)$/;"	f	file:
InitGetInvariantBooleanvEXT	include/GL/glprocs.c	/^static void APIENTRY InitGetInvariantBooleanvEXT (GLuint id, GLenum value, GLboolean *data)$/;"	f	file:
InitGetInvariantFloatvEXT	include/GL/glprocs.c	/^static void APIENTRY InitGetInvariantFloatvEXT (GLuint id, GLenum value, GLfloat *data)$/;"	f	file:
InitGetInvariantIntegervEXT	include/GL/glprocs.c	/^static void APIENTRY InitGetInvariantIntegervEXT (GLuint id, GLenum value, GLint *data)$/;"	f	file:
InitGetListParameterfvSGIX	include/GL/glprocs.c	/^static void APIENTRY InitGetListParameterfvSGIX (GLuint list, GLenum pname, GLfloat *params)$/;"	f	file:
InitGetListParameterivSGIX	include/GL/glprocs.c	/^static void APIENTRY InitGetListParameterivSGIX (GLuint list, GLenum pname, GLint *params)$/;"	f	file:
InitGetLocalConstantBooleanvEXT	include/GL/glprocs.c	/^static void APIENTRY InitGetLocalConstantBooleanvEXT (GLuint id, GLenum value, GLboolean *data)$/;"	f	file:
InitGetLocalConstantFloatvEXT	include/GL/glprocs.c	/^static void APIENTRY InitGetLocalConstantFloatvEXT (GLuint id, GLenum value, GLfloat *data)$/;"	f	file:
InitGetLocalConstantIntegervEXT	include/GL/glprocs.c	/^static void APIENTRY InitGetLocalConstantIntegervEXT (GLuint id, GLenum value, GLint *data)$/;"	f	file:
InitGetMapAttribParameterfvNV	include/GL/glprocs.c	/^static void APIENTRY InitGetMapAttribParameterfvNV (GLenum target, GLuint index, GLenum pname, GLfloat *params)$/;"	f	file:
InitGetMapAttribParameterivNV	include/GL/glprocs.c	/^static void APIENTRY InitGetMapAttribParameterivNV (GLenum target, GLuint index, GLenum pname, GLint *params)$/;"	f	file:
InitGetMapControlPointsNV	include/GL/glprocs.c	/^static void APIENTRY InitGetMapControlPointsNV (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, GLvoid *points)$/;"	f	file:
InitGetMapParameterfvNV	include/GL/glprocs.c	/^static void APIENTRY InitGetMapParameterfvNV (GLenum target, GLenum pname, GLfloat *params)$/;"	f	file:
InitGetMapParameterivNV	include/GL/glprocs.c	/^static void APIENTRY InitGetMapParameterivNV (GLenum target, GLenum pname, GLint *params)$/;"	f	file:
InitGetMinmax	include/GL/glprocs.c	/^static void APIENTRY InitGetMinmax (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values)$/;"	f	file:
InitGetMinmaxEXT	include/GL/glprocs.c	/^static void APIENTRY InitGetMinmaxEXT (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values)$/;"	f	file:
InitGetMinmaxParameterfv	include/GL/glprocs.c	/^static void APIENTRY InitGetMinmaxParameterfv (GLenum target, GLenum pname, GLfloat *params)$/;"	f	file:
InitGetMinmaxParameterfvEXT	include/GL/glprocs.c	/^static void APIENTRY InitGetMinmaxParameterfvEXT (GLenum target, GLenum pname, GLfloat *params)$/;"	f	file:
InitGetMinmaxParameteriv	include/GL/glprocs.c	/^static void APIENTRY InitGetMinmaxParameteriv (GLenum target, GLenum pname, GLint *params)$/;"	f	file:
InitGetMinmaxParameterivEXT	include/GL/glprocs.c	/^static void APIENTRY InitGetMinmaxParameterivEXT (GLenum target, GLenum pname, GLint *params)$/;"	f	file:
InitGetMscRateOML	include/GL/glprocs.c	/^static BOOL WINAPI InitGetMscRateOML (HDC hdc, INT32 *numerator, INT32 *denominator)$/;"	f	file:
InitGetObjectBufferfvATI	include/GL/glprocs.c	/^static void APIENTRY InitGetObjectBufferfvATI (GLuint buffer, GLenum pname, GLfloat *params)$/;"	f	file:
InitGetObjectBufferivATI	include/GL/glprocs.c	/^static void APIENTRY InitGetObjectBufferivATI (GLuint buffer, GLenum pname, GLint *params)$/;"	f	file:
InitGetObjectParameterfvARB	include/GL/glprocs.c	/^static void APIENTRY InitGetObjectParameterfvARB (GLhandleARB obj, GLenum pname, GLfloat *params)$/;"	f	file:
InitGetObjectParameterivARB	include/GL/glprocs.c	/^static void APIENTRY InitGetObjectParameterivARB (GLhandleARB obj, GLenum pname, GLint *params)$/;"	f	file:
InitGetOcclusionQueryivNV	include/GL/glprocs.c	/^static void APIENTRY InitGetOcclusionQueryivNV (GLuint id, GLenum pname, GLint *params)$/;"	f	file:
InitGetOcclusionQueryuivNV	include/GL/glprocs.c	/^static void APIENTRY InitGetOcclusionQueryuivNV (GLuint id, GLenum pname, GLuint *params)$/;"	f	file:
InitGetPbufferDCARB	include/GL/glprocs.c	/^static HDC WINAPI InitGetPbufferDCARB (HPBUFFERARB hPbuffer)$/;"	f	file:
InitGetPbufferDCEXT	include/GL/glprocs.c	/^static HDC WINAPI InitGetPbufferDCEXT (HPBUFFEREXT hPbuffer)$/;"	f	file:
InitGetPixelFormatAttribfvARB	include/GL/glprocs.c	/^static BOOL WINAPI InitGetPixelFormatAttribfvARB (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, FLOAT *pfValues)$/;"	f	file:
InitGetPixelFormatAttribfvEXT	include/GL/glprocs.c	/^static BOOL WINAPI InitGetPixelFormatAttribfvEXT (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *piAttributes, FLOAT *pfValues)$/;"	f	file:
InitGetPixelFormatAttribivARB	include/GL/glprocs.c	/^static BOOL WINAPI InitGetPixelFormatAttribivARB (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, int *piValues)$/;"	f	file:
InitGetPixelFormatAttribivEXT	include/GL/glprocs.c	/^static BOOL WINAPI InitGetPixelFormatAttribivEXT (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *piAttributes, int *piValues)$/;"	f	file:
InitGetPixelTexGenParameterfvSGIS	include/GL/glprocs.c	/^static void APIENTRY InitGetPixelTexGenParameterfvSGIS (GLenum pname, GLfloat *params)$/;"	f	file:
InitGetPixelTexGenParameterivSGIS	include/GL/glprocs.c	/^static void APIENTRY InitGetPixelTexGenParameterivSGIS (GLenum pname, GLint *params)$/;"	f	file:
InitGetPointervEXT	include/GL/glprocs.c	/^static void APIENTRY InitGetPointervEXT (GLenum pname, GLvoid* *params)$/;"	f	file:
InitGetProgramEnvParameterdvARB	include/GL/glprocs.c	/^static void APIENTRY InitGetProgramEnvParameterdvARB (GLenum target, GLuint index, GLdouble *params)$/;"	f	file:
InitGetProgramEnvParameterfvARB	include/GL/glprocs.c	/^static void APIENTRY InitGetProgramEnvParameterfvARB (GLenum target, GLuint index, GLfloat *params)$/;"	f	file:
InitGetProgramLocalParameterdvARB	include/GL/glprocs.c	/^static void APIENTRY InitGetProgramLocalParameterdvARB (GLenum target, GLuint index, GLdouble *params)$/;"	f	file:
InitGetProgramLocalParameterfvARB	include/GL/glprocs.c	/^static void APIENTRY InitGetProgramLocalParameterfvARB (GLenum target, GLuint index, GLfloat *params)$/;"	f	file:
InitGetProgramNamedParameterdvNV	include/GL/glprocs.c	/^static void APIENTRY InitGetProgramNamedParameterdvNV (GLuint id, GLsizei len, const GLubyte *name, GLdouble *params)$/;"	f	file:
InitGetProgramNamedParameterfvNV	include/GL/glprocs.c	/^static void APIENTRY InitGetProgramNamedParameterfvNV (GLuint id, GLsizei len, const GLubyte *name, GLfloat *params)$/;"	f	file:
InitGetProgramParameterdvNV	include/GL/glprocs.c	/^static void APIENTRY InitGetProgramParameterdvNV (GLenum target, GLuint index, GLenum pname, GLdouble *params)$/;"	f	file:
InitGetProgramParameterfvNV	include/GL/glprocs.c	/^static void APIENTRY InitGetProgramParameterfvNV (GLenum target, GLuint index, GLenum pname, GLfloat *params)$/;"	f	file:
InitGetProgramStringARB	include/GL/glprocs.c	/^static void APIENTRY InitGetProgramStringARB (GLenum target, GLenum pname, GLvoid *string)$/;"	f	file:
InitGetProgramStringNV	include/GL/glprocs.c	/^static void APIENTRY InitGetProgramStringNV (GLuint id, GLenum pname, GLubyte *program)$/;"	f	file:
InitGetProgramivARB	include/GL/glprocs.c	/^static void APIENTRY InitGetProgramivARB (GLenum target, GLenum pname, GLint *params)$/;"	f	file:
InitGetProgramivNV	include/GL/glprocs.c	/^static void APIENTRY InitGetProgramivNV (GLuint id, GLenum pname, GLint *params)$/;"	f	file:
InitGetQueryObjectiv	include/GL/glprocs.c	/^static void APIENTRY InitGetQueryObjectiv (GLuint id, GLenum pname, GLint *params)$/;"	f	file:
InitGetQueryObjectivARB	include/GL/glprocs.c	/^static void APIENTRY InitGetQueryObjectivARB (GLuint id, GLenum pname, GLint *params)$/;"	f	file:
InitGetQueryObjectuiv	include/GL/glprocs.c	/^static void APIENTRY InitGetQueryObjectuiv (GLuint id, GLenum pname, GLuint *params)$/;"	f	file:
InitGetQueryObjectuivARB	include/GL/glprocs.c	/^static void APIENTRY InitGetQueryObjectuivARB (GLuint id, GLenum pname, GLuint *params)$/;"	f	file:
InitGetQueryiv	include/GL/glprocs.c	/^static void APIENTRY InitGetQueryiv (GLenum target, GLenum pname, GLint *params)$/;"	f	file:
InitGetQueryivARB	include/GL/glprocs.c	/^static void APIENTRY InitGetQueryivARB (GLenum target, GLenum pname, GLint *params)$/;"	f	file:
InitGetSeparableFilter	include/GL/glprocs.c	/^static void APIENTRY InitGetSeparableFilter (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span)$/;"	f	file:
InitGetSeparableFilterEXT	include/GL/glprocs.c	/^static void APIENTRY InitGetSeparableFilterEXT (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span)$/;"	f	file:
InitGetShaderSourceARB	include/GL/glprocs.c	/^static void APIENTRY InitGetShaderSourceARB (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source)$/;"	f	file:
InitGetSharpenTexFuncSGIS	include/GL/glprocs.c	/^static void APIENTRY InitGetSharpenTexFuncSGIS (GLenum target, GLfloat *points)$/;"	f	file:
InitGetSwapIntervalEXT	include/GL/glprocs.c	/^static int WINAPI InitGetSwapIntervalEXT (void)$/;"	f	file:
InitGetSyncValuesOML	include/GL/glprocs.c	/^static BOOL WINAPI InitGetSyncValuesOML (HDC hdc, INT64 *ust, INT64 *msc, INT64 *sbc)$/;"	f	file:
InitGetTexBumpParameterfvATI	include/GL/glprocs.c	/^static void APIENTRY InitGetTexBumpParameterfvATI (GLenum pname, GLfloat *param)$/;"	f	file:
InitGetTexBumpParameterivATI	include/GL/glprocs.c	/^static void APIENTRY InitGetTexBumpParameterivATI (GLenum pname, GLint *param)$/;"	f	file:
InitGetTexFilterFuncSGIS	include/GL/glprocs.c	/^static void APIENTRY InitGetTexFilterFuncSGIS (GLenum target, GLenum filter, GLfloat *weights)$/;"	f	file:
InitGetTrackMatrixivNV	include/GL/glprocs.c	/^static void APIENTRY InitGetTrackMatrixivNV (GLenum target, GLuint address, GLenum pname, GLint *params)$/;"	f	file:
InitGetUniformLocationARB	include/GL/glprocs.c	/^static GLint APIENTRY InitGetUniformLocationARB (GLhandleARB programObj, const GLcharARB *name)$/;"	f	file:
InitGetUniformfvARB	include/GL/glprocs.c	/^static void APIENTRY InitGetUniformfvARB (GLhandleARB programObj, GLint location, GLfloat *params)$/;"	f	file:
InitGetUniformivARB	include/GL/glprocs.c	/^static void APIENTRY InitGetUniformivARB (GLhandleARB programObj, GLint location, GLint *params)$/;"	f	file:
InitGetVariantArrayObjectfvATI	include/GL/glprocs.c	/^static void APIENTRY InitGetVariantArrayObjectfvATI (GLuint id, GLenum pname, GLfloat *params)$/;"	f	file:
InitGetVariantArrayObjectivATI	include/GL/glprocs.c	/^static void APIENTRY InitGetVariantArrayObjectivATI (GLuint id, GLenum pname, GLint *params)$/;"	f	file:
InitGetVariantBooleanvEXT	include/GL/glprocs.c	/^static void APIENTRY InitGetVariantBooleanvEXT (GLuint id, GLenum value, GLboolean *data)$/;"	f	file:
InitGetVariantFloatvEXT	include/GL/glprocs.c	/^static void APIENTRY InitGetVariantFloatvEXT (GLuint id, GLenum value, GLfloat *data)$/;"	f	file:
InitGetVariantIntegervEXT	include/GL/glprocs.c	/^static void APIENTRY InitGetVariantIntegervEXT (GLuint id, GLenum value, GLint *data)$/;"	f	file:
InitGetVariantPointervEXT	include/GL/glprocs.c	/^static void APIENTRY InitGetVariantPointervEXT (GLuint id, GLenum value, GLvoid* *data)$/;"	f	file:
InitGetVertexAttribArrayObjectfvATI	include/GL/glprocs.c	/^static void APIENTRY InitGetVertexAttribArrayObjectfvATI (GLuint index, GLenum pname, GLfloat *params)$/;"	f	file:
InitGetVertexAttribArrayObjectivATI	include/GL/glprocs.c	/^static void APIENTRY InitGetVertexAttribArrayObjectivATI (GLuint index, GLenum pname, GLint *params)$/;"	f	file:
InitGetVertexAttribPointervARB	include/GL/glprocs.c	/^static void APIENTRY InitGetVertexAttribPointervARB (GLuint index, GLenum pname, GLvoid* *pointer)$/;"	f	file:
InitGetVertexAttribPointervNV	include/GL/glprocs.c	/^static void APIENTRY InitGetVertexAttribPointervNV (GLuint index, GLenum pname, GLvoid* *pointer)$/;"	f	file:
InitGetVertexAttribdvARB	include/GL/glprocs.c	/^static void APIENTRY InitGetVertexAttribdvARB (GLuint index, GLenum pname, GLdouble *params)$/;"	f	file:
InitGetVertexAttribdvNV	include/GL/glprocs.c	/^static void APIENTRY InitGetVertexAttribdvNV (GLuint index, GLenum pname, GLdouble *params)$/;"	f	file:
InitGetVertexAttribfvARB	include/GL/glprocs.c	/^static void APIENTRY InitGetVertexAttribfvARB (GLuint index, GLenum pname, GLfloat *params)$/;"	f	file:
InitGetVertexAttribfvNV	include/GL/glprocs.c	/^static void APIENTRY InitGetVertexAttribfvNV (GLuint index, GLenum pname, GLfloat *params)$/;"	f	file:
InitGetVertexAttribivARB	include/GL/glprocs.c	/^static void APIENTRY InitGetVertexAttribivARB (GLuint index, GLenum pname, GLint *params)$/;"	f	file:
InitGetVertexAttribivNV	include/GL/glprocs.c	/^static void APIENTRY InitGetVertexAttribivNV (GLuint index, GLenum pname, GLint *params)$/;"	f	file:
InitGlobalAlphaFactorbSUN	include/GL/glprocs.c	/^static void APIENTRY InitGlobalAlphaFactorbSUN (GLbyte factor)$/;"	f	file:
InitGlobalAlphaFactordSUN	include/GL/glprocs.c	/^static void APIENTRY InitGlobalAlphaFactordSUN (GLdouble factor)$/;"	f	file:
InitGlobalAlphaFactorfSUN	include/GL/glprocs.c	/^static void APIENTRY InitGlobalAlphaFactorfSUN (GLfloat factor)$/;"	f	file:
InitGlobalAlphaFactoriSUN	include/GL/glprocs.c	/^static void APIENTRY InitGlobalAlphaFactoriSUN (GLint factor)$/;"	f	file:
InitGlobalAlphaFactorsSUN	include/GL/glprocs.c	/^static void APIENTRY InitGlobalAlphaFactorsSUN (GLshort factor)$/;"	f	file:
InitGlobalAlphaFactorubSUN	include/GL/glprocs.c	/^static void APIENTRY InitGlobalAlphaFactorubSUN (GLubyte factor)$/;"	f	file:
InitGlobalAlphaFactoruiSUN	include/GL/glprocs.c	/^static void APIENTRY InitGlobalAlphaFactoruiSUN (GLuint factor)$/;"	f	file:
InitGlobalAlphaFactorusSUN	include/GL/glprocs.c	/^static void APIENTRY InitGlobalAlphaFactorusSUN (GLushort factor)$/;"	f	file:
InitHintPGI	include/GL/glprocs.c	/^static void APIENTRY InitHintPGI (GLenum target, GLint mode)$/;"	f	file:
InitHistogram	include/GL/glprocs.c	/^static void APIENTRY InitHistogram (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink)$/;"	f	file:
InitHistogramEXT	include/GL/glprocs.c	/^static void APIENTRY InitHistogramEXT (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink)$/;"	f	file:
InitIglooInterfaceSGIX	include/GL/glprocs.c	/^static void APIENTRY InitIglooInterfaceSGIX (GLenum pname, const GLvoid *params)$/;"	f	file:
InitImageTransformParameterfHP	include/GL/glprocs.c	/^static void APIENTRY InitImageTransformParameterfHP (GLenum target, GLenum pname, GLfloat param)$/;"	f	file:
InitImageTransformParameterfvHP	include/GL/glprocs.c	/^static void APIENTRY InitImageTransformParameterfvHP (GLenum target, GLenum pname, const GLfloat *params)$/;"	f	file:
InitImageTransformParameteriHP	include/GL/glprocs.c	/^static void APIENTRY InitImageTransformParameteriHP (GLenum target, GLenum pname, GLint param)$/;"	f	file:
InitImageTransformParameterivHP	include/GL/glprocs.c	/^static void APIENTRY InitImageTransformParameterivHP (GLenum target, GLenum pname, const GLint *params)$/;"	f	file:
InitIndexFuncEXT	include/GL/glprocs.c	/^static void APIENTRY InitIndexFuncEXT (GLenum func, GLclampf ref)$/;"	f	file:
InitIndexMaterialEXT	include/GL/glprocs.c	/^static void APIENTRY InitIndexMaterialEXT (GLenum face, GLenum mode)$/;"	f	file:
InitIndexPointerEXT	include/GL/glprocs.c	/^static void APIENTRY InitIndexPointerEXT (GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer)$/;"	f	file:
InitIndexPointerListIBM	include/GL/glprocs.c	/^static void APIENTRY InitIndexPointerListIBM (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride)$/;"	f	file:
InitInsertComponentEXT	include/GL/glprocs.c	/^static void APIENTRY InitInsertComponentEXT (GLuint res, GLuint src, GLuint num)$/;"	f	file:
InitInstrumentsBufferSGIX	include/GL/glprocs.c	/^static void APIENTRY InitInstrumentsBufferSGIX (GLsizei size, GLint *buffer)$/;"	f	file:
InitIsAsyncMarkerSGIX	include/GL/glprocs.c	/^static GLboolean APIENTRY InitIsAsyncMarkerSGIX (GLuint marker)$/;"	f	file:
InitIsBuffer	include/GL/glprocs.c	/^static GLboolean APIENTRY InitIsBuffer (GLuint buffer)$/;"	f	file:
InitIsBufferARB	include/GL/glprocs.c	/^static GLboolean APIENTRY InitIsBufferARB (GLuint buffer)$/;"	f	file:
InitIsEnabledFrameLockI3D	include/GL/glprocs.c	/^static BOOL WINAPI InitIsEnabledFrameLockI3D (BOOL *pFlag)$/;"	f	file:
InitIsEnabledGenlockI3D	include/GL/glprocs.c	/^static BOOL WINAPI InitIsEnabledGenlockI3D (HDC hDC, BOOL *pFlag)$/;"	f	file:
InitIsFenceAPPLE	include/GL/glprocs.c	/^static GLboolean APIENTRY InitIsFenceAPPLE (GLuint fence)$/;"	f	file:
InitIsFenceNV	include/GL/glprocs.c	/^static GLboolean APIENTRY InitIsFenceNV (GLuint fence)$/;"	f	file:
InitIsObjectBufferATI	include/GL/glprocs.c	/^static GLboolean APIENTRY InitIsObjectBufferATI (GLuint buffer)$/;"	f	file:
InitIsOcclusionQueryNV	include/GL/glprocs.c	/^static GLboolean APIENTRY InitIsOcclusionQueryNV (GLuint id)$/;"	f	file:
InitIsProgramARB	include/GL/glprocs.c	/^static GLboolean APIENTRY InitIsProgramARB (GLuint program)$/;"	f	file:
InitIsProgramNV	include/GL/glprocs.c	/^static GLboolean APIENTRY InitIsProgramNV (GLuint id)$/;"	f	file:
InitIsQuery	include/GL/glprocs.c	/^static GLboolean APIENTRY InitIsQuery (GLuint id)$/;"	f	file:
InitIsQueryARB	include/GL/glprocs.c	/^static GLboolean APIENTRY InitIsQueryARB (GLuint id)$/;"	f	file:
InitIsTextureEXT	include/GL/glprocs.c	/^static GLboolean APIENTRY InitIsTextureEXT (GLuint texture)$/;"	f	file:
InitIsVariantEnabledEXT	include/GL/glprocs.c	/^static GLboolean APIENTRY InitIsVariantEnabledEXT (GLuint id, GLenum cap)$/;"	f	file:
InitIsVertexArrayAPPLE	include/GL/glprocs.c	/^static GLboolean APIENTRY InitIsVertexArrayAPPLE (GLuint array)$/;"	f	file:
InitLightEnviSGIX	include/GL/glprocs.c	/^static void APIENTRY InitLightEnviSGIX (GLenum pname, GLint param)$/;"	f	file:
InitLinkProgramARB	include/GL/glprocs.c	/^static void APIENTRY InitLinkProgramARB (GLhandleARB programObj)$/;"	f	file:
InitListParameterfSGIX	include/GL/glprocs.c	/^static void APIENTRY InitListParameterfSGIX (GLuint list, GLenum pname, GLfloat param)$/;"	f	file:
InitListParameterfvSGIX	include/GL/glprocs.c	/^static void APIENTRY InitListParameterfvSGIX (GLuint list, GLenum pname, const GLfloat *params)$/;"	f	file:
InitListParameteriSGIX	include/GL/glprocs.c	/^static void APIENTRY InitListParameteriSGIX (GLuint list, GLenum pname, GLint param)$/;"	f	file:
InitListParameterivSGIX	include/GL/glprocs.c	/^static void APIENTRY InitListParameterivSGIX (GLuint list, GLenum pname, const GLint *params)$/;"	f	file:
InitLoadDisplayColorTableEXT	include/GL/glprocs.c	/^static GLboolean WINAPI InitLoadDisplayColorTableEXT (const GLushort *table, GLuint length)$/;"	f	file:
InitLoadIdentityDeformationMapSGIX	include/GL/glprocs.c	/^static void APIENTRY InitLoadIdentityDeformationMapSGIX (GLbitfield mask)$/;"	f	file:
InitLoadProgramNV	include/GL/glprocs.c	/^static void APIENTRY InitLoadProgramNV (GLenum target, GLuint id, GLsizei len, const GLubyte *program)$/;"	f	file:
InitLoadTransposeMatrixd	include/GL/glprocs.c	/^static void APIENTRY InitLoadTransposeMatrixd (const GLdouble *m)$/;"	f	file:
InitLoadTransposeMatrixdARB	include/GL/glprocs.c	/^static void APIENTRY InitLoadTransposeMatrixdARB (const GLdouble *m)$/;"	f	file:
InitLoadTransposeMatrixf	include/GL/glprocs.c	/^static void APIENTRY InitLoadTransposeMatrixf (const GLfloat *m)$/;"	f	file:
InitLoadTransposeMatrixfARB	include/GL/glprocs.c	/^static void APIENTRY InitLoadTransposeMatrixfARB (const GLfloat *m)$/;"	f	file:
InitLockArraysEXT	include/GL/glprocs.c	/^static void APIENTRY InitLockArraysEXT (GLint first, GLsizei count)$/;"	f	file:
InitMakeContextCurrentARB	include/GL/glprocs.c	/^static BOOL WINAPI InitMakeContextCurrentARB (HDC hDrawDC, HDC hReadDC, HGLRC hglrc)$/;"	f	file:
InitMakeContextCurrentEXT	include/GL/glprocs.c	/^static BOOL WINAPI InitMakeContextCurrentEXT (HDC hDrawDC, HDC hReadDC, HGLRC hglrc)$/;"	f	file:
InitMapBuffer	include/GL/glprocs.c	/^static GLvoid* APIENTRY InitMapBuffer (GLenum target, GLenum access)$/;"	f	file:
InitMapBufferARB	include/GL/glprocs.c	/^static GLvoid* APIENTRY InitMapBufferARB (GLenum target, GLenum access)$/;"	f	file:
InitMapControlPointsNV	include/GL/glprocs.c	/^static void APIENTRY InitMapControlPointsNV (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const GLvoid *points)$/;"	f	file:
InitMapObjectBufferATI	include/GL/glprocs.c	/^static GLvoid* APIENTRY InitMapObjectBufferATI (GLuint buffer)$/;"	f	file:
InitMapParameterfvNV	include/GL/glprocs.c	/^static void APIENTRY InitMapParameterfvNV (GLenum target, GLenum pname, const GLfloat *params)$/;"	f	file:
InitMapParameterivNV	include/GL/glprocs.c	/^static void APIENTRY InitMapParameterivNV (GLenum target, GLenum pname, const GLint *params)$/;"	f	file:
InitMatrixIndexPointerARB	include/GL/glprocs.c	/^static void APIENTRY InitMatrixIndexPointerARB (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)$/;"	f	file:
InitMatrixIndexubvARB	include/GL/glprocs.c	/^static void APIENTRY InitMatrixIndexubvARB (GLint size, const GLubyte *indices)$/;"	f	file:
InitMatrixIndexuivARB	include/GL/glprocs.c	/^static void APIENTRY InitMatrixIndexuivARB (GLint size, const GLuint *indices)$/;"	f	file:
InitMatrixIndexusvARB	include/GL/glprocs.c	/^static void APIENTRY InitMatrixIndexusvARB (GLint size, const GLushort *indices)$/;"	f	file:
InitMinmax	include/GL/glprocs.c	/^static void APIENTRY InitMinmax (GLenum target, GLenum internalformat, GLboolean sink)$/;"	f	file:
InitMinmaxEXT	include/GL/glprocs.c	/^static void APIENTRY InitMinmaxEXT (GLenum target, GLenum internalformat, GLboolean sink)$/;"	f	file:
InitMultTransposeMatrixd	include/GL/glprocs.c	/^static void APIENTRY InitMultTransposeMatrixd (const GLdouble *m)$/;"	f	file:
InitMultTransposeMatrixdARB	include/GL/glprocs.c	/^static void APIENTRY InitMultTransposeMatrixdARB (const GLdouble *m)$/;"	f	file:
InitMultTransposeMatrixf	include/GL/glprocs.c	/^static void APIENTRY InitMultTransposeMatrixf (const GLfloat *m)$/;"	f	file:
InitMultTransposeMatrixfARB	include/GL/glprocs.c	/^static void APIENTRY InitMultTransposeMatrixfARB (const GLfloat *m)$/;"	f	file:
InitMultiDrawArrays	include/GL/glprocs.c	/^static void APIENTRY InitMultiDrawArrays (GLenum mode, GLint *first, GLsizei *count, GLsizei primcount)$/;"	f	file:
InitMultiDrawArraysEXT	include/GL/glprocs.c	/^static void APIENTRY InitMultiDrawArraysEXT (GLenum mode, GLint *first, GLsizei *count, GLsizei primcount)$/;"	f	file:
InitMultiDrawElementArrayAPPLE	include/GL/glprocs.c	/^static void APIENTRY InitMultiDrawElementArrayAPPLE (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount)$/;"	f	file:
InitMultiDrawElements	include/GL/glprocs.c	/^static void APIENTRY InitMultiDrawElements (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount)$/;"	f	file:
InitMultiDrawElementsEXT	include/GL/glprocs.c	/^static void APIENTRY InitMultiDrawElementsEXT (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount)$/;"	f	file:
InitMultiDrawRangeElementArrayAPPLE	include/GL/glprocs.c	/^static void APIENTRY InitMultiDrawRangeElementArrayAPPLE (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount)$/;"	f	file:
InitMultiModeDrawArraysIBM	include/GL/glprocs.c	/^static void APIENTRY InitMultiModeDrawArraysIBM (const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride)$/;"	f	file:
InitMultiModeDrawElementsIBM	include/GL/glprocs.c	/^static void APIENTRY InitMultiModeDrawElementsIBM (const GLenum *mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei primcount, GLint modestride)$/;"	f	file:
InitMultiTexCoord1d	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord1d (GLenum target, GLdouble s)$/;"	f	file:
InitMultiTexCoord1dARB	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord1dARB (GLenum target, GLdouble s)$/;"	f	file:
InitMultiTexCoord1dv	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord1dv (GLenum target, const GLdouble *v)$/;"	f	file:
InitMultiTexCoord1dvARB	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord1dvARB (GLenum target, const GLdouble *v)$/;"	f	file:
InitMultiTexCoord1f	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord1f (GLenum target, GLfloat s)$/;"	f	file:
InitMultiTexCoord1fARB	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord1fARB (GLenum target, GLfloat s)$/;"	f	file:
InitMultiTexCoord1fv	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord1fv (GLenum target, const GLfloat *v)$/;"	f	file:
InitMultiTexCoord1fvARB	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord1fvARB (GLenum target, const GLfloat *v)$/;"	f	file:
InitMultiTexCoord1hNV	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord1hNV (GLenum target, GLhalfNV s)$/;"	f	file:
InitMultiTexCoord1hvNV	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord1hvNV (GLenum target, const GLhalfNV *v)$/;"	f	file:
InitMultiTexCoord1i	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord1i (GLenum target, GLint s)$/;"	f	file:
InitMultiTexCoord1iARB	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord1iARB (GLenum target, GLint s)$/;"	f	file:
InitMultiTexCoord1iv	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord1iv (GLenum target, const GLint *v)$/;"	f	file:
InitMultiTexCoord1ivARB	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord1ivARB (GLenum target, const GLint *v)$/;"	f	file:
InitMultiTexCoord1s	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord1s (GLenum target, GLshort s)$/;"	f	file:
InitMultiTexCoord1sARB	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord1sARB (GLenum target, GLshort s)$/;"	f	file:
InitMultiTexCoord1sv	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord1sv (GLenum target, const GLshort *v)$/;"	f	file:
InitMultiTexCoord1svARB	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord1svARB (GLenum target, const GLshort *v)$/;"	f	file:
InitMultiTexCoord2d	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord2d (GLenum target, GLdouble s, GLdouble t)$/;"	f	file:
InitMultiTexCoord2dARB	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord2dARB (GLenum target, GLdouble s, GLdouble t)$/;"	f	file:
InitMultiTexCoord2dv	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord2dv (GLenum target, const GLdouble *v)$/;"	f	file:
InitMultiTexCoord2dvARB	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord2dvARB (GLenum target, const GLdouble *v)$/;"	f	file:
InitMultiTexCoord2f	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord2f (GLenum target, GLfloat s, GLfloat t)$/;"	f	file:
InitMultiTexCoord2fARB	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord2fARB (GLenum target, GLfloat s, GLfloat t)$/;"	f	file:
InitMultiTexCoord2fv	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord2fv (GLenum target, const GLfloat *v)$/;"	f	file:
InitMultiTexCoord2fvARB	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord2fvARB (GLenum target, const GLfloat *v)$/;"	f	file:
InitMultiTexCoord2hNV	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord2hNV (GLenum target, GLhalfNV s, GLhalfNV t)$/;"	f	file:
InitMultiTexCoord2hvNV	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord2hvNV (GLenum target, const GLhalfNV *v)$/;"	f	file:
InitMultiTexCoord2i	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord2i (GLenum target, GLint s, GLint t)$/;"	f	file:
InitMultiTexCoord2iARB	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord2iARB (GLenum target, GLint s, GLint t)$/;"	f	file:
InitMultiTexCoord2iv	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord2iv (GLenum target, const GLint *v)$/;"	f	file:
InitMultiTexCoord2ivARB	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord2ivARB (GLenum target, const GLint *v)$/;"	f	file:
InitMultiTexCoord2s	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord2s (GLenum target, GLshort s, GLshort t)$/;"	f	file:
InitMultiTexCoord2sARB	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord2sARB (GLenum target, GLshort s, GLshort t)$/;"	f	file:
InitMultiTexCoord2sv	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord2sv (GLenum target, const GLshort *v)$/;"	f	file:
InitMultiTexCoord2svARB	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord2svARB (GLenum target, const GLshort *v)$/;"	f	file:
InitMultiTexCoord3d	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord3d (GLenum target, GLdouble s, GLdouble t, GLdouble r)$/;"	f	file:
InitMultiTexCoord3dARB	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord3dARB (GLenum target, GLdouble s, GLdouble t, GLdouble r)$/;"	f	file:
InitMultiTexCoord3dv	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord3dv (GLenum target, const GLdouble *v)$/;"	f	file:
InitMultiTexCoord3dvARB	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord3dvARB (GLenum target, const GLdouble *v)$/;"	f	file:
InitMultiTexCoord3f	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord3f (GLenum target, GLfloat s, GLfloat t, GLfloat r)$/;"	f	file:
InitMultiTexCoord3fARB	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord3fARB (GLenum target, GLfloat s, GLfloat t, GLfloat r)$/;"	f	file:
InitMultiTexCoord3fv	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord3fv (GLenum target, const GLfloat *v)$/;"	f	file:
InitMultiTexCoord3fvARB	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord3fvARB (GLenum target, const GLfloat *v)$/;"	f	file:
InitMultiTexCoord3hNV	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord3hNV (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r)$/;"	f	file:
InitMultiTexCoord3hvNV	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord3hvNV (GLenum target, const GLhalfNV *v)$/;"	f	file:
InitMultiTexCoord3i	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord3i (GLenum target, GLint s, GLint t, GLint r)$/;"	f	file:
InitMultiTexCoord3iARB	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord3iARB (GLenum target, GLint s, GLint t, GLint r)$/;"	f	file:
InitMultiTexCoord3iv	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord3iv (GLenum target, const GLint *v)$/;"	f	file:
InitMultiTexCoord3ivARB	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord3ivARB (GLenum target, const GLint *v)$/;"	f	file:
InitMultiTexCoord3s	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord3s (GLenum target, GLshort s, GLshort t, GLshort r)$/;"	f	file:
InitMultiTexCoord3sARB	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord3sARB (GLenum target, GLshort s, GLshort t, GLshort r)$/;"	f	file:
InitMultiTexCoord3sv	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord3sv (GLenum target, const GLshort *v)$/;"	f	file:
InitMultiTexCoord3svARB	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord3svARB (GLenum target, const GLshort *v)$/;"	f	file:
InitMultiTexCoord4d	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord4d (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q)$/;"	f	file:
InitMultiTexCoord4dARB	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord4dARB (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q)$/;"	f	file:
InitMultiTexCoord4dv	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord4dv (GLenum target, const GLdouble *v)$/;"	f	file:
InitMultiTexCoord4dvARB	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord4dvARB (GLenum target, const GLdouble *v)$/;"	f	file:
InitMultiTexCoord4f	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord4f (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q)$/;"	f	file:
InitMultiTexCoord4fARB	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord4fARB (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q)$/;"	f	file:
InitMultiTexCoord4fv	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord4fv (GLenum target, const GLfloat *v)$/;"	f	file:
InitMultiTexCoord4fvARB	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord4fvARB (GLenum target, const GLfloat *v)$/;"	f	file:
InitMultiTexCoord4hNV	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord4hNV (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q)$/;"	f	file:
InitMultiTexCoord4hvNV	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord4hvNV (GLenum target, const GLhalfNV *v)$/;"	f	file:
InitMultiTexCoord4i	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord4i (GLenum target, GLint s, GLint t, GLint r, GLint q)$/;"	f	file:
InitMultiTexCoord4iARB	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord4iARB (GLenum target, GLint s, GLint t, GLint r, GLint q)$/;"	f	file:
InitMultiTexCoord4iv	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord4iv (GLenum target, const GLint *v)$/;"	f	file:
InitMultiTexCoord4ivARB	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord4ivARB (GLenum target, const GLint *v)$/;"	f	file:
InitMultiTexCoord4s	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord4s (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q)$/;"	f	file:
InitMultiTexCoord4sARB	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord4sARB (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q)$/;"	f	file:
InitMultiTexCoord4sv	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord4sv (GLenum target, const GLshort *v)$/;"	f	file:
InitMultiTexCoord4svARB	include/GL/glprocs.c	/^static void APIENTRY InitMultiTexCoord4svARB (GLenum target, const GLshort *v)$/;"	f	file:
InitNewObjectBufferATI	include/GL/glprocs.c	/^static GLuint APIENTRY InitNewObjectBufferATI (GLsizei size, const GLvoid *pointer, GLenum usage)$/;"	f	file:
InitNormal3fVertex3fSUN	include/GL/glprocs.c	/^static void APIENTRY InitNormal3fVertex3fSUN (GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)$/;"	f	file:
InitNormal3fVertex3fvSUN	include/GL/glprocs.c	/^static void APIENTRY InitNormal3fVertex3fvSUN (const GLfloat *n, const GLfloat *v)$/;"	f	file:
InitNormal3hNV	include/GL/glprocs.c	/^static void APIENTRY InitNormal3hNV (GLhalfNV nx, GLhalfNV ny, GLhalfNV nz)$/;"	f	file:
InitNormal3hvNV	include/GL/glprocs.c	/^static void APIENTRY InitNormal3hvNV (const GLhalfNV *v)$/;"	f	file:
InitNormalPointerEXT	include/GL/glprocs.c	/^static void APIENTRY InitNormalPointerEXT (GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer)$/;"	f	file:
InitNormalPointerListIBM	include/GL/glprocs.c	/^static void APIENTRY InitNormalPointerListIBM (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride)$/;"	f	file:
InitNormalPointervINTEL	include/GL/glprocs.c	/^static void APIENTRY InitNormalPointervINTEL (GLenum type, const GLvoid* *pointer)$/;"	f	file:
InitNormalStream3bATI	include/GL/glprocs.c	/^static void APIENTRY InitNormalStream3bATI (GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz)$/;"	f	file:
InitNormalStream3bvATI	include/GL/glprocs.c	/^static void APIENTRY InitNormalStream3bvATI (GLenum stream, const GLbyte *coords)$/;"	f	file:
InitNormalStream3dATI	include/GL/glprocs.c	/^static void APIENTRY InitNormalStream3dATI (GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz)$/;"	f	file:
InitNormalStream3dvATI	include/GL/glprocs.c	/^static void APIENTRY InitNormalStream3dvATI (GLenum stream, const GLdouble *coords)$/;"	f	file:
InitNormalStream3fATI	include/GL/glprocs.c	/^static void APIENTRY InitNormalStream3fATI (GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz)$/;"	f	file:
InitNormalStream3fvATI	include/GL/glprocs.c	/^static void APIENTRY InitNormalStream3fvATI (GLenum stream, const GLfloat *coords)$/;"	f	file:
InitNormalStream3iATI	include/GL/glprocs.c	/^static void APIENTRY InitNormalStream3iATI (GLenum stream, GLint nx, GLint ny, GLint nz)$/;"	f	file:
InitNormalStream3ivATI	include/GL/glprocs.c	/^static void APIENTRY InitNormalStream3ivATI (GLenum stream, const GLint *coords)$/;"	f	file:
InitNormalStream3sATI	include/GL/glprocs.c	/^static void APIENTRY InitNormalStream3sATI (GLenum stream, GLshort nx, GLshort ny, GLshort nz)$/;"	f	file:
InitNormalStream3svATI	include/GL/glprocs.c	/^static void APIENTRY InitNormalStream3svATI (GLenum stream, const GLshort *coords)$/;"	f	file:
InitPNTrianglesfATI	include/GL/glprocs.c	/^static void APIENTRY InitPNTrianglesfATI (GLenum pname, GLfloat param)$/;"	f	file:
InitPNTrianglesiATI	include/GL/glprocs.c	/^static void APIENTRY InitPNTrianglesiATI (GLenum pname, GLint param)$/;"	f	file:
InitPassTexCoordATI	include/GL/glprocs.c	/^static void APIENTRY InitPassTexCoordATI (GLuint dst, GLuint coord, GLenum swizzle)$/;"	f	file:
InitPixelDataRangeNV	include/GL/glprocs.c	/^static void APIENTRY InitPixelDataRangeNV (GLenum target, GLsizei length, GLvoid *pointer)$/;"	f	file:
InitPixelTexGenParameterfSGIS	include/GL/glprocs.c	/^static void APIENTRY InitPixelTexGenParameterfSGIS (GLenum pname, GLfloat param)$/;"	f	file:
InitPixelTexGenParameterfvSGIS	include/GL/glprocs.c	/^static void APIENTRY InitPixelTexGenParameterfvSGIS (GLenum pname, const GLfloat *params)$/;"	f	file:
InitPixelTexGenParameteriSGIS	include/GL/glprocs.c	/^static void APIENTRY InitPixelTexGenParameteriSGIS (GLenum pname, GLint param)$/;"	f	file:
InitPixelTexGenParameterivSGIS	include/GL/glprocs.c	/^static void APIENTRY InitPixelTexGenParameterivSGIS (GLenum pname, const GLint *params)$/;"	f	file:
InitPixelTexGenSGIX	include/GL/glprocs.c	/^static void APIENTRY InitPixelTexGenSGIX (GLenum mode)$/;"	f	file:
InitPixelTransformParameterfEXT	include/GL/glprocs.c	/^static void APIENTRY InitPixelTransformParameterfEXT (GLenum target, GLenum pname, GLfloat param)$/;"	f	file:
InitPixelTransformParameterfvEXT	include/GL/glprocs.c	/^static void APIENTRY InitPixelTransformParameterfvEXT (GLenum target, GLenum pname, const GLfloat *params)$/;"	f	file:
InitPixelTransformParameteriEXT	include/GL/glprocs.c	/^static void APIENTRY InitPixelTransformParameteriEXT (GLenum target, GLenum pname, GLint param)$/;"	f	file:
InitPixelTransformParameterivEXT	include/GL/glprocs.c	/^static void APIENTRY InitPixelTransformParameterivEXT (GLenum target, GLenum pname, const GLint *params)$/;"	f	file:
InitPointParameterf	include/GL/glprocs.c	/^static void APIENTRY InitPointParameterf (GLenum pname, GLfloat param)$/;"	f	file:
InitPointParameterfARB	include/GL/glprocs.c	/^static void APIENTRY InitPointParameterfARB (GLenum pname, GLfloat param)$/;"	f	file:
InitPointParameterfEXT	include/GL/glprocs.c	/^static void APIENTRY InitPointParameterfEXT (GLenum pname, GLfloat param)$/;"	f	file:
InitPointParameterfSGIS	include/GL/glprocs.c	/^static void APIENTRY InitPointParameterfSGIS (GLenum pname, GLfloat param)$/;"	f	file:
InitPointParameterfv	include/GL/glprocs.c	/^static void APIENTRY InitPointParameterfv (GLenum pname, const GLfloat *params)$/;"	f	file:
InitPointParameterfvARB	include/GL/glprocs.c	/^static void APIENTRY InitPointParameterfvARB (GLenum pname, const GLfloat *params)$/;"	f	file:
InitPointParameterfvEXT	include/GL/glprocs.c	/^static void APIENTRY InitPointParameterfvEXT (GLenum pname, const GLfloat *params)$/;"	f	file:
InitPointParameterfvSGIS	include/GL/glprocs.c	/^static void APIENTRY InitPointParameterfvSGIS (GLenum pname, const GLfloat *params)$/;"	f	file:
InitPointParameteri	include/GL/glprocs.c	/^static void APIENTRY InitPointParameteri (GLenum pname, GLint param)$/;"	f	file:
InitPointParameteriNV	include/GL/glprocs.c	/^static void APIENTRY InitPointParameteriNV (GLenum pname, GLint param)$/;"	f	file:
InitPointParameteriv	include/GL/glprocs.c	/^static void APIENTRY InitPointParameteriv (GLenum pname, const GLint *params)$/;"	f	file:
InitPointParameterivNV	include/GL/glprocs.c	/^static void APIENTRY InitPointParameterivNV (GLenum pname, const GLint *params)$/;"	f	file:
InitPollAsyncSGIX	include/GL/glprocs.c	/^static GLint APIENTRY InitPollAsyncSGIX (GLuint *markerp)$/;"	f	file:
InitPollInstrumentsSGIX	include/GL/glprocs.c	/^static GLint APIENTRY InitPollInstrumentsSGIX (GLint *marker_p)$/;"	f	file:
InitPolygonOffsetEXT	include/GL/glprocs.c	/^static void APIENTRY InitPolygonOffsetEXT (GLfloat factor, GLfloat bias)$/;"	f	file:
InitPrimitiveRestartIndexNV	include/GL/glprocs.c	/^static void APIENTRY InitPrimitiveRestartIndexNV (GLuint index)$/;"	f	file:
InitPrimitiveRestartNV	include/GL/glprocs.c	/^static void APIENTRY InitPrimitiveRestartNV (void)$/;"	f	file:
InitPrioritizeTexturesEXT	include/GL/glprocs.c	/^static void APIENTRY InitPrioritizeTexturesEXT (GLsizei n, const GLuint *textures, const GLclampf *priorities)$/;"	f	file:
InitProgramEnvParameter4dARB	include/GL/glprocs.c	/^static void APIENTRY InitProgramEnvParameter4dARB (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)$/;"	f	file:
InitProgramEnvParameter4dvARB	include/GL/glprocs.c	/^static void APIENTRY InitProgramEnvParameter4dvARB (GLenum target, GLuint index, const GLdouble *params)$/;"	f	file:
InitProgramEnvParameter4fARB	include/GL/glprocs.c	/^static void APIENTRY InitProgramEnvParameter4fARB (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)$/;"	f	file:
InitProgramEnvParameter4fvARB	include/GL/glprocs.c	/^static void APIENTRY InitProgramEnvParameter4fvARB (GLenum target, GLuint index, const GLfloat *params)$/;"	f	file:
InitProgramLocalParameter4dARB	include/GL/glprocs.c	/^static void APIENTRY InitProgramLocalParameter4dARB (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)$/;"	f	file:
InitProgramLocalParameter4dvARB	include/GL/glprocs.c	/^static void APIENTRY InitProgramLocalParameter4dvARB (GLenum target, GLuint index, const GLdouble *params)$/;"	f	file:
InitProgramLocalParameter4fARB	include/GL/glprocs.c	/^static void APIENTRY InitProgramLocalParameter4fARB (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)$/;"	f	file:
InitProgramLocalParameter4fvARB	include/GL/glprocs.c	/^static void APIENTRY InitProgramLocalParameter4fvARB (GLenum target, GLuint index, const GLfloat *params)$/;"	f	file:
InitProgramNamedParameter4dNV	include/GL/glprocs.c	/^static void APIENTRY InitProgramNamedParameter4dNV (GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w)$/;"	f	file:
InitProgramNamedParameter4dvNV	include/GL/glprocs.c	/^static void APIENTRY InitProgramNamedParameter4dvNV (GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v)$/;"	f	file:
InitProgramNamedParameter4fNV	include/GL/glprocs.c	/^static void APIENTRY InitProgramNamedParameter4fNV (GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w)$/;"	f	file:
InitProgramNamedParameter4fvNV	include/GL/glprocs.c	/^static void APIENTRY InitProgramNamedParameter4fvNV (GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v)$/;"	f	file:
InitProgramParameter4dNV	include/GL/glprocs.c	/^static void APIENTRY InitProgramParameter4dNV (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)$/;"	f	file:
InitProgramParameter4dvNV	include/GL/glprocs.c	/^static void APIENTRY InitProgramParameter4dvNV (GLenum target, GLuint index, const GLdouble *v)$/;"	f	file:
InitProgramParameter4fNV	include/GL/glprocs.c	/^static void APIENTRY InitProgramParameter4fNV (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)$/;"	f	file:
InitProgramParameter4fvNV	include/GL/glprocs.c	/^static void APIENTRY InitProgramParameter4fvNV (GLenum target, GLuint index, const GLfloat *v)$/;"	f	file:
InitProgramParameters4dvNV	include/GL/glprocs.c	/^static void APIENTRY InitProgramParameters4dvNV (GLenum target, GLuint index, GLuint count, const GLdouble *v)$/;"	f	file:
InitProgramParameters4fvNV	include/GL/glprocs.c	/^static void APIENTRY InitProgramParameters4fvNV (GLenum target, GLuint index, GLuint count, const GLfloat *v)$/;"	f	file:
InitProgramStringARB	include/GL/glprocs.c	/^static void APIENTRY InitProgramStringARB (GLenum target, GLenum format, GLsizei len, const GLvoid *string)$/;"	f	file:
InitQueryFrameLockMasterI3D	include/GL/glprocs.c	/^static BOOL WINAPI InitQueryFrameLockMasterI3D (BOOL *pFlag)$/;"	f	file:
InitQueryFrameTrackingI3D	include/GL/glprocs.c	/^static BOOL WINAPI InitQueryFrameTrackingI3D (DWORD *pFrameCount, DWORD *pMissedFrames, float *pLastMissedUsage)$/;"	f	file:
InitQueryGenlockMaxSourceDelayI3D	include/GL/glprocs.c	/^static BOOL WINAPI InitQueryGenlockMaxSourceDelayI3D (HDC hDC, UINT *uMaxLineDelay, UINT *uMaxPixelDelay)$/;"	f	file:
InitQueryPbufferARB	include/GL/glprocs.c	/^static BOOL WINAPI InitQueryPbufferARB (HPBUFFERARB hPbuffer, int iAttribute, int *piValue)$/;"	f	file:
InitQueryPbufferEXT	include/GL/glprocs.c	/^static BOOL WINAPI InitQueryPbufferEXT (HPBUFFEREXT hPbuffer, int iAttribute, int *piValue)$/;"	f	file:
InitReadInstrumentsSGIX	include/GL/glprocs.c	/^static void APIENTRY InitReadInstrumentsSGIX (GLint marker)$/;"	f	file:
InitReferencePlaneSGIX	include/GL/glprocs.c	/^static void APIENTRY InitReferencePlaneSGIX (const GLdouble *equation)$/;"	f	file:
InitReleaseImageBufferEventsI3D	include/GL/glprocs.c	/^static BOOL WINAPI InitReleaseImageBufferEventsI3D (HDC hDC, const LPVOID *pAddress, UINT count)$/;"	f	file:
InitReleasePbufferDCARB	include/GL/glprocs.c	/^static int WINAPI InitReleasePbufferDCARB (HPBUFFERARB hPbuffer, HDC hDC)$/;"	f	file:
InitReleasePbufferDCEXT	include/GL/glprocs.c	/^static int WINAPI InitReleasePbufferDCEXT (HPBUFFEREXT hPbuffer, HDC hDC)$/;"	f	file:
InitReleaseTexImageARB	include/GL/glprocs.c	/^static BOOL WINAPI InitReleaseTexImageARB (HPBUFFERARB hPbuffer, int iBuffer)$/;"	f	file:
InitReplacementCodePointerSUN	include/GL/glprocs.c	/^static void APIENTRY InitReplacementCodePointerSUN (GLenum type, GLsizei stride, const GLvoid* *pointer)$/;"	f	file:
InitReplacementCodeubSUN	include/GL/glprocs.c	/^static void APIENTRY InitReplacementCodeubSUN (GLubyte code)$/;"	f	file:
InitReplacementCodeubvSUN	include/GL/glprocs.c	/^static void APIENTRY InitReplacementCodeubvSUN (const GLubyte *code)$/;"	f	file:
InitReplacementCodeuiColor3fVertex3fSUN	include/GL/glprocs.c	/^static void APIENTRY InitReplacementCodeuiColor3fVertex3fSUN (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z)$/;"	f	file:
InitReplacementCodeuiColor3fVertex3fvSUN	include/GL/glprocs.c	/^static void APIENTRY InitReplacementCodeuiColor3fVertex3fvSUN (const GLuint *rc, const GLfloat *c, const GLfloat *v)$/;"	f	file:
InitReplacementCodeuiColor4fNormal3fVertex3fSUN	include/GL/glprocs.c	/^static void APIENTRY InitReplacementCodeuiColor4fNormal3fVertex3fSUN (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)$/;"	f	file:
InitReplacementCodeuiColor4fNormal3fVertex3fvSUN	include/GL/glprocs.c	/^static void APIENTRY InitReplacementCodeuiColor4fNormal3fVertex3fvSUN (const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v)$/;"	f	file:
InitReplacementCodeuiColor4ubVertex3fSUN	include/GL/glprocs.c	/^static void APIENTRY InitReplacementCodeuiColor4ubVertex3fSUN (GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z)$/;"	f	file:
InitReplacementCodeuiColor4ubVertex3fvSUN	include/GL/glprocs.c	/^static void APIENTRY InitReplacementCodeuiColor4ubVertex3fvSUN (const GLuint *rc, const GLubyte *c, const GLfloat *v)$/;"	f	file:
InitReplacementCodeuiNormal3fVertex3fSUN	include/GL/glprocs.c	/^static void APIENTRY InitReplacementCodeuiNormal3fVertex3fSUN (GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)$/;"	f	file:
InitReplacementCodeuiNormal3fVertex3fvSUN	include/GL/glprocs.c	/^static void APIENTRY InitReplacementCodeuiNormal3fVertex3fvSUN (const GLuint *rc, const GLfloat *n, const GLfloat *v)$/;"	f	file:
InitReplacementCodeuiSUN	include/GL/glprocs.c	/^static void APIENTRY InitReplacementCodeuiSUN (GLuint code)$/;"	f	file:
InitReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN	include/GL/glprocs.c	/^static void APIENTRY InitReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN (GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)$/;"	f	file:
InitReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN	include/GL/glprocs.c	/^static void APIENTRY InitReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN (const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v)$/;"	f	file:
InitReplacementCodeuiTexCoord2fNormal3fVertex3fSUN	include/GL/glprocs.c	/^static void APIENTRY InitReplacementCodeuiTexCoord2fNormal3fVertex3fSUN (GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)$/;"	f	file:
InitReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN	include/GL/glprocs.c	/^static void APIENTRY InitReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN (const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v)$/;"	f	file:
InitReplacementCodeuiTexCoord2fVertex3fSUN	include/GL/glprocs.c	/^static void APIENTRY InitReplacementCodeuiTexCoord2fVertex3fSUN (GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z)$/;"	f	file:
InitReplacementCodeuiTexCoord2fVertex3fvSUN	include/GL/glprocs.c	/^static void APIENTRY InitReplacementCodeuiTexCoord2fVertex3fvSUN (const GLuint *rc, const GLfloat *tc, const GLfloat *v)$/;"	f	file:
InitReplacementCodeuiVertex3fSUN	include/GL/glprocs.c	/^static void APIENTRY InitReplacementCodeuiVertex3fSUN (GLuint rc, GLfloat x, GLfloat y, GLfloat z)$/;"	f	file:
InitReplacementCodeuiVertex3fvSUN	include/GL/glprocs.c	/^static void APIENTRY InitReplacementCodeuiVertex3fvSUN (const GLuint *rc, const GLfloat *v)$/;"	f	file:
InitReplacementCodeuivSUN	include/GL/glprocs.c	/^static void APIENTRY InitReplacementCodeuivSUN (const GLuint *code)$/;"	f	file:
InitReplacementCodeusSUN	include/GL/glprocs.c	/^static void APIENTRY InitReplacementCodeusSUN (GLushort code)$/;"	f	file:
InitReplacementCodeusvSUN	include/GL/glprocs.c	/^static void APIENTRY InitReplacementCodeusvSUN (const GLushort *code)$/;"	f	file:
InitRequestResidentProgramsNV	include/GL/glprocs.c	/^static void APIENTRY InitRequestResidentProgramsNV (GLsizei n, const GLuint *programs)$/;"	f	file:
InitResetHistogram	include/GL/glprocs.c	/^static void APIENTRY InitResetHistogram (GLenum target)$/;"	f	file:
InitResetHistogramEXT	include/GL/glprocs.c	/^static void APIENTRY InitResetHistogramEXT (GLenum target)$/;"	f	file:
InitResetMinmax	include/GL/glprocs.c	/^static void APIENTRY InitResetMinmax (GLenum target)$/;"	f	file:
InitResetMinmaxEXT	include/GL/glprocs.c	/^static void APIENTRY InitResetMinmaxEXT (GLenum target)$/;"	f	file:
InitResizeBuffersMESA	include/GL/glprocs.c	/^static void APIENTRY InitResizeBuffersMESA (void)$/;"	f	file:
InitRestoreBufferRegionARB	include/GL/glprocs.c	/^static BOOL WINAPI InitRestoreBufferRegionARB (HANDLE hRegion, int x, int y, int width, int height, int xSrc, int ySrc)$/;"	f	file:
InitSampleCoverage	include/GL/glprocs.c	/^static void APIENTRY InitSampleCoverage (GLclampf value, GLboolean invert)$/;"	f	file:
InitSampleCoverageARB	include/GL/glprocs.c	/^static void APIENTRY InitSampleCoverageARB (GLclampf value, GLboolean invert)$/;"	f	file:
InitSampleMapATI	include/GL/glprocs.c	/^static void APIENTRY InitSampleMapATI (GLuint dst, GLuint interp, GLenum swizzle)$/;"	f	file:
InitSampleMaskEXT	include/GL/glprocs.c	/^static void APIENTRY InitSampleMaskEXT (GLclampf value, GLboolean invert)$/;"	f	file:
InitSampleMaskSGIS	include/GL/glprocs.c	/^static void APIENTRY InitSampleMaskSGIS (GLclampf value, GLboolean invert)$/;"	f	file:
InitSamplePatternEXT	include/GL/glprocs.c	/^static void APIENTRY InitSamplePatternEXT (GLenum pattern)$/;"	f	file:
InitSamplePatternSGIS	include/GL/glprocs.c	/^static void APIENTRY InitSamplePatternSGIS (GLenum pattern)$/;"	f	file:
InitSaveBufferRegionARB	include/GL/glprocs.c	/^static BOOL WINAPI InitSaveBufferRegionARB (HANDLE hRegion, int x, int y, int width, int height)$/;"	f	file:
InitSecondaryColor3b	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColor3b (GLbyte red, GLbyte green, GLbyte blue)$/;"	f	file:
InitSecondaryColor3bEXT	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColor3bEXT (GLbyte red, GLbyte green, GLbyte blue)$/;"	f	file:
InitSecondaryColor3bv	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColor3bv (const GLbyte *v)$/;"	f	file:
InitSecondaryColor3bvEXT	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColor3bvEXT (const GLbyte *v)$/;"	f	file:
InitSecondaryColor3d	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColor3d (GLdouble red, GLdouble green, GLdouble blue)$/;"	f	file:
InitSecondaryColor3dEXT	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColor3dEXT (GLdouble red, GLdouble green, GLdouble blue)$/;"	f	file:
InitSecondaryColor3dv	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColor3dv (const GLdouble *v)$/;"	f	file:
InitSecondaryColor3dvEXT	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColor3dvEXT (const GLdouble *v)$/;"	f	file:
InitSecondaryColor3f	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColor3f (GLfloat red, GLfloat green, GLfloat blue)$/;"	f	file:
InitSecondaryColor3fEXT	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColor3fEXT (GLfloat red, GLfloat green, GLfloat blue)$/;"	f	file:
InitSecondaryColor3fv	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColor3fv (const GLfloat *v)$/;"	f	file:
InitSecondaryColor3fvEXT	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColor3fvEXT (const GLfloat *v)$/;"	f	file:
InitSecondaryColor3hNV	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColor3hNV (GLhalfNV red, GLhalfNV green, GLhalfNV blue)$/;"	f	file:
InitSecondaryColor3hvNV	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColor3hvNV (const GLhalfNV *v)$/;"	f	file:
InitSecondaryColor3i	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColor3i (GLint red, GLint green, GLint blue)$/;"	f	file:
InitSecondaryColor3iEXT	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColor3iEXT (GLint red, GLint green, GLint blue)$/;"	f	file:
InitSecondaryColor3iv	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColor3iv (const GLint *v)$/;"	f	file:
InitSecondaryColor3ivEXT	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColor3ivEXT (const GLint *v)$/;"	f	file:
InitSecondaryColor3s	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColor3s (GLshort red, GLshort green, GLshort blue)$/;"	f	file:
InitSecondaryColor3sEXT	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColor3sEXT (GLshort red, GLshort green, GLshort blue)$/;"	f	file:
InitSecondaryColor3sv	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColor3sv (const GLshort *v)$/;"	f	file:
InitSecondaryColor3svEXT	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColor3svEXT (const GLshort *v)$/;"	f	file:
InitSecondaryColor3ub	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColor3ub (GLubyte red, GLubyte green, GLubyte blue)$/;"	f	file:
InitSecondaryColor3ubEXT	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColor3ubEXT (GLubyte red, GLubyte green, GLubyte blue)$/;"	f	file:
InitSecondaryColor3ubv	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColor3ubv (const GLubyte *v)$/;"	f	file:
InitSecondaryColor3ubvEXT	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColor3ubvEXT (const GLubyte *v)$/;"	f	file:
InitSecondaryColor3ui	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColor3ui (GLuint red, GLuint green, GLuint blue)$/;"	f	file:
InitSecondaryColor3uiEXT	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColor3uiEXT (GLuint red, GLuint green, GLuint blue)$/;"	f	file:
InitSecondaryColor3uiv	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColor3uiv (const GLuint *v)$/;"	f	file:
InitSecondaryColor3uivEXT	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColor3uivEXT (const GLuint *v)$/;"	f	file:
InitSecondaryColor3us	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColor3us (GLushort red, GLushort green, GLushort blue)$/;"	f	file:
InitSecondaryColor3usEXT	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColor3usEXT (GLushort red, GLushort green, GLushort blue)$/;"	f	file:
InitSecondaryColor3usv	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColor3usv (const GLushort *v)$/;"	f	file:
InitSecondaryColor3usvEXT	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColor3usvEXT (const GLushort *v)$/;"	f	file:
InitSecondaryColorPointer	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColorPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)$/;"	f	file:
InitSecondaryColorPointerEXT	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColorPointerEXT (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)$/;"	f	file:
InitSecondaryColorPointerListIBM	include/GL/glprocs.c	/^static void APIENTRY InitSecondaryColorPointerListIBM (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride)$/;"	f	file:
InitSeparableFilter2D	include/GL/glprocs.c	/^static void APIENTRY InitSeparableFilter2D (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column)$/;"	f	file:
InitSeparableFilter2DEXT	include/GL/glprocs.c	/^static void APIENTRY InitSeparableFilter2DEXT (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column)$/;"	f	file:
InitSetDigitalVideoParametersI3D	include/GL/glprocs.c	/^static BOOL WINAPI InitSetDigitalVideoParametersI3D (HDC hDC, int iAttribute, const int *piValue)$/;"	f	file:
InitSetFenceAPPLE	include/GL/glprocs.c	/^static void APIENTRY InitSetFenceAPPLE (GLuint fence)$/;"	f	file:
InitSetFenceNV	include/GL/glprocs.c	/^static void APIENTRY InitSetFenceNV (GLuint fence, GLenum condition)$/;"	f	file:
InitSetFragmentShaderConstantATI	include/GL/glprocs.c	/^static void APIENTRY InitSetFragmentShaderConstantATI (GLuint dst, const GLfloat *value)$/;"	f	file:
InitSetGammaTableI3D	include/GL/glprocs.c	/^static BOOL WINAPI InitSetGammaTableI3D (HDC hDC, int iEntries, const USHORT *puRed, const USHORT *puGreen, const USHORT *puBlue)$/;"	f	file:
InitSetGammaTableParametersI3D	include/GL/glprocs.c	/^static BOOL WINAPI InitSetGammaTableParametersI3D (HDC hDC, int iAttribute, const int *piValue)$/;"	f	file:
InitSetInvariantEXT	include/GL/glprocs.c	/^static void APIENTRY InitSetInvariantEXT (GLuint id, GLenum type, const GLvoid *addr)$/;"	f	file:
InitSetLocalConstantEXT	include/GL/glprocs.c	/^static void APIENTRY InitSetLocalConstantEXT (GLuint id, GLenum type, const GLvoid *addr)$/;"	f	file:
InitSetPbufferAttribARB	include/GL/glprocs.c	/^static BOOL WINAPI InitSetPbufferAttribARB (HPBUFFERARB hPbuffer, const int *piAttribList)$/;"	f	file:
InitShaderOp1EXT	include/GL/glprocs.c	/^static void APIENTRY InitShaderOp1EXT (GLenum op, GLuint res, GLuint arg1)$/;"	f	file:
InitShaderOp2EXT	include/GL/glprocs.c	/^static void APIENTRY InitShaderOp2EXT (GLenum op, GLuint res, GLuint arg1, GLuint arg2)$/;"	f	file:
InitShaderOp3EXT	include/GL/glprocs.c	/^static void APIENTRY InitShaderOp3EXT (GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3)$/;"	f	file:
InitShaderSourceARB	include/GL/glprocs.c	/^static void APIENTRY InitShaderSourceARB (GLhandleARB shaderObj, GLsizei count, const GLcharARB* *string, const GLint *length)$/;"	f	file:
InitSharpenTexFuncSGIS	include/GL/glprocs.c	/^static void APIENTRY InitSharpenTexFuncSGIS (GLenum target, GLsizei n, const GLfloat *points)$/;"	f	file:
InitSpriteParameterfSGIX	include/GL/glprocs.c	/^static void APIENTRY InitSpriteParameterfSGIX (GLenum pname, GLfloat param)$/;"	f	file:
InitSpriteParameterfvSGIX	include/GL/glprocs.c	/^static void APIENTRY InitSpriteParameterfvSGIX (GLenum pname, const GLfloat *params)$/;"	f	file:
InitSpriteParameteriSGIX	include/GL/glprocs.c	/^static void APIENTRY InitSpriteParameteriSGIX (GLenum pname, GLint param)$/;"	f	file:
InitSpriteParameterivSGIX	include/GL/glprocs.c	/^static void APIENTRY InitSpriteParameterivSGIX (GLenum pname, const GLint *params)$/;"	f	file:
InitStartInstrumentsSGIX	include/GL/glprocs.c	/^static void APIENTRY InitStartInstrumentsSGIX (void)$/;"	f	file:
InitStencilFuncSeparateATI	include/GL/glprocs.c	/^static void APIENTRY InitStencilFuncSeparateATI (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask)$/;"	f	file:
InitStencilOpSeparateATI	include/GL/glprocs.c	/^static void APIENTRY InitStencilOpSeparateATI (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass)$/;"	f	file:
InitStopInstrumentsSGIX	include/GL/glprocs.c	/^static void APIENTRY InitStopInstrumentsSGIX (GLint marker)$/;"	f	file:
InitSwapBuffersMscOML	include/GL/glprocs.c	/^static INT64 WINAPI InitSwapBuffersMscOML (HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder)$/;"	f	file:
InitSwapIntervalEXT	include/GL/glprocs.c	/^static BOOL WINAPI InitSwapIntervalEXT (int interval)$/;"	f	file:
InitSwapLayerBuffersMscOML	include/GL/glprocs.c	/^static INT64 WINAPI InitSwapLayerBuffersMscOML (HDC hdc, int fuPlanes, INT64 target_msc, INT64 divisor, INT64 remainder)$/;"	f	file:
InitSwizzleEXT	include/GL/glprocs.c	/^static void APIENTRY InitSwizzleEXT (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW)$/;"	f	file:
InitTagSampleBufferSGIX	include/GL/glprocs.c	/^static void APIENTRY InitTagSampleBufferSGIX (void)$/;"	f	file:
InitTangent3bEXT	include/GL/glprocs.c	/^static void APIENTRY InitTangent3bEXT (GLbyte tx, GLbyte ty, GLbyte tz)$/;"	f	file:
InitTangent3bvEXT	include/GL/glprocs.c	/^static void APIENTRY InitTangent3bvEXT (const GLbyte *v)$/;"	f	file:
InitTangent3dEXT	include/GL/glprocs.c	/^static void APIENTRY InitTangent3dEXT (GLdouble tx, GLdouble ty, GLdouble tz)$/;"	f	file:
InitTangent3dvEXT	include/GL/glprocs.c	/^static void APIENTRY InitTangent3dvEXT (const GLdouble *v)$/;"	f	file:
InitTangent3fEXT	include/GL/glprocs.c	/^static void APIENTRY InitTangent3fEXT (GLfloat tx, GLfloat ty, GLfloat tz)$/;"	f	file:
InitTangent3fvEXT	include/GL/glprocs.c	/^static void APIENTRY InitTangent3fvEXT (const GLfloat *v)$/;"	f	file:
InitTangent3iEXT	include/GL/glprocs.c	/^static void APIENTRY InitTangent3iEXT (GLint tx, GLint ty, GLint tz)$/;"	f	file:
InitTangent3ivEXT	include/GL/glprocs.c	/^static void APIENTRY InitTangent3ivEXT (const GLint *v)$/;"	f	file:
InitTangent3sEXT	include/GL/glprocs.c	/^static void APIENTRY InitTangent3sEXT (GLshort tx, GLshort ty, GLshort tz)$/;"	f	file:
InitTangent3svEXT	include/GL/glprocs.c	/^static void APIENTRY InitTangent3svEXT (const GLshort *v)$/;"	f	file:
InitTangentPointerEXT	include/GL/glprocs.c	/^static void APIENTRY InitTangentPointerEXT (GLenum type, GLsizei stride, const GLvoid *pointer)$/;"	f	file:
InitTbufferMask3DFX	include/GL/glprocs.c	/^static void APIENTRY InitTbufferMask3DFX (GLuint mask)$/;"	f	file:
InitTestFenceAPPLE	include/GL/glprocs.c	/^static GLboolean APIENTRY InitTestFenceAPPLE (GLuint fence)$/;"	f	file:
InitTestFenceNV	include/GL/glprocs.c	/^static GLboolean APIENTRY InitTestFenceNV (GLuint fence)$/;"	f	file:
InitTestObjectAPPLE	include/GL/glprocs.c	/^static GLboolean APIENTRY InitTestObjectAPPLE (GLenum object, GLuint name)$/;"	f	file:
InitTexBumpParameterfvATI	include/GL/glprocs.c	/^static void APIENTRY InitTexBumpParameterfvATI (GLenum pname, const GLfloat *param)$/;"	f	file:
InitTexBumpParameterivATI	include/GL/glprocs.c	/^static void APIENTRY InitTexBumpParameterivATI (GLenum pname, const GLint *param)$/;"	f	file:
InitTexCoord1hNV	include/GL/glprocs.c	/^static void APIENTRY InitTexCoord1hNV (GLhalfNV s)$/;"	f	file:
InitTexCoord1hvNV	include/GL/glprocs.c	/^static void APIENTRY InitTexCoord1hvNV (const GLhalfNV *v)$/;"	f	file:
InitTexCoord2fColor3fVertex3fSUN	include/GL/glprocs.c	/^static void APIENTRY InitTexCoord2fColor3fVertex3fSUN (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z)$/;"	f	file:
InitTexCoord2fColor3fVertex3fvSUN	include/GL/glprocs.c	/^static void APIENTRY InitTexCoord2fColor3fVertex3fvSUN (const GLfloat *tc, const GLfloat *c, const GLfloat *v)$/;"	f	file:
InitTexCoord2fColor4fNormal3fVertex3fSUN	include/GL/glprocs.c	/^static void APIENTRY InitTexCoord2fColor4fNormal3fVertex3fSUN (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)$/;"	f	file:
InitTexCoord2fColor4fNormal3fVertex3fvSUN	include/GL/glprocs.c	/^static void APIENTRY InitTexCoord2fColor4fNormal3fVertex3fvSUN (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v)$/;"	f	file:
InitTexCoord2fColor4ubVertex3fSUN	include/GL/glprocs.c	/^static void APIENTRY InitTexCoord2fColor4ubVertex3fSUN (GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z)$/;"	f	file:
InitTexCoord2fColor4ubVertex3fvSUN	include/GL/glprocs.c	/^static void APIENTRY InitTexCoord2fColor4ubVertex3fvSUN (const GLfloat *tc, const GLubyte *c, const GLfloat *v)$/;"	f	file:
InitTexCoord2fNormal3fVertex3fSUN	include/GL/glprocs.c	/^static void APIENTRY InitTexCoord2fNormal3fVertex3fSUN (GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)$/;"	f	file:
InitTexCoord2fNormal3fVertex3fvSUN	include/GL/glprocs.c	/^static void APIENTRY InitTexCoord2fNormal3fVertex3fvSUN (const GLfloat *tc, const GLfloat *n, const GLfloat *v)$/;"	f	file:
InitTexCoord2fVertex3fSUN	include/GL/glprocs.c	/^static void APIENTRY InitTexCoord2fVertex3fSUN (GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z)$/;"	f	file:
InitTexCoord2fVertex3fvSUN	include/GL/glprocs.c	/^static void APIENTRY InitTexCoord2fVertex3fvSUN (const GLfloat *tc, const GLfloat *v)$/;"	f	file:
InitTexCoord2hNV	include/GL/glprocs.c	/^static void APIENTRY InitTexCoord2hNV (GLhalfNV s, GLhalfNV t)$/;"	f	file:
InitTexCoord2hvNV	include/GL/glprocs.c	/^static void APIENTRY InitTexCoord2hvNV (const GLhalfNV *v)$/;"	f	file:
InitTexCoord3hNV	include/GL/glprocs.c	/^static void APIENTRY InitTexCoord3hNV (GLhalfNV s, GLhalfNV t, GLhalfNV r)$/;"	f	file:
InitTexCoord3hvNV	include/GL/glprocs.c	/^static void APIENTRY InitTexCoord3hvNV (const GLhalfNV *v)$/;"	f	file:
InitTexCoord4fColor4fNormal3fVertex4fSUN	include/GL/glprocs.c	/^static void APIENTRY InitTexCoord4fColor4fNormal3fVertex4fSUN (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w)$/;"	f	file:
InitTexCoord4fColor4fNormal3fVertex4fvSUN	include/GL/glprocs.c	/^static void APIENTRY InitTexCoord4fColor4fNormal3fVertex4fvSUN (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v)$/;"	f	file:
InitTexCoord4fVertex4fSUN	include/GL/glprocs.c	/^static void APIENTRY InitTexCoord4fVertex4fSUN (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w)$/;"	f	file:
InitTexCoord4fVertex4fvSUN	include/GL/glprocs.c	/^static void APIENTRY InitTexCoord4fVertex4fvSUN (const GLfloat *tc, const GLfloat *v)$/;"	f	file:
InitTexCoord4hNV	include/GL/glprocs.c	/^static void APIENTRY InitTexCoord4hNV (GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q)$/;"	f	file:
InitTexCoord4hvNV	include/GL/glprocs.c	/^static void APIENTRY InitTexCoord4hvNV (const GLhalfNV *v)$/;"	f	file:
InitTexCoordPointerEXT	include/GL/glprocs.c	/^static void APIENTRY InitTexCoordPointerEXT (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer)$/;"	f	file:
InitTexCoordPointerListIBM	include/GL/glprocs.c	/^static void APIENTRY InitTexCoordPointerListIBM (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride)$/;"	f	file:
InitTexCoordPointervINTEL	include/GL/glprocs.c	/^static void APIENTRY InitTexCoordPointervINTEL (GLint size, GLenum type, const GLvoid* *pointer)$/;"	f	file:
InitTexFilterFuncSGIS	include/GL/glprocs.c	/^static void APIENTRY InitTexFilterFuncSGIS (GLenum target, GLenum filter, GLsizei n, const GLfloat *weights)$/;"	f	file:
InitTexImage3D	include/GL/glprocs.c	/^static void APIENTRY InitTexImage3D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels)$/;"	f	file:
InitTexImage3DEXT	include/GL/glprocs.c	/^static void APIENTRY InitTexImage3DEXT (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels)$/;"	f	file:
InitTexImage4DSGIS	include/GL/glprocs.c	/^static void APIENTRY InitTexImage4DSGIS (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const GLvoid *pixels)$/;"	f	file:
InitTexSubImage1DEXT	include/GL/glprocs.c	/^static void APIENTRY InitTexSubImage1DEXT (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels)$/;"	f	file:
InitTexSubImage2DEXT	include/GL/glprocs.c	/^static void APIENTRY InitTexSubImage2DEXT (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)$/;"	f	file:
InitTexSubImage3D	include/GL/glprocs.c	/^static void APIENTRY InitTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels)$/;"	f	file:
InitTexSubImage3DEXT	include/GL/glprocs.c	/^static void APIENTRY InitTexSubImage3DEXT (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels)$/;"	f	file:
InitTexSubImage4DSGIS	include/GL/glprocs.c	/^static void APIENTRY InitTexSubImage4DSGIS (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const GLvoid *pixels)$/;"	f	file:
InitTextureColorMaskSGIS	include/GL/glprocs.c	/^static void APIENTRY InitTextureColorMaskSGIS (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha)$/;"	f	file:
InitTextureLightEXT	include/GL/glprocs.c	/^static void APIENTRY InitTextureLightEXT (GLenum pname)$/;"	f	file:
InitTextureMaterialEXT	include/GL/glprocs.c	/^static void APIENTRY InitTextureMaterialEXT (GLenum face, GLenum mode)$/;"	f	file:
InitTextureNormalEXT	include/GL/glprocs.c	/^static void APIENTRY InitTextureNormalEXT (GLenum mode)$/;"	f	file:
InitTrackMatrixNV	include/GL/glprocs.c	/^static void APIENTRY InitTrackMatrixNV (GLenum target, GLuint address, GLenum matrix, GLenum transform)$/;"	f	file:
InitUniform1fARB	include/GL/glprocs.c	/^static void APIENTRY InitUniform1fARB (GLint location, GLfloat v0)$/;"	f	file:
InitUniform1fvARB	include/GL/glprocs.c	/^static void APIENTRY InitUniform1fvARB (GLint location, GLsizei count, const GLfloat *value)$/;"	f	file:
InitUniform1iARB	include/GL/glprocs.c	/^static void APIENTRY InitUniform1iARB (GLint location, GLint v0)$/;"	f	file:
InitUniform1ivARB	include/GL/glprocs.c	/^static void APIENTRY InitUniform1ivARB (GLint location, GLsizei count, const GLint *value)$/;"	f	file:
InitUniform2fARB	include/GL/glprocs.c	/^static void APIENTRY InitUniform2fARB (GLint location, GLfloat v0, GLfloat v1)$/;"	f	file:
InitUniform2fvARB	include/GL/glprocs.c	/^static void APIENTRY InitUniform2fvARB (GLint location, GLsizei count, const GLfloat *value)$/;"	f	file:
InitUniform2iARB	include/GL/glprocs.c	/^static void APIENTRY InitUniform2iARB (GLint location, GLint v0, GLint v1)$/;"	f	file:
InitUniform2ivARB	include/GL/glprocs.c	/^static void APIENTRY InitUniform2ivARB (GLint location, GLsizei count, const GLint *value)$/;"	f	file:
InitUniform3fARB	include/GL/glprocs.c	/^static void APIENTRY InitUniform3fARB (GLint location, GLfloat v0, GLfloat v1, GLfloat v2)$/;"	f	file:
InitUniform3fvARB	include/GL/glprocs.c	/^static void APIENTRY InitUniform3fvARB (GLint location, GLsizei count, const GLfloat *value)$/;"	f	file:
InitUniform3iARB	include/GL/glprocs.c	/^static void APIENTRY InitUniform3iARB (GLint location, GLint v0, GLint v1, GLint v2)$/;"	f	file:
InitUniform3ivARB	include/GL/glprocs.c	/^static void APIENTRY InitUniform3ivARB (GLint location, GLsizei count, const GLint *value)$/;"	f	file:
InitUniform4fARB	include/GL/glprocs.c	/^static void APIENTRY InitUniform4fARB (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3)$/;"	f	file:
InitUniform4fvARB	include/GL/glprocs.c	/^static void APIENTRY InitUniform4fvARB (GLint location, GLsizei count, const GLfloat *value)$/;"	f	file:
InitUniform4iARB	include/GL/glprocs.c	/^static void APIENTRY InitUniform4iARB (GLint location, GLint v0, GLint v1, GLint v2, GLint v3)$/;"	f	file:
InitUniform4ivARB	include/GL/glprocs.c	/^static void APIENTRY InitUniform4ivARB (GLint location, GLsizei count, const GLint *value)$/;"	f	file:
InitUniformMatrix2fvARB	include/GL/glprocs.c	/^static void APIENTRY InitUniformMatrix2fvARB (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)$/;"	f	file:
InitUniformMatrix3fvARB	include/GL/glprocs.c	/^static void APIENTRY InitUniformMatrix3fvARB (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)$/;"	f	file:
InitUniformMatrix4fvARB	include/GL/glprocs.c	/^static void APIENTRY InitUniformMatrix4fvARB (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)$/;"	f	file:
InitUnlockArraysEXT	include/GL/glprocs.c	/^static void APIENTRY InitUnlockArraysEXT (void)$/;"	f	file:
InitUnmapBuffer	include/GL/glprocs.c	/^static GLboolean APIENTRY InitUnmapBuffer (GLenum target)$/;"	f	file:
InitUnmapBufferARB	include/GL/glprocs.c	/^static GLboolean APIENTRY InitUnmapBufferARB (GLenum target)$/;"	f	file:
InitUnmapObjectBufferATI	include/GL/glprocs.c	/^static void APIENTRY InitUnmapObjectBufferATI (GLuint buffer)$/;"	f	file:
InitUpdateObjectBufferATI	include/GL/glprocs.c	/^static void APIENTRY InitUpdateObjectBufferATI (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve)$/;"	f	file:
InitUseProgramObjectARB	include/GL/glprocs.c	/^static void APIENTRY InitUseProgramObjectARB (GLhandleARB programObj)$/;"	f	file:
InitValidateProgramARB	include/GL/glprocs.c	/^static void APIENTRY InitValidateProgramARB (GLhandleARB programObj)$/;"	f	file:
InitVariantArrayObjectATI	include/GL/glprocs.c	/^static void APIENTRY InitVariantArrayObjectATI (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset)$/;"	f	file:
InitVariantPointerEXT	include/GL/glprocs.c	/^static void APIENTRY InitVariantPointerEXT (GLuint id, GLenum type, GLuint stride, const GLvoid *addr)$/;"	f	file:
InitVariantbvEXT	include/GL/glprocs.c	/^static void APIENTRY InitVariantbvEXT (GLuint id, const GLbyte *addr)$/;"	f	file:
InitVariantdvEXT	include/GL/glprocs.c	/^static void APIENTRY InitVariantdvEXT (GLuint id, const GLdouble *addr)$/;"	f	file:
InitVariantfvEXT	include/GL/glprocs.c	/^static void APIENTRY InitVariantfvEXT (GLuint id, const GLfloat *addr)$/;"	f	file:
InitVariantivEXT	include/GL/glprocs.c	/^static void APIENTRY InitVariantivEXT (GLuint id, const GLint *addr)$/;"	f	file:
InitVariantsvEXT	include/GL/glprocs.c	/^static void APIENTRY InitVariantsvEXT (GLuint id, const GLshort *addr)$/;"	f	file:
InitVariantubvEXT	include/GL/glprocs.c	/^static void APIENTRY InitVariantubvEXT (GLuint id, const GLubyte *addr)$/;"	f	file:
InitVariantuivEXT	include/GL/glprocs.c	/^static void APIENTRY InitVariantuivEXT (GLuint id, const GLuint *addr)$/;"	f	file:
InitVariantusvEXT	include/GL/glprocs.c	/^static void APIENTRY InitVariantusvEXT (GLuint id, const GLushort *addr)$/;"	f	file:
InitVertex2hNV	include/GL/glprocs.c	/^static void APIENTRY InitVertex2hNV (GLhalfNV x, GLhalfNV y)$/;"	f	file:
InitVertex2hvNV	include/GL/glprocs.c	/^static void APIENTRY InitVertex2hvNV (const GLhalfNV *v)$/;"	f	file:
InitVertex3hNV	include/GL/glprocs.c	/^static void APIENTRY InitVertex3hNV (GLhalfNV x, GLhalfNV y, GLhalfNV z)$/;"	f	file:
InitVertex3hvNV	include/GL/glprocs.c	/^static void APIENTRY InitVertex3hvNV (const GLhalfNV *v)$/;"	f	file:
InitVertex4hNV	include/GL/glprocs.c	/^static void APIENTRY InitVertex4hNV (GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w)$/;"	f	file:
InitVertex4hvNV	include/GL/glprocs.c	/^static void APIENTRY InitVertex4hvNV (const GLhalfNV *v)$/;"	f	file:
InitVertexArrayParameteriAPPLE	include/GL/glprocs.c	/^static void APIENTRY InitVertexArrayParameteriAPPLE (GLenum pname, GLint param)$/;"	f	file:
InitVertexArrayRangeAPPLE	include/GL/glprocs.c	/^static void APIENTRY InitVertexArrayRangeAPPLE (GLsizei length, GLvoid *pointer)$/;"	f	file:
InitVertexArrayRangeNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexArrayRangeNV (GLsizei length, const GLvoid *pointer)$/;"	f	file:
InitVertexAttrib1dARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib1dARB (GLuint index, GLdouble x)$/;"	f	file:
InitVertexAttrib1dNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib1dNV (GLuint index, GLdouble x)$/;"	f	file:
InitVertexAttrib1dvARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib1dvARB (GLuint index, const GLdouble *v)$/;"	f	file:
InitVertexAttrib1dvNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib1dvNV (GLuint index, const GLdouble *v)$/;"	f	file:
InitVertexAttrib1fARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib1fARB (GLuint index, GLfloat x)$/;"	f	file:
InitVertexAttrib1fNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib1fNV (GLuint index, GLfloat x)$/;"	f	file:
InitVertexAttrib1fvARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib1fvARB (GLuint index, const GLfloat *v)$/;"	f	file:
InitVertexAttrib1fvNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib1fvNV (GLuint index, const GLfloat *v)$/;"	f	file:
InitVertexAttrib1hNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib1hNV (GLuint index, GLhalfNV x)$/;"	f	file:
InitVertexAttrib1hvNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib1hvNV (GLuint index, const GLhalfNV *v)$/;"	f	file:
InitVertexAttrib1sARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib1sARB (GLuint index, GLshort x)$/;"	f	file:
InitVertexAttrib1sNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib1sNV (GLuint index, GLshort x)$/;"	f	file:
InitVertexAttrib1svARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib1svARB (GLuint index, const GLshort *v)$/;"	f	file:
InitVertexAttrib1svNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib1svNV (GLuint index, const GLshort *v)$/;"	f	file:
InitVertexAttrib2dARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib2dARB (GLuint index, GLdouble x, GLdouble y)$/;"	f	file:
InitVertexAttrib2dNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib2dNV (GLuint index, GLdouble x, GLdouble y)$/;"	f	file:
InitVertexAttrib2dvARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib2dvARB (GLuint index, const GLdouble *v)$/;"	f	file:
InitVertexAttrib2dvNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib2dvNV (GLuint index, const GLdouble *v)$/;"	f	file:
InitVertexAttrib2fARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib2fARB (GLuint index, GLfloat x, GLfloat y)$/;"	f	file:
InitVertexAttrib2fNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib2fNV (GLuint index, GLfloat x, GLfloat y)$/;"	f	file:
InitVertexAttrib2fvARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib2fvARB (GLuint index, const GLfloat *v)$/;"	f	file:
InitVertexAttrib2fvNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib2fvNV (GLuint index, const GLfloat *v)$/;"	f	file:
InitVertexAttrib2hNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib2hNV (GLuint index, GLhalfNV x, GLhalfNV y)$/;"	f	file:
InitVertexAttrib2hvNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib2hvNV (GLuint index, const GLhalfNV *v)$/;"	f	file:
InitVertexAttrib2sARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib2sARB (GLuint index, GLshort x, GLshort y)$/;"	f	file:
InitVertexAttrib2sNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib2sNV (GLuint index, GLshort x, GLshort y)$/;"	f	file:
InitVertexAttrib2svARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib2svARB (GLuint index, const GLshort *v)$/;"	f	file:
InitVertexAttrib2svNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib2svNV (GLuint index, const GLshort *v)$/;"	f	file:
InitVertexAttrib3dARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib3dARB (GLuint index, GLdouble x, GLdouble y, GLdouble z)$/;"	f	file:
InitVertexAttrib3dNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib3dNV (GLuint index, GLdouble x, GLdouble y, GLdouble z)$/;"	f	file:
InitVertexAttrib3dvARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib3dvARB (GLuint index, const GLdouble *v)$/;"	f	file:
InitVertexAttrib3dvNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib3dvNV (GLuint index, const GLdouble *v)$/;"	f	file:
InitVertexAttrib3fARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib3fARB (GLuint index, GLfloat x, GLfloat y, GLfloat z)$/;"	f	file:
InitVertexAttrib3fNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib3fNV (GLuint index, GLfloat x, GLfloat y, GLfloat z)$/;"	f	file:
InitVertexAttrib3fvARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib3fvARB (GLuint index, const GLfloat *v)$/;"	f	file:
InitVertexAttrib3fvNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib3fvNV (GLuint index, const GLfloat *v)$/;"	f	file:
InitVertexAttrib3hNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib3hNV (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z)$/;"	f	file:
InitVertexAttrib3hvNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib3hvNV (GLuint index, const GLhalfNV *v)$/;"	f	file:
InitVertexAttrib3sARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib3sARB (GLuint index, GLshort x, GLshort y, GLshort z)$/;"	f	file:
InitVertexAttrib3sNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib3sNV (GLuint index, GLshort x, GLshort y, GLshort z)$/;"	f	file:
InitVertexAttrib3svARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib3svARB (GLuint index, const GLshort *v)$/;"	f	file:
InitVertexAttrib3svNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib3svNV (GLuint index, const GLshort *v)$/;"	f	file:
InitVertexAttrib4NbvARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib4NbvARB (GLuint index, const GLbyte *v)$/;"	f	file:
InitVertexAttrib4NivARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib4NivARB (GLuint index, const GLint *v)$/;"	f	file:
InitVertexAttrib4NsvARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib4NsvARB (GLuint index, const GLshort *v)$/;"	f	file:
InitVertexAttrib4NubARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib4NubARB (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w)$/;"	f	file:
InitVertexAttrib4NubvARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib4NubvARB (GLuint index, const GLubyte *v)$/;"	f	file:
InitVertexAttrib4NuivARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib4NuivARB (GLuint index, const GLuint *v)$/;"	f	file:
InitVertexAttrib4NusvARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib4NusvARB (GLuint index, const GLushort *v)$/;"	f	file:
InitVertexAttrib4bvARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib4bvARB (GLuint index, const GLbyte *v)$/;"	f	file:
InitVertexAttrib4dARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib4dARB (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)$/;"	f	file:
InitVertexAttrib4dNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib4dNV (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)$/;"	f	file:
InitVertexAttrib4dvARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib4dvARB (GLuint index, const GLdouble *v)$/;"	f	file:
InitVertexAttrib4dvNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib4dvNV (GLuint index, const GLdouble *v)$/;"	f	file:
InitVertexAttrib4fARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib4fARB (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)$/;"	f	file:
InitVertexAttrib4fNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib4fNV (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)$/;"	f	file:
InitVertexAttrib4fvARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib4fvARB (GLuint index, const GLfloat *v)$/;"	f	file:
InitVertexAttrib4fvNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib4fvNV (GLuint index, const GLfloat *v)$/;"	f	file:
InitVertexAttrib4hNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib4hNV (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w)$/;"	f	file:
InitVertexAttrib4hvNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib4hvNV (GLuint index, const GLhalfNV *v)$/;"	f	file:
InitVertexAttrib4ivARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib4ivARB (GLuint index, const GLint *v)$/;"	f	file:
InitVertexAttrib4sARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib4sARB (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w)$/;"	f	file:
InitVertexAttrib4sNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib4sNV (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w)$/;"	f	file:
InitVertexAttrib4svARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib4svARB (GLuint index, const GLshort *v)$/;"	f	file:
InitVertexAttrib4svNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib4svNV (GLuint index, const GLshort *v)$/;"	f	file:
InitVertexAttrib4ubNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib4ubNV (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w)$/;"	f	file:
InitVertexAttrib4ubvARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib4ubvARB (GLuint index, const GLubyte *v)$/;"	f	file:
InitVertexAttrib4ubvNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib4ubvNV (GLuint index, const GLubyte *v)$/;"	f	file:
InitVertexAttrib4uivARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib4uivARB (GLuint index, const GLuint *v)$/;"	f	file:
InitVertexAttrib4usvARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttrib4usvARB (GLuint index, const GLushort *v)$/;"	f	file:
InitVertexAttribArrayObjectATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttribArrayObjectATI (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset)$/;"	f	file:
InitVertexAttribPointerARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttribPointerARB (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer)$/;"	f	file:
InitVertexAttribPointerNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttribPointerNV (GLuint index, GLint fsize, GLenum type, GLsizei stride, const GLvoid *pointer)$/;"	f	file:
InitVertexAttribs1dvNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttribs1dvNV (GLuint index, GLsizei count, const GLdouble *v)$/;"	f	file:
InitVertexAttribs1fvNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttribs1fvNV (GLuint index, GLsizei count, const GLfloat *v)$/;"	f	file:
InitVertexAttribs1hvNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttribs1hvNV (GLuint index, GLsizei n, const GLhalfNV *v)$/;"	f	file:
InitVertexAttribs1svNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttribs1svNV (GLuint index, GLsizei count, const GLshort *v)$/;"	f	file:
InitVertexAttribs2dvNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttribs2dvNV (GLuint index, GLsizei count, const GLdouble *v)$/;"	f	file:
InitVertexAttribs2fvNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttribs2fvNV (GLuint index, GLsizei count, const GLfloat *v)$/;"	f	file:
InitVertexAttribs2hvNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttribs2hvNV (GLuint index, GLsizei n, const GLhalfNV *v)$/;"	f	file:
InitVertexAttribs2svNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttribs2svNV (GLuint index, GLsizei count, const GLshort *v)$/;"	f	file:
InitVertexAttribs3dvNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttribs3dvNV (GLuint index, GLsizei count, const GLdouble *v)$/;"	f	file:
InitVertexAttribs3fvNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttribs3fvNV (GLuint index, GLsizei count, const GLfloat *v)$/;"	f	file:
InitVertexAttribs3hvNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttribs3hvNV (GLuint index, GLsizei n, const GLhalfNV *v)$/;"	f	file:
InitVertexAttribs3svNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttribs3svNV (GLuint index, GLsizei count, const GLshort *v)$/;"	f	file:
InitVertexAttribs4dvNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttribs4dvNV (GLuint index, GLsizei count, const GLdouble *v)$/;"	f	file:
InitVertexAttribs4fvNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttribs4fvNV (GLuint index, GLsizei count, const GLfloat *v)$/;"	f	file:
InitVertexAttribs4hvNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttribs4hvNV (GLuint index, GLsizei n, const GLhalfNV *v)$/;"	f	file:
InitVertexAttribs4svNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttribs4svNV (GLuint index, GLsizei count, const GLshort *v)$/;"	f	file:
InitVertexAttribs4ubvNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexAttribs4ubvNV (GLuint index, GLsizei count, const GLubyte *v)$/;"	f	file:
InitVertexBlendARB	include/GL/glprocs.c	/^static void APIENTRY InitVertexBlendARB (GLint count)$/;"	f	file:
InitVertexBlendEnvfATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexBlendEnvfATI (GLenum pname, GLfloat param)$/;"	f	file:
InitVertexBlendEnviATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexBlendEnviATI (GLenum pname, GLint param)$/;"	f	file:
InitVertexPointerEXT	include/GL/glprocs.c	/^static void APIENTRY InitVertexPointerEXT (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer)$/;"	f	file:
InitVertexPointerListIBM	include/GL/glprocs.c	/^static void APIENTRY InitVertexPointerListIBM (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride)$/;"	f	file:
InitVertexPointervINTEL	include/GL/glprocs.c	/^static void APIENTRY InitVertexPointervINTEL (GLint size, GLenum type, const GLvoid* *pointer)$/;"	f	file:
InitVertexStream1dATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexStream1dATI (GLenum stream, GLdouble x)$/;"	f	file:
InitVertexStream1dvATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexStream1dvATI (GLenum stream, const GLdouble *coords)$/;"	f	file:
InitVertexStream1fATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexStream1fATI (GLenum stream, GLfloat x)$/;"	f	file:
InitVertexStream1fvATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexStream1fvATI (GLenum stream, const GLfloat *coords)$/;"	f	file:
InitVertexStream1iATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexStream1iATI (GLenum stream, GLint x)$/;"	f	file:
InitVertexStream1ivATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexStream1ivATI (GLenum stream, const GLint *coords)$/;"	f	file:
InitVertexStream1sATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexStream1sATI (GLenum stream, GLshort x)$/;"	f	file:
InitVertexStream1svATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexStream1svATI (GLenum stream, const GLshort *coords)$/;"	f	file:
InitVertexStream2dATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexStream2dATI (GLenum stream, GLdouble x, GLdouble y)$/;"	f	file:
InitVertexStream2dvATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexStream2dvATI (GLenum stream, const GLdouble *coords)$/;"	f	file:
InitVertexStream2fATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexStream2fATI (GLenum stream, GLfloat x, GLfloat y)$/;"	f	file:
InitVertexStream2fvATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexStream2fvATI (GLenum stream, const GLfloat *coords)$/;"	f	file:
InitVertexStream2iATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexStream2iATI (GLenum stream, GLint x, GLint y)$/;"	f	file:
InitVertexStream2ivATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexStream2ivATI (GLenum stream, const GLint *coords)$/;"	f	file:
InitVertexStream2sATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexStream2sATI (GLenum stream, GLshort x, GLshort y)$/;"	f	file:
InitVertexStream2svATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexStream2svATI (GLenum stream, const GLshort *coords)$/;"	f	file:
InitVertexStream3dATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexStream3dATI (GLenum stream, GLdouble x, GLdouble y, GLdouble z)$/;"	f	file:
InitVertexStream3dvATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexStream3dvATI (GLenum stream, const GLdouble *coords)$/;"	f	file:
InitVertexStream3fATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexStream3fATI (GLenum stream, GLfloat x, GLfloat y, GLfloat z)$/;"	f	file:
InitVertexStream3fvATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexStream3fvATI (GLenum stream, const GLfloat *coords)$/;"	f	file:
InitVertexStream3iATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexStream3iATI (GLenum stream, GLint x, GLint y, GLint z)$/;"	f	file:
InitVertexStream3ivATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexStream3ivATI (GLenum stream, const GLint *coords)$/;"	f	file:
InitVertexStream3sATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexStream3sATI (GLenum stream, GLshort x, GLshort y, GLshort z)$/;"	f	file:
InitVertexStream3svATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexStream3svATI (GLenum stream, const GLshort *coords)$/;"	f	file:
InitVertexStream4dATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexStream4dATI (GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w)$/;"	f	file:
InitVertexStream4dvATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexStream4dvATI (GLenum stream, const GLdouble *coords)$/;"	f	file:
InitVertexStream4fATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexStream4fATI (GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w)$/;"	f	file:
InitVertexStream4fvATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexStream4fvATI (GLenum stream, const GLfloat *coords)$/;"	f	file:
InitVertexStream4iATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexStream4iATI (GLenum stream, GLint x, GLint y, GLint z, GLint w)$/;"	f	file:
InitVertexStream4ivATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexStream4ivATI (GLenum stream, const GLint *coords)$/;"	f	file:
InitVertexStream4sATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexStream4sATI (GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w)$/;"	f	file:
InitVertexStream4svATI	include/GL/glprocs.c	/^static void APIENTRY InitVertexStream4svATI (GLenum stream, const GLshort *coords)$/;"	f	file:
InitVertexWeightPointerEXT	include/GL/glprocs.c	/^static void APIENTRY InitVertexWeightPointerEXT (GLsizei size, GLenum type, GLsizei stride, const GLvoid *pointer)$/;"	f	file:
InitVertexWeightfEXT	include/GL/glprocs.c	/^static void APIENTRY InitVertexWeightfEXT (GLfloat weight)$/;"	f	file:
InitVertexWeightfvEXT	include/GL/glprocs.c	/^static void APIENTRY InitVertexWeightfvEXT (const GLfloat *weight)$/;"	f	file:
InitVertexWeighthNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexWeighthNV (GLhalfNV weight)$/;"	f	file:
InitVertexWeighthvNV	include/GL/glprocs.c	/^static void APIENTRY InitVertexWeighthvNV (const GLhalfNV *weight)$/;"	f	file:
InitWaitForMscOML	include/GL/glprocs.c	/^static BOOL WINAPI InitWaitForMscOML (HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder, INT64 *ust, INT64 *msc, INT64 *sbc)$/;"	f	file:
InitWaitForSbcOML	include/GL/glprocs.c	/^static BOOL WINAPI InitWaitForSbcOML (HDC hdc, INT64 target_sbc, INT64 *ust, INT64 *msc, INT64 *sbc)$/;"	f	file:
InitWeightPointerARB	include/GL/glprocs.c	/^static void APIENTRY InitWeightPointerARB (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)$/;"	f	file:
InitWeightbvARB	include/GL/glprocs.c	/^static void APIENTRY InitWeightbvARB (GLint size, const GLbyte *weights)$/;"	f	file:
InitWeightdvARB	include/GL/glprocs.c	/^static void APIENTRY InitWeightdvARB (GLint size, const GLdouble *weights)$/;"	f	file:
InitWeightfvARB	include/GL/glprocs.c	/^static void APIENTRY InitWeightfvARB (GLint size, const GLfloat *weights)$/;"	f	file:
InitWeightivARB	include/GL/glprocs.c	/^static void APIENTRY InitWeightivARB (GLint size, const GLint *weights)$/;"	f	file:
InitWeightsvARB	include/GL/glprocs.c	/^static void APIENTRY InitWeightsvARB (GLint size, const GLshort *weights)$/;"	f	file:
InitWeightubvARB	include/GL/glprocs.c	/^static void APIENTRY InitWeightubvARB (GLint size, const GLubyte *weights)$/;"	f	file:
InitWeightuivARB	include/GL/glprocs.c	/^static void APIENTRY InitWeightuivARB (GLint size, const GLuint *weights)$/;"	f	file:
InitWeightusvARB	include/GL/glprocs.c	/^static void APIENTRY InitWeightusvARB (GLint size, const GLushort *weights)$/;"	f	file:
InitWindowPos2d	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos2d (GLdouble x, GLdouble y)$/;"	f	file:
InitWindowPos2dARB	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos2dARB (GLdouble x, GLdouble y)$/;"	f	file:
InitWindowPos2dMESA	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos2dMESA (GLdouble x, GLdouble y)$/;"	f	file:
InitWindowPos2dv	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos2dv (const GLdouble *v)$/;"	f	file:
InitWindowPos2dvARB	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos2dvARB (const GLdouble *v)$/;"	f	file:
InitWindowPos2dvMESA	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos2dvMESA (const GLdouble *v)$/;"	f	file:
InitWindowPos2f	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos2f (GLfloat x, GLfloat y)$/;"	f	file:
InitWindowPos2fARB	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos2fARB (GLfloat x, GLfloat y)$/;"	f	file:
InitWindowPos2fMESA	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos2fMESA (GLfloat x, GLfloat y)$/;"	f	file:
InitWindowPos2fv	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos2fv (const GLfloat *v)$/;"	f	file:
InitWindowPos2fvARB	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos2fvARB (const GLfloat *v)$/;"	f	file:
InitWindowPos2fvMESA	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos2fvMESA (const GLfloat *v)$/;"	f	file:
InitWindowPos2i	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos2i (GLint x, GLint y)$/;"	f	file:
InitWindowPos2iARB	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos2iARB (GLint x, GLint y)$/;"	f	file:
InitWindowPos2iMESA	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos2iMESA (GLint x, GLint y)$/;"	f	file:
InitWindowPos2iv	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos2iv (const GLint *v)$/;"	f	file:
InitWindowPos2ivARB	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos2ivARB (const GLint *v)$/;"	f	file:
InitWindowPos2ivMESA	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos2ivMESA (const GLint *v)$/;"	f	file:
InitWindowPos2s	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos2s (GLshort x, GLshort y)$/;"	f	file:
InitWindowPos2sARB	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos2sARB (GLshort x, GLshort y)$/;"	f	file:
InitWindowPos2sMESA	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos2sMESA (GLshort x, GLshort y)$/;"	f	file:
InitWindowPos2sv	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos2sv (const GLshort *v)$/;"	f	file:
InitWindowPos2svARB	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos2svARB (const GLshort *v)$/;"	f	file:
InitWindowPos2svMESA	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos2svMESA (const GLshort *v)$/;"	f	file:
InitWindowPos3d	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos3d (GLdouble x, GLdouble y, GLdouble z)$/;"	f	file:
InitWindowPos3dARB	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos3dARB (GLdouble x, GLdouble y, GLdouble z)$/;"	f	file:
InitWindowPos3dMESA	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos3dMESA (GLdouble x, GLdouble y, GLdouble z)$/;"	f	file:
InitWindowPos3dv	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos3dv (const GLdouble *v)$/;"	f	file:
InitWindowPos3dvARB	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos3dvARB (const GLdouble *v)$/;"	f	file:
InitWindowPos3dvMESA	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos3dvMESA (const GLdouble *v)$/;"	f	file:
InitWindowPos3f	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos3f (GLfloat x, GLfloat y, GLfloat z)$/;"	f	file:
InitWindowPos3fARB	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos3fARB (GLfloat x, GLfloat y, GLfloat z)$/;"	f	file:
InitWindowPos3fMESA	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos3fMESA (GLfloat x, GLfloat y, GLfloat z)$/;"	f	file:
InitWindowPos3fv	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos3fv (const GLfloat *v)$/;"	f	file:
InitWindowPos3fvARB	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos3fvARB (const GLfloat *v)$/;"	f	file:
InitWindowPos3fvMESA	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos3fvMESA (const GLfloat *v)$/;"	f	file:
InitWindowPos3i	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos3i (GLint x, GLint y, GLint z)$/;"	f	file:
InitWindowPos3iARB	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos3iARB (GLint x, GLint y, GLint z)$/;"	f	file:
InitWindowPos3iMESA	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos3iMESA (GLint x, GLint y, GLint z)$/;"	f	file:
InitWindowPos3iv	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos3iv (const GLint *v)$/;"	f	file:
InitWindowPos3ivARB	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos3ivARB (const GLint *v)$/;"	f	file:
InitWindowPos3ivMESA	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos3ivMESA (const GLint *v)$/;"	f	file:
InitWindowPos3s	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos3s (GLshort x, GLshort y, GLshort z)$/;"	f	file:
InitWindowPos3sARB	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos3sARB (GLshort x, GLshort y, GLshort z)$/;"	f	file:
InitWindowPos3sMESA	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos3sMESA (GLshort x, GLshort y, GLshort z)$/;"	f	file:
InitWindowPos3sv	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos3sv (const GLshort *v)$/;"	f	file:
InitWindowPos3svARB	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos3svARB (const GLshort *v)$/;"	f	file:
InitWindowPos3svMESA	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos3svMESA (const GLshort *v)$/;"	f	file:
InitWindowPos4dMESA	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos4dMESA (GLdouble x, GLdouble y, GLdouble z, GLdouble w)$/;"	f	file:
InitWindowPos4dvMESA	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos4dvMESA (const GLdouble *v)$/;"	f	file:
InitWindowPos4fMESA	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos4fMESA (GLfloat x, GLfloat y, GLfloat z, GLfloat w)$/;"	f	file:
InitWindowPos4fvMESA	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos4fvMESA (const GLfloat *v)$/;"	f	file:
InitWindowPos4iMESA	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos4iMESA (GLint x, GLint y, GLint z, GLint w)$/;"	f	file:
InitWindowPos4ivMESA	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos4ivMESA (const GLint *v)$/;"	f	file:
InitWindowPos4sMESA	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos4sMESA (GLshort x, GLshort y, GLshort z, GLshort w)$/;"	f	file:
InitWindowPos4svMESA	include/GL/glprocs.c	/^static void APIENTRY InitWindowPos4svMESA (const GLshort *v)$/;"	f	file:
InitWriteMaskEXT	include/GL/glprocs.c	/^static void APIENTRY InitWriteMaskEXT (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW)$/;"	f	file:
InsertComponentEXT	include/GL/glprocs.h	/^  void (APIENTRY *InsertComponentEXT) (GLuint res, GLuint src, GLuint num);$/;"	m	struct:__anon1
InstrumentsBufferSGIX	include/GL/glprocs.h	/^  void (APIENTRY *InstrumentsBufferSGIX) (GLsizei size, GLint *buffer);$/;"	m	struct:__anon1
IsAsyncMarkerSGIX	include/GL/glprocs.h	/^  GLboolean (APIENTRY *IsAsyncMarkerSGIX) (GLuint marker);$/;"	m	struct:__anon1
IsBuffer	include/GL/glprocs.h	/^  GLboolean (APIENTRY *IsBuffer) (GLuint buffer);$/;"	m	struct:__anon1
IsBufferARB	include/GL/glprocs.h	/^  GLboolean (APIENTRY *IsBufferARB) (GLuint buffer);$/;"	m	struct:__anon1
IsEnabledFrameLockI3D	include/GL/glprocs.h	/^  BOOL (WINAPI *IsEnabledFrameLockI3D) (BOOL *pFlag);$/;"	m	struct:__anon1
IsEnabledGenlockI3D	include/GL/glprocs.h	/^  BOOL (WINAPI *IsEnabledGenlockI3D) (HDC hDC, BOOL *pFlag);$/;"	m	struct:__anon1
IsFenceAPPLE	include/GL/glprocs.h	/^  GLboolean (APIENTRY *IsFenceAPPLE) (GLuint fence);$/;"	m	struct:__anon1
IsFenceNV	include/GL/glprocs.h	/^  GLboolean (APIENTRY *IsFenceNV) (GLuint fence);$/;"	m	struct:__anon1
IsObjectBufferATI	include/GL/glprocs.h	/^  GLboolean (APIENTRY *IsObjectBufferATI) (GLuint buffer);$/;"	m	struct:__anon1
IsOcclusionQueryNV	include/GL/glprocs.h	/^  GLboolean (APIENTRY *IsOcclusionQueryNV) (GLuint id);$/;"	m	struct:__anon1
IsProgramARB	include/GL/glprocs.h	/^  GLboolean (APIENTRY *IsProgramARB) (GLuint program);$/;"	m	struct:__anon1
IsProgramNV	include/GL/glprocs.h	/^  GLboolean (APIENTRY *IsProgramNV) (GLuint id);$/;"	m	struct:__anon1
IsQuery	include/GL/glprocs.h	/^  GLboolean (APIENTRY *IsQuery) (GLuint id);$/;"	m	struct:__anon1
IsQueryARB	include/GL/glprocs.h	/^  GLboolean (APIENTRY *IsQueryARB) (GLuint id);$/;"	m	struct:__anon1
IsTextureEXT	include/GL/glprocs.h	/^  GLboolean (APIENTRY *IsTextureEXT) (GLuint texture);$/;"	m	struct:__anon1
IsVariantEnabledEXT	include/GL/glprocs.h	/^  GLboolean (APIENTRY *IsVariantEnabledEXT) (GLuint id, GLenum cap);$/;"	m	struct:__anon1
IsVertexArrayAPPLE	include/GL/glprocs.h	/^  GLboolean (APIENTRY *IsVertexArrayAPPLE) (GLuint array);$/;"	m	struct:__anon1
LDATA	include/pngconf.h	1145;"	d
LDATA	include/pngconf.h	1147;"	d
LightEnviSGIX	include/GL/glprocs.h	/^  void (APIENTRY *LightEnviSGIX) (GLenum pname, GLint param);$/;"	m	struct:__anon1
LinearSolver	FieldToolbox.cpp	/^FieldToolbox::LinearSolver(float a, float c, ScalarField *SolutionField) {$/;"	f	class:FieldToolbox
LinearSolver	FieldToolbox.cpp	/^FieldToolbox::LinearSolver(float a, float c, VectorField *SolutionField) {$/;"	f	class:FieldToolbox
LinkProgramARB	include/GL/glprocs.h	/^  void (APIENTRY *LinkProgramARB) (GLhandleARB programObj);$/;"	m	struct:__anon1
ListParameterfSGIX	include/GL/glprocs.h	/^  void (APIENTRY *ListParameterfSGIX) (GLuint list, GLenum pname, GLfloat param);$/;"	m	struct:__anon1
ListParameterfvSGIX	include/GL/glprocs.h	/^  void (APIENTRY *ListParameterfvSGIX) (GLuint list, GLenum pname, const GLfloat *params);$/;"	m	struct:__anon1
ListParameteriSGIX	include/GL/glprocs.h	/^  void (APIENTRY *ListParameteriSGIX) (GLuint list, GLenum pname, GLint param);$/;"	m	struct:__anon1
ListParameterivSGIX	include/GL/glprocs.h	/^  void (APIENTRY *ListParameterivSGIX) (GLuint list, GLenum pname, const GLint *params);$/;"	m	struct:__anon1
LoadDisplayColorTableEXT	include/GL/glprocs.h	/^  GLboolean (WINAPI *LoadDisplayColorTableEXT) (const GLushort *table, GLuint length);$/;"	m	struct:__anon1
LoadIdentityDeformationMapSGIX	include/GL/glprocs.h	/^  void (APIENTRY *LoadIdentityDeformationMapSGIX) (GLbitfield mask);$/;"	m	struct:__anon1
LoadProgramNV	include/GL/glprocs.h	/^  void (APIENTRY *LoadProgramNV) (GLenum target, GLuint id, GLsizei len, const GLubyte *program);$/;"	m	struct:__anon1
LoadTransposeMatrixd	include/GL/glprocs.h	/^  void (APIENTRY *LoadTransposeMatrixd) (const GLdouble *m);$/;"	m	struct:__anon1
LoadTransposeMatrixdARB	include/GL/glprocs.h	/^  void (APIENTRY *LoadTransposeMatrixdARB) (const GLdouble *m);$/;"	m	struct:__anon1
LoadTransposeMatrixf	include/GL/glprocs.h	/^  void (APIENTRY *LoadTransposeMatrixf) (const GLfloat *m);$/;"	m	struct:__anon1
LoadTransposeMatrixfARB	include/GL/glprocs.h	/^  void (APIENTRY *LoadTransposeMatrixfARB) (const GLfloat *m);$/;"	m	struct:__anon1
LockArraysEXT	include/GL/glprocs.h	/^  void (APIENTRY *LockArraysEXT) (GLint first, GLsizei count);$/;"	m	struct:__anon1
MACOS	include/pngconf.h	299;"	d
MAX	include/gfx/gfx.h	47;"	d
MAX	include/gfx/gfx.h	53;"	d
MAXSEG_64K	include/zconf.h	89;"	d
MAX_MEM_LEVEL	include/zconf.h	136;"	d
MAX_MEM_LEVEL	include/zconf.h	138;"	d
MAX_STEPS	particles/linearSolver.h	12;"	d
MAX_WBITS	include/zconf.h	148;"	d
MIN	include/gfx/gfx.h	46;"	d
MIN	include/gfx/gfx.h	52;"	d
MSDOS	include/zconf.h	63;"	d
M_PI	include/gfx/gfx.h	57;"	d
MakeContextCurrentARB	include/GL/glprocs.h	/^  BOOL (WINAPI *MakeContextCurrentARB) (HDC hDrawDC, HDC hReadDC, HGLRC hglrc);$/;"	m	struct:__anon1
MakeContextCurrentEXT	include/GL/glprocs.h	/^  BOOL (WINAPI *MakeContextCurrentEXT) (HDC hDrawDC, HDC hReadDC, HGLRC hglrc);$/;"	m	struct:__anon1
MapBuffer	include/GL/glprocs.h	/^  GLvoid* (APIENTRY *MapBuffer) (GLenum target, GLenum access);$/;"	m	struct:__anon1
MapBufferARB	include/GL/glprocs.h	/^  GLvoid* (APIENTRY *MapBufferARB) (GLenum target, GLenum access);$/;"	m	struct:__anon1
MapControlPointsNV	include/GL/glprocs.h	/^  void (APIENTRY *MapControlPointsNV) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const GLvoid *points);$/;"	m	struct:__anon1
MapObjectBufferATI	include/GL/glprocs.h	/^  GLvoid* (APIENTRY *MapObjectBufferATI) (GLuint buffer);$/;"	m	struct:__anon1
MapParameterfvNV	include/GL/glprocs.h	/^  void (APIENTRY *MapParameterfvNV) (GLenum target, GLenum pname, const GLfloat *params);$/;"	m	struct:__anon1
MapParameterivNV	include/GL/glprocs.h	/^  void (APIENTRY *MapParameterivNV) (GLenum target, GLenum pname, const GLint *params);$/;"	m	struct:__anon1
Mat2	include/gfx/mat2.h	/^    Mat2() { *this = 0.0; }$/;"	f	class:gfx::Mat2
Mat2	include/gfx/mat2.h	/^    Mat2(const Mat2 &m) { *this = m; }$/;"	f	class:gfx::Mat2
Mat2	include/gfx/mat2.h	/^    Mat2(const Vec2 &r0,const Vec2 &r1) { row[0]=r0; row[1]=r1; }$/;"	f	class:gfx::Mat2
Mat2	include/gfx/mat2.h	/^    Mat2(double a, double b, double c, double d)$/;"	f	class:gfx::Mat2
Mat2	include/gfx/mat2.h	/^class Mat2$/;"	c	namespace:gfx
Mat3	include/gfx/mat3.h	/^    Mat3() { *this = 0.0; }$/;"	f	class:gfx::Mat3
Mat3	include/gfx/mat3.h	/^    Mat3(const Mat3& m) { *this = m; }$/;"	f	class:gfx::Mat3
Mat3	include/gfx/mat3.h	/^    Mat3(const Vec3& r0,const Vec3& r1,const Vec3& r2)$/;"	f	class:gfx::Mat3
Mat3	include/gfx/mat3.h	/^class Mat3$/;"	c	namespace:gfx
Mat4	include/gfx/mat4.h	/^    Mat4() { *this = 0.0; }$/;"	f	class:gfx::Mat4
Mat4	include/gfx/mat4.h	/^    Mat4(const Mat4& m) { *this = m; }$/;"	f	class:gfx::Mat4
Mat4	include/gfx/mat4.h	/^    Mat4(const Vec4& r0,const Vec4& r1,const Vec4& r2,const Vec4& r3)$/;"	f	class:gfx::Mat4
Mat4	include/gfx/mat4.h	/^class Mat4$/;"	c	namespace:gfx
MatrixIndexPointerARB	include/GL/glprocs.h	/^  void (APIENTRY *MatrixIndexPointerARB) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	m	struct:__anon1
MatrixIndexubvARB	include/GL/glprocs.h	/^  void (APIENTRY *MatrixIndexubvARB) (GLint size, const GLubyte *indices);$/;"	m	struct:__anon1
MatrixIndexuivARB	include/GL/glprocs.h	/^  void (APIENTRY *MatrixIndexuivARB) (GLint size, const GLuint *indices);$/;"	m	struct:__anon1
MatrixIndexusvARB	include/GL/glprocs.h	/^  void (APIENTRY *MatrixIndexusvARB) (GLint size, const GLushort *indices);$/;"	m	struct:__anon1
Midpoint	particles/Solver.cpp	/^void Midpoint(std::vector< Particle * > pVector, std::vector< Force * > fVector, float dt, std::vector< Constraint * > constraints) {$/;"	f
Minmax	include/GL/glprocs.h	/^  void (APIENTRY *Minmax) (GLenum target, GLenum internalformat, GLboolean sink);$/;"	m	struct:__anon1
MinmaxEXT	include/GL/glprocs.h	/^  void (APIENTRY *MinmaxEXT) (GLenum target, GLenum internalformat, GLboolean sink);$/;"	m	struct:__anon1
MouseForce	particles/MouseForce.cpp	/^MouseForce::MouseForce(std::vector<Particle*> particles, double dist, double ks, double kd, double radius) :$/;"	f	class:MouseForce
MouseForce	particles/MouseForce.h	/^class MouseForce : public Force $/;"	c
MultTransposeMatrixd	include/GL/glprocs.h	/^  void (APIENTRY *MultTransposeMatrixd) (const GLdouble *m);$/;"	m	struct:__anon1
MultTransposeMatrixdARB	include/GL/glprocs.h	/^  void (APIENTRY *MultTransposeMatrixdARB) (const GLdouble *m);$/;"	m	struct:__anon1
MultTransposeMatrixf	include/GL/glprocs.h	/^  void (APIENTRY *MultTransposeMatrixf) (const GLfloat *m);$/;"	m	struct:__anon1
MultTransposeMatrixfARB	include/GL/glprocs.h	/^  void (APIENTRY *MultTransposeMatrixfARB) (const GLfloat *m);$/;"	m	struct:__anon1
MultiDrawArrays	include/GL/glprocs.h	/^  void (APIENTRY *MultiDrawArrays) (GLenum mode, GLint *first, GLsizei *count, GLsizei primcount);$/;"	m	struct:__anon1
MultiDrawArraysEXT	include/GL/glprocs.h	/^  void (APIENTRY *MultiDrawArraysEXT) (GLenum mode, GLint *first, GLsizei *count, GLsizei primcount);$/;"	m	struct:__anon1
MultiDrawElementArrayAPPLE	include/GL/glprocs.h	/^  void (APIENTRY *MultiDrawElementArrayAPPLE) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);$/;"	m	struct:__anon1
MultiDrawElements	include/GL/glprocs.h	/^  void (APIENTRY *MultiDrawElements) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount);$/;"	m	struct:__anon1
MultiDrawElementsEXT	include/GL/glprocs.h	/^  void (APIENTRY *MultiDrawElementsEXT) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount);$/;"	m	struct:__anon1
MultiDrawRangeElementArrayAPPLE	include/GL/glprocs.h	/^  void (APIENTRY *MultiDrawRangeElementArrayAPPLE) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);$/;"	m	struct:__anon1
MultiModeDrawArraysIBM	include/GL/glprocs.h	/^  void (APIENTRY *MultiModeDrawArraysIBM) (const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride);$/;"	m	struct:__anon1
MultiModeDrawElementsIBM	include/GL/glprocs.h	/^  void (APIENTRY *MultiModeDrawElementsIBM) (const GLenum *mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei primcount, GLint modestride);$/;"	m	struct:__anon1
MultiTexCoord1d	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord1d) (GLenum target, GLdouble s);$/;"	m	struct:__anon1
MultiTexCoord1dARB	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord1dARB) (GLenum target, GLdouble s);$/;"	m	struct:__anon1
MultiTexCoord1dv	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord1dv) (GLenum target, const GLdouble *v);$/;"	m	struct:__anon1
MultiTexCoord1dvARB	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord1dvARB) (GLenum target, const GLdouble *v);$/;"	m	struct:__anon1
MultiTexCoord1f	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord1f) (GLenum target, GLfloat s);$/;"	m	struct:__anon1
MultiTexCoord1fARB	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord1fARB) (GLenum target, GLfloat s);$/;"	m	struct:__anon1
MultiTexCoord1fv	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord1fv) (GLenum target, const GLfloat *v);$/;"	m	struct:__anon1
MultiTexCoord1fvARB	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord1fvARB) (GLenum target, const GLfloat *v);$/;"	m	struct:__anon1
MultiTexCoord1hNV	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord1hNV) (GLenum target, GLhalfNV s);$/;"	m	struct:__anon1
MultiTexCoord1hvNV	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord1hvNV) (GLenum target, const GLhalfNV *v);$/;"	m	struct:__anon1
MultiTexCoord1i	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord1i) (GLenum target, GLint s);$/;"	m	struct:__anon1
MultiTexCoord1iARB	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord1iARB) (GLenum target, GLint s);$/;"	m	struct:__anon1
MultiTexCoord1iv	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord1iv) (GLenum target, const GLint *v);$/;"	m	struct:__anon1
MultiTexCoord1ivARB	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord1ivARB) (GLenum target, const GLint *v);$/;"	m	struct:__anon1
MultiTexCoord1s	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord1s) (GLenum target, GLshort s);$/;"	m	struct:__anon1
MultiTexCoord1sARB	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord1sARB) (GLenum target, GLshort s);$/;"	m	struct:__anon1
MultiTexCoord1sv	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord1sv) (GLenum target, const GLshort *v);$/;"	m	struct:__anon1
MultiTexCoord1svARB	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord1svARB) (GLenum target, const GLshort *v);$/;"	m	struct:__anon1
MultiTexCoord2d	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord2d) (GLenum target, GLdouble s, GLdouble t);$/;"	m	struct:__anon1
MultiTexCoord2dARB	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord2dARB) (GLenum target, GLdouble s, GLdouble t);$/;"	m	struct:__anon1
MultiTexCoord2dv	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord2dv) (GLenum target, const GLdouble *v);$/;"	m	struct:__anon1
MultiTexCoord2dvARB	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord2dvARB) (GLenum target, const GLdouble *v);$/;"	m	struct:__anon1
MultiTexCoord2f	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord2f) (GLenum target, GLfloat s, GLfloat t);$/;"	m	struct:__anon1
MultiTexCoord2fARB	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord2fARB) (GLenum target, GLfloat s, GLfloat t);$/;"	m	struct:__anon1
MultiTexCoord2fv	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord2fv) (GLenum target, const GLfloat *v);$/;"	m	struct:__anon1
MultiTexCoord2fvARB	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord2fvARB) (GLenum target, const GLfloat *v);$/;"	m	struct:__anon1
MultiTexCoord2hNV	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord2hNV) (GLenum target, GLhalfNV s, GLhalfNV t);$/;"	m	struct:__anon1
MultiTexCoord2hvNV	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord2hvNV) (GLenum target, const GLhalfNV *v);$/;"	m	struct:__anon1
MultiTexCoord2i	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord2i) (GLenum target, GLint s, GLint t);$/;"	m	struct:__anon1
MultiTexCoord2iARB	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord2iARB) (GLenum target, GLint s, GLint t);$/;"	m	struct:__anon1
MultiTexCoord2iv	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord2iv) (GLenum target, const GLint *v);$/;"	m	struct:__anon1
MultiTexCoord2ivARB	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord2ivARB) (GLenum target, const GLint *v);$/;"	m	struct:__anon1
MultiTexCoord2s	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord2s) (GLenum target, GLshort s, GLshort t);$/;"	m	struct:__anon1
MultiTexCoord2sARB	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord2sARB) (GLenum target, GLshort s, GLshort t);$/;"	m	struct:__anon1
MultiTexCoord2sv	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord2sv) (GLenum target, const GLshort *v);$/;"	m	struct:__anon1
MultiTexCoord2svARB	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord2svARB) (GLenum target, const GLshort *v);$/;"	m	struct:__anon1
MultiTexCoord3d	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord3d) (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	m	struct:__anon1
MultiTexCoord3dARB	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord3dARB) (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	m	struct:__anon1
MultiTexCoord3dv	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord3dv) (GLenum target, const GLdouble *v);$/;"	m	struct:__anon1
MultiTexCoord3dvARB	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord3dvARB) (GLenum target, const GLdouble *v);$/;"	m	struct:__anon1
MultiTexCoord3f	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord3f) (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	m	struct:__anon1
MultiTexCoord3fARB	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord3fARB) (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	m	struct:__anon1
MultiTexCoord3fv	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord3fv) (GLenum target, const GLfloat *v);$/;"	m	struct:__anon1
MultiTexCoord3fvARB	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord3fvARB) (GLenum target, const GLfloat *v);$/;"	m	struct:__anon1
MultiTexCoord3hNV	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord3hNV) (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	m	struct:__anon1
MultiTexCoord3hvNV	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord3hvNV) (GLenum target, const GLhalfNV *v);$/;"	m	struct:__anon1
MultiTexCoord3i	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord3i) (GLenum target, GLint s, GLint t, GLint r);$/;"	m	struct:__anon1
MultiTexCoord3iARB	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord3iARB) (GLenum target, GLint s, GLint t, GLint r);$/;"	m	struct:__anon1
MultiTexCoord3iv	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord3iv) (GLenum target, const GLint *v);$/;"	m	struct:__anon1
MultiTexCoord3ivARB	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord3ivARB) (GLenum target, const GLint *v);$/;"	m	struct:__anon1
MultiTexCoord3s	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord3s) (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	m	struct:__anon1
MultiTexCoord3sARB	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord3sARB) (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	m	struct:__anon1
MultiTexCoord3sv	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord3sv) (GLenum target, const GLshort *v);$/;"	m	struct:__anon1
MultiTexCoord3svARB	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord3svARB) (GLenum target, const GLshort *v);$/;"	m	struct:__anon1
MultiTexCoord4d	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord4d) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);$/;"	m	struct:__anon1
MultiTexCoord4dARB	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord4dARB) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);$/;"	m	struct:__anon1
MultiTexCoord4dv	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord4dv) (GLenum target, const GLdouble *v);$/;"	m	struct:__anon1
MultiTexCoord4dvARB	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord4dvARB) (GLenum target, const GLdouble *v);$/;"	m	struct:__anon1
MultiTexCoord4f	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord4f) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	m	struct:__anon1
MultiTexCoord4fARB	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord4fARB) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	m	struct:__anon1
MultiTexCoord4fv	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord4fv) (GLenum target, const GLfloat *v);$/;"	m	struct:__anon1
MultiTexCoord4fvARB	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord4fvARB) (GLenum target, const GLfloat *v);$/;"	m	struct:__anon1
MultiTexCoord4hNV	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord4hNV) (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);$/;"	m	struct:__anon1
MultiTexCoord4hvNV	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord4hvNV) (GLenum target, const GLhalfNV *v);$/;"	m	struct:__anon1
MultiTexCoord4i	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord4i) (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	m	struct:__anon1
MultiTexCoord4iARB	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord4iARB) (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	m	struct:__anon1
MultiTexCoord4iv	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord4iv) (GLenum target, const GLint *v);$/;"	m	struct:__anon1
MultiTexCoord4ivARB	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord4ivARB) (GLenum target, const GLint *v);$/;"	m	struct:__anon1
MultiTexCoord4s	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord4s) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);$/;"	m	struct:__anon1
MultiTexCoord4sARB	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord4sARB) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);$/;"	m	struct:__anon1
MultiTexCoord4sv	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord4sv) (GLenum target, const GLshort *v);$/;"	m	struct:__anon1
MultiTexCoord4svARB	include/GL/glprocs.h	/^  void (APIENTRY *MultiTexCoord4svARB) (GLenum target, const GLshort *v);$/;"	m	struct:__anon1
Multiply	particles/Multiply.h	/^class Multiply {$/;"	c
N	StableFluids.cpp	/^static int N;$/;"	v	file:
N	particles/TinkerToy.cpp	/^static int N;$/;"	v	file:
NOCHECK	include/pngconf.h	1431;"	d
NOMINMAX	include/gfx/gfx.h	50;"	d
NO_DUMMY_DECL	include/zconf.h	130;"	d
NO_vsnprintf	include/zconf.h	305;"	d
NO_vsnprintf	include/zconf.h	309;"	d
NewObjectBufferATI	include/GL/glprocs.h	/^  GLuint (APIENTRY *NewObjectBufferATI) (GLsizei size, const GLvoid *pointer, GLenum usage);$/;"	m	struct:__anon1
Normal3fVertex3fSUN	include/GL/glprocs.h	/^  void (APIENTRY *Normal3fVertex3fSUN) (GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	m	struct:__anon1
Normal3fVertex3fvSUN	include/GL/glprocs.h	/^  void (APIENTRY *Normal3fVertex3fvSUN) (const GLfloat *n, const GLfloat *v);$/;"	m	struct:__anon1
Normal3hNV	include/GL/glprocs.h	/^  void (APIENTRY *Normal3hNV) (GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);$/;"	m	struct:__anon1
Normal3hvNV	include/GL/glprocs.h	/^  void (APIENTRY *Normal3hvNV) (const GLhalfNV *v);$/;"	m	struct:__anon1
NormalPointerEXT	include/GL/glprocs.h	/^  void (APIENTRY *NormalPointerEXT) (GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	m	struct:__anon1
NormalPointerListIBM	include/GL/glprocs.h	/^  void (APIENTRY *NormalPointerListIBM) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	m	struct:__anon1
NormalPointervINTEL	include/GL/glprocs.h	/^  void (APIENTRY *NormalPointervINTEL) (GLenum type, const GLvoid* *pointer);$/;"	m	struct:__anon1
NormalStream3bATI	include/GL/glprocs.h	/^  void (APIENTRY *NormalStream3bATI) (GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);$/;"	m	struct:__anon1
NormalStream3bvATI	include/GL/glprocs.h	/^  void (APIENTRY *NormalStream3bvATI) (GLenum stream, const GLbyte *coords);$/;"	m	struct:__anon1
NormalStream3dATI	include/GL/glprocs.h	/^  void (APIENTRY *NormalStream3dATI) (GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);$/;"	m	struct:__anon1
NormalStream3dvATI	include/GL/glprocs.h	/^  void (APIENTRY *NormalStream3dvATI) (GLenum stream, const GLdouble *coords);$/;"	m	struct:__anon1
NormalStream3fATI	include/GL/glprocs.h	/^  void (APIENTRY *NormalStream3fATI) (GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);$/;"	m	struct:__anon1
NormalStream3fvATI	include/GL/glprocs.h	/^  void (APIENTRY *NormalStream3fvATI) (GLenum stream, const GLfloat *coords);$/;"	m	struct:__anon1
NormalStream3iATI	include/GL/glprocs.h	/^  void (APIENTRY *NormalStream3iATI) (GLenum stream, GLint nx, GLint ny, GLint nz);$/;"	m	struct:__anon1
NormalStream3ivATI	include/GL/glprocs.h	/^  void (APIENTRY *NormalStream3ivATI) (GLenum stream, const GLint *coords);$/;"	m	struct:__anon1
NormalStream3sATI	include/GL/glprocs.h	/^  void (APIENTRY *NormalStream3sATI) (GLenum stream, GLshort nx, GLshort ny, GLshort nz);$/;"	m	struct:__anon1
NormalStream3svATI	include/GL/glprocs.h	/^  void (APIENTRY *NormalStream3svATI) (GLenum stream, const GLshort *coords);$/;"	m	struct:__anon1
OBJS	Makefile	/^OBJS = StableFluids.o ScalarField.o VectorField.o FieldToolbox.o imageio.o Rectangle.o$/;"	m
OBJS	particles/Makefile	/^OBJS = Solver.o Particle.o RodConstraint.o SpringForce.o CircularWireConstraint.o imageio.o Gravity.o AngularForce.o MouseForce.o ConstraintSolver.o #TinkerToy.o$/;"	m
OF	include/zconf.h	168;"	d
OF	include/zconf.h	170;"	d
OS2	include/zconf.h	66;"	d
PART_OBJS	Makefile	/^PART_OBJS = particles\/Solver.o particles\/Particle.o particles\/RodConstraint.o particles\/SpringForce.o particles\/CircularWireConstraint.o particles\/Gravity.o particles\/AngularForce.o particles\/MouseForce.o particles\/ConstraintSolver.o #particles\/TinkerToy.o$/;"	m
PFNGLACTIVESTENCILFACEEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLACTIVESTENCILFACEEXTPROC) (GLenum face);$/;"	t
PFNGLACTIVETEXTUREARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t
PFNGLACTIVETEXTUREPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);$/;"	t
PFNGLADDSWAPHINTRECTWINPROC	include/GL/glext.h	/^typedef void (APIENTRY * PFNGLADDSWAPHINTRECTWINPROC) (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLALPHAFRAGMENTOP1ATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);$/;"	t
PFNGLALPHAFRAGMENTOP2ATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);$/;"	t
PFNGLALPHAFRAGMENTOP3ATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);$/;"	t
PFNGLAPPLYTEXTUREEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLAPPLYTEXTUREEXTPROC) (GLenum mode);$/;"	t
PFNGLAREPROGRAMSRESIDENTNVPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLAREPROGRAMSRESIDENTNVPROC) (GLsizei n, const GLuint *programs, GLboolean *residences);$/;"	t
PFNGLARETEXTURESRESIDENTEXTPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLARETEXTURESRESIDENTEXTPROC) (GLsizei n, const GLuint *textures, GLboolean *residences);$/;"	t
PFNGLARRAYELEMENTEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLARRAYELEMENTEXTPROC) (GLint i);$/;"	t
PFNGLARRAYOBJECTATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);$/;"	t
PFNGLASYNCMARKERSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLASYNCMARKERSGIXPROC) (GLuint marker);$/;"	t
PFNGLATTACHOBJECTARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLATTACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB obj);$/;"	t
PFNGLBEGINFRAGMENTSHADERATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINFRAGMENTSHADERATIPROC) (void);$/;"	t
PFNGLBEGINOCCLUSIONQUERYNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINOCCLUSIONQUERYNVPROC) (GLuint id);$/;"	t
PFNGLBEGINQUERYARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYARBPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBEGINQUERYPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBEGINVERTEXSHADEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINVERTEXSHADEREXTPROC) (void);$/;"	t
PFNGLBINDATTRIBLOCATIONARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONARBPROC) (GLhandleARB programObj, GLuint index, const GLcharARB *name);$/;"	t
PFNGLBINDBUFFERARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERARBPROC) (GLenum target, GLuint buffer);$/;"	t
PFNGLBINDBUFFERPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);$/;"	t
PFNGLBINDFRAGMENTSHADERATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGMENTSHADERATIPROC) (GLuint id);$/;"	t
PFNGLBINDLIGHTPARAMETEREXTPROC	include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDLIGHTPARAMETEREXTPROC) (GLenum light, GLenum value);$/;"	t
PFNGLBINDMATERIALPARAMETEREXTPROC	include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDMATERIALPARAMETEREXTPROC) (GLenum face, GLenum value);$/;"	t
PFNGLBINDPARAMETEREXTPROC	include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDPARAMETEREXTPROC) (GLenum value);$/;"	t
PFNGLBINDPROGRAMARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMARBPROC) (GLenum target, GLuint program);$/;"	t
PFNGLBINDPROGRAMNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMNVPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBINDTEXGENPARAMETEREXTPROC	include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDTEXGENPARAMETEREXTPROC) (GLenum unit, GLenum coord, GLenum value);$/;"	t
PFNGLBINDTEXTUREEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDTEXTUREEXTPROC) (GLenum target, GLuint texture);$/;"	t
PFNGLBINDTEXTUREUNITPARAMETEREXTPROC	include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDTEXTUREUNITPARAMETEREXTPROC) (GLenum unit, GLenum value);$/;"	t
PFNGLBINDVERTEXARRAYAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXARRAYAPPLEPROC) (GLuint array);$/;"	t
PFNGLBINDVERTEXSHADEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXSHADEREXTPROC) (GLuint id);$/;"	t
PFNGLBINORMAL3BEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);$/;"	t
PFNGLBINORMAL3BVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3BVEXTPROC) (const GLbyte *v);$/;"	t
PFNGLBINORMAL3DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);$/;"	t
PFNGLBINORMAL3DVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3DVEXTPROC) (const GLdouble *v);$/;"	t
PFNGLBINORMAL3FEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);$/;"	t
PFNGLBINORMAL3FVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3FVEXTPROC) (const GLfloat *v);$/;"	t
PFNGLBINORMAL3IEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);$/;"	t
PFNGLBINORMAL3IVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3IVEXTPROC) (const GLint *v);$/;"	t
PFNGLBINORMAL3SEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);$/;"	t
PFNGLBINORMAL3SVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3SVEXTPROC) (const GLshort *v);$/;"	t
PFNGLBINORMALPOINTEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLBLENDCOLOREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDCOLOREXTPROC) (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);$/;"	t
PFNGLBLENDCOLORPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDCOLORPROC) (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);$/;"	t
PFNGLBLENDEQUATIONEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONEXTPROC) (GLenum mode);$/;"	t
PFNGLBLENDEQUATIONPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);$/;"	t
PFNGLBLENDEQUATIONSEPARATEEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEEXTPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEEXTPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEINGRPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEINGRPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	t
PFNGLBUFFERDATAARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAARBPROC) (GLenum target, GLsizeiptrARB size, const GLvoid *data, GLenum usage);$/;"	t
PFNGLBUFFERDATAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage);$/;"	t
PFNGLBUFFERSUBDATAARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, const GLvoid *data);$/;"	t
PFNGLBUFFERSUBDATAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data);$/;"	t
PFNGLCLIENTACTIVETEXTUREARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t
PFNGLCLIENTACTIVETEXTUREPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREPROC) (GLenum texture);$/;"	t
PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC) (GLenum stream);$/;"	t
PFNGLCOLOR3FVERTEX3FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLCOLOR3FVERTEX3FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat *v);$/;"	t
PFNGLCOLOR3HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	t
PFNGLCOLOR3HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLCOLOR4HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);$/;"	t
PFNGLCOLOR4HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLCOLOR4UBVERTEX2FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);$/;"	t
PFNGLCOLOR4UBVERTEX2FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FVSUNPROC) (const GLubyte *c, const GLfloat *v);$/;"	t
PFNGLCOLOR4UBVERTEX3FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLCOLOR4UBVERTEX3FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FVSUNPROC) (const GLubyte *c, const GLfloat *v);$/;"	t
PFNGLCOLORFRAGMENTOP1ATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);$/;"	t
PFNGLCOLORFRAGMENTOP2ATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);$/;"	t
PFNGLCOLORFRAGMENTOP3ATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);$/;"	t
PFNGLCOLORPOINTEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLCOLORPOINTERLISTIBMPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLCOLORPOINTERVINTELPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* *pointer);$/;"	t
PFNGLCOLORSUBTABLEEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);$/;"	t
PFNGLCOLORSUBTABLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);$/;"	t
PFNGLCOLORTABLEEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEEXTPROC) (GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);$/;"	t
PFNGLCOLORTABLEPARAMETERFVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCOLORTABLEPARAMETERFVSGIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCOLORTABLEPARAMETERIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLCOLORTABLEPARAMETERIVSGIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLCOLORTABLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);$/;"	t
PFNGLCOLORTABLESGIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);$/;"	t
PFNGLCOMBINERINPUTNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERINPUTNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);$/;"	t
PFNGLCOMBINEROUTPUTNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINEROUTPUTNVPROC) (GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);$/;"	t
PFNGLCOMBINERPARAMETERFNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFNVPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLCOMBINERPARAMETERFVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFVNVPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLCOMBINERPARAMETERINVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t
PFNGLCOMBINERPARAMETERIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERIVNVPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLCOMBINERSTAGEPARAMETERFVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCOMPILESHADERARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERARBPROC) (GLhandleARB shaderObj);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE1DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE1DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE2DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE2DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE3DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE3DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCONVOLUTIONFILTER1DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);$/;"	t
PFNGLCONVOLUTIONFILTER1DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);$/;"	t
PFNGLCONVOLUTIONFILTER2DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);$/;"	t
PFNGLCONVOLUTIONFILTER2DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);$/;"	t
PFNGLCONVOLUTIONPARAMETERFEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat params);$/;"	t
PFNGLCONVOLUTIONPARAMETERFPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat params);$/;"	t
PFNGLCONVOLUTIONPARAMETERFVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCONVOLUTIONPARAMETERFVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIPROC) (GLenum target, GLenum pname, GLint params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLCOPYCOLORSUBTABLEEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCOLORSUBTABLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCOLORTABLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCOLORTABLESGIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER1DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER2DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXIMAGE1DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	t
PFNGLCOPYTEXIMAGE2DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	t
PFNGLCOPYTEXSUBIMAGE1DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYTEXSUBIMAGE2DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXSUBIMAGE3DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXSUBIMAGE3DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCREATEPROGRAMOBJECTARBPROC	include/GL/glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLCREATEPROGRAMOBJECTARBPROC) (void);$/;"	t
PFNGLCREATESHADEROBJECTARBPROC	include/GL/glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLCREATESHADEROBJECTARBPROC) (GLenum shaderType);$/;"	t
PFNGLCULLPARAMETERDVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCULLPARAMETERDVEXTPROC) (GLenum pname, GLdouble *params);$/;"	t
PFNGLCULLPARAMETERFVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCULLPARAMETERFVEXTPROC) (GLenum pname, GLfloat *params);$/;"	t
PFNGLCURRENTPALETTEMATRIXARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCURRENTPALETTEMATRIXARBPROC) (GLint index);$/;"	t
PFNGLDEFORMATIONMAP3DSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEFORMATIONMAP3DSGIXPROC) (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points);$/;"	t
PFNGLDEFORMATIONMAP3FSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEFORMATIONMAP3FSGIXPROC) (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points);$/;"	t
PFNGLDEFORMSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEFORMSGIXPROC) (GLbitfield mask);$/;"	t
PFNGLDELETEASYNCMARKERSSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEASYNCMARKERSSGIXPROC) (GLuint marker, GLsizei range);$/;"	t
PFNGLDELETEBUFFERSARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSARBPROC) (GLsizei n, const GLuint *buffers);$/;"	t
PFNGLDELETEBUFFERSPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint *buffers);$/;"	t
PFNGLDELETEFENCESAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEFENCESAPPLEPROC) (GLsizei n, const GLuint *fences);$/;"	t
PFNGLDELETEFENCESNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEFENCESNVPROC) (GLsizei n, const GLuint *fences);$/;"	t
PFNGLDELETEFRAGMENTSHADERATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEFRAGMENTSHADERATIPROC) (GLuint id);$/;"	t
PFNGLDELETEOBJECTARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEOBJECTARBPROC) (GLhandleARB obj);$/;"	t
PFNGLDELETEOCCLUSIONQUERIESNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEOCCLUSIONQUERIESNVPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETEPROGRAMSARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMSARBPROC) (GLsizei n, const GLuint *programs);$/;"	t
PFNGLDELETEPROGRAMSNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);$/;"	t
PFNGLDELETEQUERIESARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESARBPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETEQUERIESPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETETEXTURESEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETETEXTURESEXTPROC) (GLsizei n, const GLuint *textures);$/;"	t
PFNGLDELETEVERTEXARRAYSAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSAPPLEPROC) (GLsizei n, const GLuint *arrays);$/;"	t
PFNGLDELETEVERTEXSHADEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXSHADEREXTPROC) (GLuint id);$/;"	t
PFNGLDEPTHBOUNDSEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEPTHBOUNDSEXTPROC) (GLclampd zmin, GLclampd zmax);$/;"	t
PFNGLDETACHOBJECTARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDETACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB attachedObj);$/;"	t
PFNGLDETAILTEXFUNCSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDETAILTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *points);$/;"	t
PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);$/;"	t
PFNGLDISABLEVERTEXATTRIBARRAYARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	t
PFNGLDRAWARRAYSEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSEXTPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t
PFNGLDRAWBUFFERSATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSATIPROC) (GLsizei n, const GLenum *bufs);$/;"	t
PFNGLDRAWELEMENTARRAYAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t
PFNGLDRAWELEMENTARRAYATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYATIPROC) (GLenum mode, GLsizei count);$/;"	t
PFNGLDRAWMESHARRAYSSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWMESHARRAYSSUNPROC) (GLenum mode, GLint first, GLsizei count, GLsizei width);$/;"	t
PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);$/;"	t
PFNGLDRAWRANGEELEMENTARRAYATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYATIPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count);$/;"	t
PFNGLDRAWRANGEELEMENTSEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSEXTPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);$/;"	t
PFNGLDRAWRANGEELEMENTSPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);$/;"	t
PFNGLEDGEFLAGPOINTEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGPOINTEREXTPROC) (GLsizei stride, GLsizei count, const GLboolean *pointer);$/;"	t
PFNGLEDGEFLAGPOINTERLISTIBMPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointer, GLint ptrstride);$/;"	t
PFNGLELEMENTPOINTERAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);$/;"	t
PFNGLELEMENTPOINTERATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLELEMENTPOINTERATIPROC) (GLenum type, const GLvoid *pointer);$/;"	t
PFNGLENABLEVARIANTCLIENTSTATEEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);$/;"	t
PFNGLENABLEVERTEXATTRIBARRAYARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	t
PFNGLENDFRAGMENTSHADERATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDFRAGMENTSHADERATIPROC) (void);$/;"	t
PFNGLENDOCCLUSIONQUERYNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDOCCLUSIONQUERYNVPROC) (void);$/;"	t
PFNGLENDQUERYARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDQUERYARBPROC) (GLenum target);$/;"	t
PFNGLENDQUERYPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDQUERYPROC) (GLenum target);$/;"	t
PFNGLENDVERTEXSHADEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDVERTEXSHADEREXTPROC) (void);$/;"	t
PFNGLEVALMAPSNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLEVALMAPSNVPROC) (GLenum target, GLenum mode);$/;"	t
PFNGLEXECUTEPROGRAMNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLEXECUTEPROGRAMNVPROC) (GLenum target, GLuint id, const GLfloat *params);$/;"	t
PFNGLEXTRACTCOMPONENTEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLEXTRACTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);$/;"	t
PFNGLFINALCOMBINERINPUTNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFINALCOMBINERINPUTNVPROC) (GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);$/;"	t
PFNGLFINISHASYNCSGIXPROC	include/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLFINISHASYNCSGIXPROC) (GLuint *markerp);$/;"	t
PFNGLFINISHFENCEAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFINISHFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLFINISHFENCENVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFINISHFENCENVPROC) (GLuint fence);$/;"	t
PFNGLFINISHOBJECTAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFINISHOBJECTAPPLEPROC) (GLenum object, GLint name);$/;"	t
PFNGLFINISHTEXTURESUNXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFINISHTEXTURESUNXPROC) (void);$/;"	t
PFNGLFLUSHPIXELDATARANGENVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHPIXELDATARANGENVPROC) (GLenum target);$/;"	t
PFNGLFLUSHRASTERSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHRASTERSGIXPROC) (void);$/;"	t
PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, GLvoid *pointer);$/;"	t
PFNGLFLUSHVERTEXARRAYRANGENVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGENVPROC) (void);$/;"	t
PFNGLFOGCOORDDEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDEXTPROC) (GLdouble coord);$/;"	t
PFNGLFOGCOORDDPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDPROC) (GLdouble coord);$/;"	t
PFNGLFOGCOORDDVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDVEXTPROC) (const GLdouble *coord);$/;"	t
PFNGLFOGCOORDDVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDVPROC) (const GLdouble *coord);$/;"	t
PFNGLFOGCOORDFEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFEXTPROC) (GLfloat coord);$/;"	t
PFNGLFOGCOORDFPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFPROC) (GLfloat coord);$/;"	t
PFNGLFOGCOORDFVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFVEXTPROC) (const GLfloat *coord);$/;"	t
PFNGLFOGCOORDFVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFVPROC) (const GLfloat *coord);$/;"	t
PFNGLFOGCOORDHNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDHNVPROC) (GLhalfNV fog);$/;"	t
PFNGLFOGCOORDHVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDHVNVPROC) (const GLhalfNV *fog);$/;"	t
PFNGLFOGCOORDPOINTEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLFOGCOORDPOINTERLISTIBMPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLFOGCOORDPOINTERPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTERPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLFOGFUNCSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGFUNCSGISPROC) (GLsizei n, const GLfloat *points);$/;"	t
PFNGLFRAGMENTCOLORMATERIALSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTCOLORMATERIALSGIXPROC) (GLenum face, GLenum mode);$/;"	t
PFNGLFRAGMENTLIGHTFSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFSGIXPROC) (GLenum light, GLenum pname, GLfloat param);$/;"	t
PFNGLFRAGMENTLIGHTFVSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, const GLfloat *params);$/;"	t
PFNGLFRAGMENTLIGHTISGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTISGIXPROC) (GLenum light, GLenum pname, GLint param);$/;"	t
PFNGLFRAGMENTLIGHTIVSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, const GLint *params);$/;"	t
PFNGLFRAGMENTLIGHTMODELFSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFSGIXPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLFRAGMENTLIGHTMODELFVSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFVSGIXPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLFRAGMENTLIGHTMODELISGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELISGIXPROC) (GLenum pname, GLint param);$/;"	t
PFNGLFRAGMENTLIGHTMODELIVSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELIVSGIXPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLFRAGMENTMATERIALFSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFSGIXPROC) (GLenum face, GLenum pname, GLfloat param);$/;"	t
PFNGLFRAGMENTMATERIALFVSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, const GLfloat *params);$/;"	t
PFNGLFRAGMENTMATERIALISGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALISGIXPROC) (GLenum face, GLenum pname, GLint param);$/;"	t
PFNGLFRAGMENTMATERIALIVSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, const GLint *params);$/;"	t
PFNGLFRAMEZOOMSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEZOOMSGIXPROC) (GLint factor);$/;"	t
PFNGLFREEOBJECTBUFFERATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFREEOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLGENASYNCMARKERSSGIXPROC	include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLGENASYNCMARKERSSGIXPROC) (GLsizei range);$/;"	t
PFNGLGENBUFFERSARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSARBPROC) (GLsizei n, GLuint *buffers);$/;"	t
PFNGLGENBUFFERSPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSPROC) (GLsizei n, GLuint *buffers);$/;"	t
PFNGLGENFENCESAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENFENCESAPPLEPROC) (GLsizei n, GLuint *fences);$/;"	t
PFNGLGENFENCESNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENFENCESNVPROC) (GLsizei n, GLuint *fences);$/;"	t
PFNGLGENFRAGMENTSHADERSATIPROC	include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLGENFRAGMENTSHADERSATIPROC) (GLuint range);$/;"	t
PFNGLGENOCCLUSIONQUERIESNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENOCCLUSIONQUERIESNVPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENPROGRAMSARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMSARBPROC) (GLsizei n, GLuint *programs);$/;"	t
PFNGLGENPROGRAMSNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMSNVPROC) (GLsizei n, GLuint *programs);$/;"	t
PFNGLGENQUERIESARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENQUERIESARBPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENQUERIESPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENQUERIESPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENSYMBOLSEXTPROC	include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLGENSYMBOLSEXTPROC) (GLenum datatype, GLenum storagetype, GLenum range, GLuint components);$/;"	t
PFNGLGENTEXTURESEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENTEXTURESEXTPROC) (GLsizei n, GLuint *textures);$/;"	t
PFNGLGENVERTEXARRAYSAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENVERTEXARRAYSAPPLEPROC) (GLsizei n, const GLuint *arrays);$/;"	t
PFNGLGENVERTEXSHADERSEXTPROC	include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLGENVERTEXSHADERSEXTPROC) (GLuint range);$/;"	t
PFNGLGETACTIVEATTRIBARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBARBPROC) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);$/;"	t
PFNGLGETACTIVEUNIFORMARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMARBPROC) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);$/;"	t
PFNGLGETARRAYOBJECTFVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETARRAYOBJECTIVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);$/;"	t
PFNGLGETATTACHEDOBJECTSARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDOBJECTSARBPROC) (GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj);$/;"	t
PFNGLGETATTRIBLOCATIONARBPROC	include/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB *name);$/;"	t
PFNGLGETBUFFERPARAMETERIVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETBUFFERPARAMETERIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETBUFFERPOINTERVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVARBPROC) (GLenum target, GLenum pname, GLvoid* *params);$/;"	t
PFNGLGETBUFFERPOINTERVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, GLvoid* *params);$/;"	t
PFNGLGETBUFFERSUBDATAARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, GLvoid *data);$/;"	t
PFNGLGETBUFFERSUBDATAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, GLvoid *data);$/;"	t
PFNGLGETCOLORTABLEEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEEXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid *data);$/;"	t
PFNGLGETCOLORTABLEPARAMETERFVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERFVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERFVSGIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERIVSGIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOLORTABLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, GLvoid *table);$/;"	t
PFNGLGETCOLORTABLESGIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLESGIPROC) (GLenum target, GLenum format, GLenum type, GLvoid *table);$/;"	t
PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOMPRESSEDTEXIMAGEARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid *img);$/;"	t
PFNGLGETCOMPRESSEDTEXIMAGEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, GLvoid *img);$/;"	t
PFNGLGETCONVOLUTIONFILTEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTEREXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid *image);$/;"	t
PFNGLGETCONVOLUTIONFILTERPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *image);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERFVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETDETAILTEXFUNCSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETDETAILTEXFUNCSGISPROC) (GLenum target, GLfloat *points);$/;"	t
PFNGLGETFENCEIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFENCEIVNVPROC) (GLuint fence, GLenum pname, GLint *params);$/;"	t
PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC) (GLenum variable, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC) (GLenum variable, GLenum pname, GLint *params);$/;"	t
PFNGLGETFOGFUNCSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFOGFUNCSGISPROC) (GLfloat *points);$/;"	t
PFNGLGETFRAGMENTLIGHTFVSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETFRAGMENTLIGHTIVSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAGMENTMATERIALFVSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETFRAGMENTMATERIALIVSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, GLint *params);$/;"	t
PFNGLGETHANDLEARBPROC	include/GL/glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLGETHANDLEARBPROC) (GLenum pname);$/;"	t
PFNGLGETHISTOGRAMEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	t
PFNGLGETHISTOGRAMPARAMETERFVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETHISTOGRAMPARAMETERFVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETHISTOGRAMPARAMETERIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETHISTOGRAMPARAMETERIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETHISTOGRAMPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	t
PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETINFOLOGARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINFOLOGARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog);$/;"	t
PFNGLGETINSTRUMENTSSGIXPROC	include/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETINSTRUMENTSSGIXPROC) (void);$/;"	t
PFNGLGETINVARIANTBOOLEANVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);$/;"	t
PFNGLGETINVARIANTFLOATVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);$/;"	t
PFNGLGETINVARIANTINTEGERVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);$/;"	t
PFNGLGETLISTPARAMETERFVSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETLISTPARAMETERIVSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, GLint *params);$/;"	t
PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);$/;"	t
PFNGLGETLOCALCONSTANTFLOATVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);$/;"	t
PFNGLGETLOCALCONSTANTINTEGERVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);$/;"	t
PFNGLGETMAPATTRIBPARAMETERFVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMAPATTRIBPARAMETERIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERIVNVPROC) (GLenum target, GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETMAPCONTROLPOINTSNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, GLvoid *points);$/;"	t
PFNGLGETMAPPARAMETERFVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMAPPARAMETERIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMINMAXEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	t
PFNGLGETMINMAXPARAMETERFVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMINMAXPARAMETERFVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMINMAXPARAMETERIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMINMAXPARAMETERIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMINMAXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	t
PFNGLGETOBJECTBUFFERFVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETOBJECTBUFFERIVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETOBJECTPARAMETERFVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERFVARBPROC) (GLhandleARB obj, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETOBJECTPARAMETERIVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERIVARBPROC) (GLhandleARB obj, GLenum pname, GLint *params);$/;"	t
PFNGLGETOCCLUSIONQUERYIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYIVNVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETOCCLUSIONQUERYUIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYUIVNVPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t
PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, GLfloat *params);$/;"	t
PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, GLint *params);$/;"	t
PFNGLGETPOINTERVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPOINTERVEXTPROC) (GLenum pname, GLvoid* *params);$/;"	t
PFNGLGETPROGRAMENVPARAMETERDVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdouble *params);$/;"	t
PFNGLGETPROGRAMENVPARAMETERFVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfloat *params);$/;"	t
PFNGLGETPROGRAMIVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVNVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdouble *params);$/;"	t
PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfloat *params);$/;"	t
PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLdouble *params);$/;"	t
PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLfloat *params);$/;"	t
PFNGLGETPROGRAMPARAMETERDVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERDVNVPROC) (GLenum target, GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETPROGRAMPARAMETERFVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETPROGRAMSTRINGARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGARBPROC) (GLenum target, GLenum pname, GLvoid *string);$/;"	t
PFNGLGETPROGRAMSTRINGNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGNVPROC) (GLuint id, GLenum pname, GLubyte *program);$/;"	t
PFNGLGETQUERYIVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTIVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVARBPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTUIVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVARBPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t
PFNGLGETQUERYOBJECTUIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t
PFNGLGETSEPARABLEFILTEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSEPARABLEFILTEREXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);$/;"	t
PFNGLGETSEPARABLEFILTERPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);$/;"	t
PFNGLGETSHADERSOURCEARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source);$/;"	t
PFNGLGETSHARPENTEXFUNCSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSHARPENTEXFUNCSGISPROC) (GLenum target, GLfloat *points);$/;"	t
PFNGLGETTEXBUMPPARAMETERFVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERFVATIPROC) (GLenum pname, GLfloat *param);$/;"	t
PFNGLGETTEXBUMPPARAMETERIVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERIVATIPROC) (GLenum pname, GLint *param);$/;"	t
PFNGLGETTEXFILTERFUNCSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLfloat *weights);$/;"	t
PFNGLGETTRACKMATRIXIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTRACKMATRIXIVNVPROC) (GLenum target, GLuint address, GLenum pname, GLint *params);$/;"	t
PFNGLGETUNIFORMFVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVARBPROC) (GLhandleARB programObj, GLint location, GLfloat *params);$/;"	t
PFNGLGETUNIFORMIVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVARBPROC) (GLhandleARB programObj, GLint location, GLint *params);$/;"	t
PFNGLGETUNIFORMLOCATIONARBPROC	include/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB *name);$/;"	t
PFNGLGETVARIANTARRAYOBJECTFVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVARIANTARRAYOBJECTIVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETVARIANTBOOLEANVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);$/;"	t
PFNGLGETVARIANTFLOATVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);$/;"	t
PFNGLGETVARIANTINTEGERVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);$/;"	t
PFNGLGETVARIANTPOINTERVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTPOINTERVEXTPROC) (GLuint id, GLenum value, GLvoid* *data);$/;"	t
PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBDVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVARBPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBDVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVNVPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBFVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVARBPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBFVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVNVPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBIVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVARBPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVNVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBPOINTERVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVARBPROC) (GLuint index, GLenum pname, GLvoid* *pointer);$/;"	t
PFNGLGETVERTEXATTRIBPOINTERVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVNVPROC) (GLuint index, GLenum pname, GLvoid* *pointer);$/;"	t
PFNGLGLOBALALPHAFACTORBSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORBSUNPROC) (GLbyte factor);$/;"	t
PFNGLGLOBALALPHAFACTORDSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORDSUNPROC) (GLdouble factor);$/;"	t
PFNGLGLOBALALPHAFACTORFSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORFSUNPROC) (GLfloat factor);$/;"	t
PFNGLGLOBALALPHAFACTORISUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORISUNPROC) (GLint factor);$/;"	t
PFNGLGLOBALALPHAFACTORSSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORSSUNPROC) (GLshort factor);$/;"	t
PFNGLGLOBALALPHAFACTORUBSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUBSUNPROC) (GLubyte factor);$/;"	t
PFNGLGLOBALALPHAFACTORUISUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUISUNPROC) (GLuint factor);$/;"	t
PFNGLGLOBALALPHAFACTORUSSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUSSUNPROC) (GLushort factor);$/;"	t
PFNGLHINTPGIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLHINTPGIPROC) (GLenum target, GLint mode);$/;"	t
PFNGLHISTOGRAMEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLHISTOGRAMEXTPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLHISTOGRAMPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLHISTOGRAMPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLIGLOOINTERFACESGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLIGLOOINTERFACESGIXPROC) (GLenum pname, const GLvoid *params);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERFHPPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERFVHPPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERIHPPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERIVHPPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLINDEXFUNCEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLINDEXFUNCEXTPROC) (GLenum func, GLclampf ref);$/;"	t
PFNGLINDEXMATERIALEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLINDEXMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t
PFNGLINDEXPOINTEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLINDEXPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLINDEXPOINTERLISTIBMPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLINSERTCOMPONENTEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLINSERTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);$/;"	t
PFNGLINSTRUMENTSBUFFERSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLINSTRUMENTSBUFFERSGIXPROC) (GLsizei size, GLint *buffer);$/;"	t
PFNGLISASYNCMARKERSGIXPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISASYNCMARKERSGIXPROC) (GLuint marker);$/;"	t
PFNGLISBUFFERARBPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERARBPROC) (GLuint buffer);$/;"	t
PFNGLISBUFFERPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC) (GLuint buffer);$/;"	t
PFNGLISFENCEAPPLEPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLISFENCENVPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFENCENVPROC) (GLuint fence);$/;"	t
PFNGLISOBJECTBUFFERATIPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLISOCCLUSIONQUERYNVPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISOCCLUSIONQUERYNVPROC) (GLuint id);$/;"	t
PFNGLISPROGRAMARBPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMARBPROC) (GLuint program);$/;"	t
PFNGLISPROGRAMNVPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMNVPROC) (GLuint id);$/;"	t
PFNGLISQUERYARBPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYARBPROC) (GLuint id);$/;"	t
PFNGLISQUERYPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYPROC) (GLuint id);$/;"	t
PFNGLISTEXTUREEXTPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREEXTPROC) (GLuint texture);$/;"	t
PFNGLISVARIANTENABLEDEXTPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVARIANTENABLEDEXTPROC) (GLuint id, GLenum cap);$/;"	t
PFNGLISVERTEXARRAYAPPLEPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYAPPLEPROC) (GLuint array);$/;"	t
PFNGLLIGHTENVISGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLIGHTENVISGIXPROC) (GLenum pname, GLint param);$/;"	t
PFNGLLINKPROGRAMARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMARBPROC) (GLhandleARB programObj);$/;"	t
PFNGLLISTPARAMETERFSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERFSGIXPROC) (GLuint list, GLenum pname, GLfloat param);$/;"	t
PFNGLLISTPARAMETERFVSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, const GLfloat *params);$/;"	t
PFNGLLISTPARAMETERISGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERISGIXPROC) (GLuint list, GLenum pname, GLint param);$/;"	t
PFNGLLISTPARAMETERIVSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, const GLint *params);$/;"	t
PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC) (GLbitfield mask);$/;"	t
PFNGLLOADPROGRAMNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADPROGRAMNVPROC) (GLenum target, GLuint id, GLsizei len, const GLubyte *program);$/;"	t
PFNGLLOADTRANSPOSEMATRIXDARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);$/;"	t
PFNGLLOADTRANSPOSEMATRIXDPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDPROC) (const GLdouble *m);$/;"	t
PFNGLLOADTRANSPOSEMATRIXFARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);$/;"	t
PFNGLLOADTRANSPOSEMATRIXFPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFPROC) (const GLfloat *m);$/;"	t
PFNGLLOCKARRAYSEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOCKARRAYSEXTPROC) (GLint first, GLsizei count);$/;"	t
PFNGLMAPBUFFERARBPROC	include/GL/glext.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPBUFFERARBPROC) (GLenum target, GLenum access);$/;"	t
PFNGLMAPBUFFERPROC	include/GL/glext.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);$/;"	t
PFNGLMAPCONTROLPOINTSNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const GLvoid *points);$/;"	t
PFNGLMAPOBJECTBUFFERATIPROC	include/GL/glext.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLMAPPARAMETERFVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLMAPPARAMETERIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLMATRIXINDEXPOINTERARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLMATRIXINDEXUBVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);$/;"	t
PFNGLMATRIXINDEXUIVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);$/;"	t
PFNGLMATRIXINDEXUSVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);$/;"	t
PFNGLMINMAXEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMINMAXEXTPROC) (GLenum target, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLMINMAXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMINMAXPROC) (GLenum target, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLMULTIDRAWARRAYSEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSEXTPROC) (GLenum mode, GLint *first, GLsizei *count, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWARRAYSPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, GLint *first, GLsizei *count, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWELEMENTSEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSEXTPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWELEMENTSPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);$/;"	t
PFNGLMULTIMODEDRAWARRAYSIBMPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIMODEDRAWARRAYSIBMPROC) (const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride);$/;"	t
PFNGLMULTIMODEDRAWELEMENTSIBMPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIMODEDRAWELEMENTSIBMPROC) (const GLenum *mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei primcount, GLint modestride);$/;"	t
PFNGLMULTITEXCOORD1DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);$/;"	t
PFNGLMULTITEXCOORD1DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DPROC) (GLenum target, GLdouble s);$/;"	t
PFNGLMULTITEXCOORD1DVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD1DVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD1FARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);$/;"	t
PFNGLMULTITEXCOORD1FPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FPROC) (GLenum target, GLfloat s);$/;"	t
PFNGLMULTITEXCOORD1FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD1FVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD1HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1HNVPROC) (GLenum target, GLhalfNV s);$/;"	t
PFNGLMULTITEXCOORD1HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t
PFNGLMULTITEXCOORD1IARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);$/;"	t
PFNGLMULTITEXCOORD1IPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IPROC) (GLenum target, GLint s);$/;"	t
PFNGLMULTITEXCOORD1IVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD1IVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD1SARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);$/;"	t
PFNGLMULTITEXCOORD1SPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SPROC) (GLenum target, GLshort s);$/;"	t
PFNGLMULTITEXCOORD1SVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD1SVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD2DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t
PFNGLMULTITEXCOORD2DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t
PFNGLMULTITEXCOORD2DVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD2DVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD2FARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t
PFNGLMULTITEXCOORD2FPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t
PFNGLMULTITEXCOORD2FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD2FVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD2HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t);$/;"	t
PFNGLMULTITEXCOORD2HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t
PFNGLMULTITEXCOORD2IARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);$/;"	t
PFNGLMULTITEXCOORD2IPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IPROC) (GLenum target, GLint s, GLint t);$/;"	t
PFNGLMULTITEXCOORD2IVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD2IVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD2SARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);$/;"	t
PFNGLMULTITEXCOORD2SPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SPROC) (GLenum target, GLshort s, GLshort t);$/;"	t
PFNGLMULTITEXCOORD2SVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD2SVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD3DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	t
PFNGLMULTITEXCOORD3DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	t
PFNGLMULTITEXCOORD3DVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD3DVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD3FARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	t
PFNGLMULTITEXCOORD3FPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	t
PFNGLMULTITEXCOORD3FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD3FVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD3HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	t
PFNGLMULTITEXCOORD3HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t
PFNGLMULTITEXCOORD3IARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t
PFNGLMULTITEXCOORD3IPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t
PFNGLMULTITEXCOORD3IVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD3IVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD3SARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	t
PFNGLMULTITEXCOORD3SPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SPROC) (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	t
PFNGLMULTITEXCOORD3SVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD3SVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD4DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);$/;"	t
PFNGLMULTITEXCOORD4DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);$/;"	t
PFNGLMULTITEXCOORD4DVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD4DVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD4FARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	t
PFNGLMULTITEXCOORD4FPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	t
PFNGLMULTITEXCOORD4FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD4FVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD4HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);$/;"	t
PFNGLMULTITEXCOORD4HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t
PFNGLMULTITEXCOORD4IARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	t
PFNGLMULTITEXCOORD4IPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	t
PFNGLMULTITEXCOORD4IVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD4IVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD4SARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);$/;"	t
PFNGLMULTITEXCOORD4SPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);$/;"	t
PFNGLMULTITEXCOORD4SVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD4SVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTTRANSPOSEMATRIXDARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);$/;"	t
PFNGLMULTTRANSPOSEMATRIXDPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDPROC) (const GLdouble *m);$/;"	t
PFNGLMULTTRANSPOSEMATRIXFARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);$/;"	t
PFNGLMULTTRANSPOSEMATRIXFPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFPROC) (const GLfloat *m);$/;"	t
PFNGLNEWOBJECTBUFFERATIPROC	include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLenum usage);$/;"	t
PFNGLNORMAL3FVERTEX3FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FSUNPROC) (GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLNORMAL3FVERTEX3FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLNORMAL3HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3HNVPROC) (GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);$/;"	t
PFNGLNORMAL3HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLNORMALPOINTEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLNORMALPOINTERLISTIBMPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLNORMALPOINTERVINTELPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTERVINTELPROC) (GLenum type, const GLvoid* *pointer);$/;"	t
PFNGLNORMALSTREAM3BATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3BATIPROC) (GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);$/;"	t
PFNGLNORMALSTREAM3BVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3BVATIPROC) (GLenum stream, const GLbyte *coords);$/;"	t
PFNGLNORMALSTREAM3DATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3DATIPROC) (GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);$/;"	t
PFNGLNORMALSTREAM3DVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLNORMALSTREAM3FATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3FATIPROC) (GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);$/;"	t
PFNGLNORMALSTREAM3FVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLNORMALSTREAM3IATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3IATIPROC) (GLenum stream, GLint nx, GLint ny, GLint nz);$/;"	t
PFNGLNORMALSTREAM3IVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLNORMALSTREAM3SATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3SATIPROC) (GLenum stream, GLshort nx, GLshort ny, GLshort nz);$/;"	t
PFNGLNORMALSTREAM3SVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLPASSTEXCOORDATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPASSTEXCOORDATIPROC) (GLuint dst, GLuint coord, GLenum swizzle);$/;"	t
PFNGLPIXELDATARANGENVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELDATARANGENVPROC) (GLenum target, GLsizei length, GLvoid *pointer);$/;"	t
PFNGLPIXELTEXGENPARAMETERFSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFSGISPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPIXELTEXGENPARAMETERFVSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPIXELTEXGENPARAMETERISGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERISGISPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPIXELTEXGENPARAMETERIVSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLPIXELTEXGENSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENSGIXPROC) (GLenum mode);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERFEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERIEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLPNTRIANGLESFATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPNTRIANGLESFATIPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPNTRIANGLESIATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPNTRIANGLESIATIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPOINTPARAMETERFARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFARBPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFEXTPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFSGISPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVARBPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERFVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVEXTPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERFVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERFVSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERINVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPOINTPARAMETERIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPOINTPARAMETERIVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVNVPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLPOINTPARAMETERIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLPOLLASYNCSGIXPROC	include/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLPOLLASYNCSGIXPROC) (GLuint *markerp);$/;"	t
PFNGLPOLLINSTRUMENTSSGIXPROC	include/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLPOLLINSTRUMENTSSGIXPROC) (GLint *marker_p);$/;"	t
PFNGLPOLYGONOFFSETEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETEXTPROC) (GLfloat factor, GLfloat bias);$/;"	t
PFNGLPRIMITIVERESTARTINDEXNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXNVPROC) (GLuint index);$/;"	t
PFNGLPRIMITIVERESTARTNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTNVPROC) (void);$/;"	t
PFNGLPRIORITIZETEXTURESEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESEXTPROC) (GLsizei n, const GLuint *textures, const GLclampf *priorities);$/;"	t
PFNGLPROGRAMENVPARAMETER4DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMENVPARAMETER4DVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DVARBPROC) (GLenum target, GLuint index, const GLdouble *params);$/;"	t
PFNGLPROGRAMENVPARAMETER4FARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMENVPARAMETER4FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FVARBPROC) (GLenum target, GLuint index, const GLfloat *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4DVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DVARBPROC) (GLenum target, GLuint index, const GLdouble *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4FARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FVARBPROC) (GLenum target, GLuint index, const GLfloat *params);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4DNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4FNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v);$/;"	t
PFNGLPROGRAMPARAMETER4DNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DNVPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMPARAMETER4DVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DVNVPROC) (GLenum target, GLuint index, const GLdouble *v);$/;"	t
PFNGLPROGRAMPARAMETER4FNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FNVPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMPARAMETER4FVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FVNVPROC) (GLenum target, GLuint index, const GLfloat *v);$/;"	t
PFNGLPROGRAMPARAMETERS4DVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4DVNVPROC) (GLenum target, GLuint index, GLuint count, const GLdouble *v);$/;"	t
PFNGLPROGRAMPARAMETERS4FVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4FVNVPROC) (GLenum target, GLuint index, GLuint count, const GLfloat *v);$/;"	t
PFNGLPROGRAMSTRINGARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMSTRINGARBPROC) (GLenum target, GLenum format, GLsizei len, const GLvoid *string);$/;"	t
PFNGLREADINSTRUMENTSSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREADINSTRUMENTSSGIXPROC) (GLint marker);$/;"	t
PFNGLREFERENCEPLANESGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREFERENCEPLANESGIXPROC) (const GLdouble *equation);$/;"	t
PFNGLREPLACEMENTCODEPOINTERSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEPOINTERSUNPROC) (GLenum type, GLsizei stride, const GLvoid* *pointer);$/;"	t
PFNGLREPLACEMENTCODEUBSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBSUNPROC) (GLubyte code);$/;"	t
PFNGLREPLACEMENTCODEUBVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBVSUNPROC) (const GLubyte *code);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *c, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC) (GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC) (const GLuint *rc, const GLubyte *c, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUISUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUISUNPROC) (GLuint code);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC) (GLuint rc, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUIVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVSUNPROC) (const GLuint *code);$/;"	t
PFNGLREPLACEMENTCODEUSSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSSUNPROC) (GLushort code);$/;"	t
PFNGLREPLACEMENTCODEUSVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSVSUNPROC) (const GLushort *code);$/;"	t
PFNGLREQUESTRESIDENTPROGRAMSNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREQUESTRESIDENTPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);$/;"	t
PFNGLRESETHISTOGRAMEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLRESETHISTOGRAMEXTPROC) (GLenum target);$/;"	t
PFNGLRESETHISTOGRAMPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLRESETHISTOGRAMPROC) (GLenum target);$/;"	t
PFNGLRESETMINMAXEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLRESETMINMAXEXTPROC) (GLenum target);$/;"	t
PFNGLRESETMINMAXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLRESETMINMAXPROC) (GLenum target);$/;"	t
PFNGLRESIZEBUFFERSMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLRESIZEBUFFERSMESAPROC) (void);$/;"	t
PFNGLSAMPLECOVERAGEARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEARBPROC) (GLclampf value, GLboolean invert);$/;"	t
PFNGLSAMPLECOVERAGEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLclampf value, GLboolean invert);$/;"	t
PFNGLSAMPLEMAPATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMAPATIPROC) (GLuint dst, GLuint interp, GLenum swizzle);$/;"	t
PFNGLSAMPLEMASKEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKEXTPROC) (GLclampf value, GLboolean invert);$/;"	t
PFNGLSAMPLEMASKSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKSGISPROC) (GLclampf value, GLboolean invert);$/;"	t
PFNGLSAMPLEPATTERNEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEPATTERNEXTPROC) (GLenum pattern);$/;"	t
PFNGLSAMPLEPATTERNSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEPATTERNSGISPROC) (GLenum pattern);$/;"	t
PFNGLSECONDARYCOLOR3BEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BEXTPROC) (GLbyte red, GLbyte green, GLbyte blue);$/;"	t
PFNGLSECONDARYCOLOR3BPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BPROC) (GLbyte red, GLbyte green, GLbyte blue);$/;"	t
PFNGLSECONDARYCOLOR3BVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVEXTPROC) (const GLbyte *v);$/;"	t
PFNGLSECONDARYCOLOR3BVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVPROC) (const GLbyte *v);$/;"	t
PFNGLSECONDARYCOLOR3DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DEXTPROC) (GLdouble red, GLdouble green, GLdouble blue);$/;"	t
PFNGLSECONDARYCOLOR3DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DPROC) (GLdouble red, GLdouble green, GLdouble blue);$/;"	t
PFNGLSECONDARYCOLOR3DVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVEXTPROC) (const GLdouble *v);$/;"	t
PFNGLSECONDARYCOLOR3DVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVPROC) (const GLdouble *v);$/;"	t
PFNGLSECONDARYCOLOR3FEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FEXTPROC) (GLfloat red, GLfloat green, GLfloat blue);$/;"	t
PFNGLSECONDARYCOLOR3FPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FPROC) (GLfloat red, GLfloat green, GLfloat blue);$/;"	t
PFNGLSECONDARYCOLOR3FVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVEXTPROC) (const GLfloat *v);$/;"	t
PFNGLSECONDARYCOLOR3FVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVPROC) (const GLfloat *v);$/;"	t
PFNGLSECONDARYCOLOR3HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	t
PFNGLSECONDARYCOLOR3HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLSECONDARYCOLOR3IEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IEXTPROC) (GLint red, GLint green, GLint blue);$/;"	t
PFNGLSECONDARYCOLOR3IPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IPROC) (GLint red, GLint green, GLint blue);$/;"	t
PFNGLSECONDARYCOLOR3IVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVEXTPROC) (const GLint *v);$/;"	t
PFNGLSECONDARYCOLOR3IVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVPROC) (const GLint *v);$/;"	t
PFNGLSECONDARYCOLOR3SEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SEXTPROC) (GLshort red, GLshort green, GLshort blue);$/;"	t
PFNGLSECONDARYCOLOR3SPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SPROC) (GLshort red, GLshort green, GLshort blue);$/;"	t
PFNGLSECONDARYCOLOR3SVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVEXTPROC) (const GLshort *v);$/;"	t
PFNGLSECONDARYCOLOR3SVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVPROC) (const GLshort *v);$/;"	t
PFNGLSECONDARYCOLOR3UBEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBEXTPROC) (GLubyte red, GLubyte green, GLubyte blue);$/;"	t
PFNGLSECONDARYCOLOR3UBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBPROC) (GLubyte red, GLubyte green, GLubyte blue);$/;"	t
PFNGLSECONDARYCOLOR3UBVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVEXTPROC) (const GLubyte *v);$/;"	t
PFNGLSECONDARYCOLOR3UBVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVPROC) (const GLubyte *v);$/;"	t
PFNGLSECONDARYCOLOR3UIEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIEXTPROC) (GLuint red, GLuint green, GLuint blue);$/;"	t
PFNGLSECONDARYCOLOR3UIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIPROC) (GLuint red, GLuint green, GLuint blue);$/;"	t
PFNGLSECONDARYCOLOR3UIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVEXTPROC) (const GLuint *v);$/;"	t
PFNGLSECONDARYCOLOR3UIVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVPROC) (const GLuint *v);$/;"	t
PFNGLSECONDARYCOLOR3USEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USEXTPROC) (GLushort red, GLushort green, GLushort blue);$/;"	t
PFNGLSECONDARYCOLOR3USPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USPROC) (GLushort red, GLushort green, GLushort blue);$/;"	t
PFNGLSECONDARYCOLOR3USVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVEXTPROC) (const GLushort *v);$/;"	t
PFNGLSECONDARYCOLOR3USVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVPROC) (const GLushort *v);$/;"	t
PFNGLSECONDARYCOLORPOINTEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLSECONDARYCOLORPOINTERLISTIBMPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLSECONDARYCOLORPOINTERPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLSEPARABLEFILTER2DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);$/;"	t
PFNGLSEPARABLEFILTER2DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);$/;"	t
PFNGLSETFENCEAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSETFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLSETFENCENVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSETFENCENVPROC) (GLuint fence, GLenum condition);$/;"	t
PFNGLSETFRAGMENTSHADERCONSTANTATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSETFRAGMENTSHADERCONSTANTATIPROC) (GLuint dst, const GLfloat *value);$/;"	t
PFNGLSETINVARIANTEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSETINVARIANTEXTPROC) (GLuint id, GLenum type, const GLvoid *addr);$/;"	t
PFNGLSETLOCALCONSTANTEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSETLOCALCONSTANTEXTPROC) (GLuint id, GLenum type, const GLvoid *addr);$/;"	t
PFNGLSHADEROP1EXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP1EXTPROC) (GLenum op, GLuint res, GLuint arg1);$/;"	t
PFNGLSHADEROP2EXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP2EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2);$/;"	t
PFNGLSHADEROP3EXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP3EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);$/;"	t
PFNGLSHADERSOURCEARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEARBPROC) (GLhandleARB shaderObj, GLsizei count, const GLcharARB* *string, const GLint *length);$/;"	t
PFNGLSHARPENTEXFUNCSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHARPENTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *points);$/;"	t
PFNGLSPRITEPARAMETERFSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERFSGIXPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLSPRITEPARAMETERFVSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERFVSGIXPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLSPRITEPARAMETERISGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERISGIXPROC) (GLenum pname, GLint param);$/;"	t
PFNGLSPRITEPARAMETERIVSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERIVSGIXPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLSTARTINSTRUMENTSSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTARTINSTRUMENTSSGIXPROC) (void);$/;"	t
PFNGLSTENCILFUNCSEPARATEATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEATIPROC) (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);$/;"	t
PFNGLSTENCILOPSEPARATEATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEATIPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);$/;"	t
PFNGLSTOPINSTRUMENTSSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTOPINSTRUMENTSSGIXPROC) (GLint marker);$/;"	t
PFNGLSWIZZLEEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSWIZZLEEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);$/;"	t
PFNGLTAGSAMPLEBUFFERSGIXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTAGSAMPLEBUFFERSGIXPROC) (void);$/;"	t
PFNGLTANGENT3BEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);$/;"	t
PFNGLTANGENT3BVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3BVEXTPROC) (const GLbyte *v);$/;"	t
PFNGLTANGENT3DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);$/;"	t
PFNGLTANGENT3DVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3DVEXTPROC) (const GLdouble *v);$/;"	t
PFNGLTANGENT3FEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);$/;"	t
PFNGLTANGENT3FVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3FVEXTPROC) (const GLfloat *v);$/;"	t
PFNGLTANGENT3IEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);$/;"	t
PFNGLTANGENT3IVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3IVEXTPROC) (const GLint *v);$/;"	t
PFNGLTANGENT3SEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);$/;"	t
PFNGLTANGENT3SVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3SVEXTPROC) (const GLshort *v);$/;"	t
PFNGLTANGENTPOINTEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLTBUFFERMASK3DFXPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTBUFFERMASK3DFXPROC) (GLuint mask);$/;"	t
PFNGLTESTFENCEAPPLEPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLTESTFENCENVPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTFENCENVPROC) (GLuint fence);$/;"	t
PFNGLTESTOBJECTAPPLEPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTOBJECTAPPLEPROC) (GLenum object, GLuint name);$/;"	t
PFNGLTEXBUMPPARAMETERFVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERFVATIPROC) (GLenum pname, const GLfloat *param);$/;"	t
PFNGLTEXBUMPPARAMETERIVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERIVATIPROC) (GLenum pname, const GLint *param);$/;"	t
PFNGLTEXCOORD1HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1HNVPROC) (GLhalfNV s);$/;"	t
PFNGLTEXCOORD1HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC) (const GLfloat *tc, const GLubyte *c, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2FVERTEX3FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FVERTEX3FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2HNVPROC) (GLhalfNV s, GLhalfNV t);$/;"	t
PFNGLTEXCOORD2HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLTEXCOORD3HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	t
PFNGLTEXCOORD3HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLTEXCOORD4FVERTEX4FSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLTEXCOORD4FVERTEX4FVSUNPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FVSUNPROC) (const GLfloat *tc, const GLfloat *v);$/;"	t
PFNGLTEXCOORD4HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);$/;"	t
PFNGLTEXCOORD4HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLTEXCOORDPOINTEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLTEXCOORDPOINTERLISTIBMPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLTEXCOORDPOINTERVINTELPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* *pointer);$/;"	t
PFNGLTEXFILTERFUNCSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLsizei n, const GLfloat *weights);$/;"	t
PFNGLTEXIMAGE3DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXIMAGE3DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXIMAGE4DSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE4DSGISPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE1DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE2DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE3DEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE3DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE4DSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE4DSGISPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXTURECOLORMASKSGISPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURECOLORMASKSGISPROC) (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);$/;"	t
PFNGLTEXTURELIGHTEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURELIGHTEXTPROC) (GLenum pname);$/;"	t
PFNGLTEXTUREMATERIALEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t
PFNGLTEXTURENORMALEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURENORMALEXTPROC) (GLenum mode);$/;"	t
PFNGLTRACKMATRIXNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTRACKMATRIXNVPROC) (GLenum target, GLuint address, GLenum matrix, GLenum transform);$/;"	t
PFNGLUNIFORM1FARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FARBPROC) (GLint location, GLfloat v0);$/;"	t
PFNGLUNIFORM1FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM1IARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IARBPROC) (GLint location, GLint v0);$/;"	t
PFNGLUNIFORM1IVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM2FARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FARBPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLUNIFORM2FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM2IARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IARBPROC) (GLint location, GLint v0, GLint v1);$/;"	t
PFNGLUNIFORM2IVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM3FARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLUNIFORM3FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM3IARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLUNIFORM3IVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM4FARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLUNIFORM4FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM4IARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLUNIFORM4IVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORMMATRIX2FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNLOCKARRAYSEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNLOCKARRAYSEXTPROC) (void);$/;"	t
PFNGLUNMAPBUFFERARBPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERARBPROC) (GLenum target);$/;"	t
PFNGLUNMAPBUFFERPROC	include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC) (GLenum target);$/;"	t
PFNGLUNMAPOBJECTBUFFERATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNMAPOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLUPDATEOBJECTBUFFERATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);$/;"	t
PFNGLUSEPROGRAMOBJECTARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMOBJECTARBPROC) (GLhandleARB programObj);$/;"	t
PFNGLVALIDATEPROGRAMARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMARBPROC) (GLhandleARB programObj);$/;"	t
PFNGLVARIANTARRAYOBJECTATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);$/;"	t
PFNGLVARIANTBVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTBVEXTPROC) (GLuint id, const GLbyte *addr);$/;"	t
PFNGLVARIANTDVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTDVEXTPROC) (GLuint id, const GLdouble *addr);$/;"	t
PFNGLVARIANTFVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTFVEXTPROC) (GLuint id, const GLfloat *addr);$/;"	t
PFNGLVARIANTIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTIVEXTPROC) (GLuint id, const GLint *addr);$/;"	t
PFNGLVARIANTPOINTEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTPOINTEREXTPROC) (GLuint id, GLenum type, GLuint stride, const GLvoid *addr);$/;"	t
PFNGLVARIANTSVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTSVEXTPROC) (GLuint id, const GLshort *addr);$/;"	t
PFNGLVARIANTUBVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUBVEXTPROC) (GLuint id, const GLubyte *addr);$/;"	t
PFNGLVARIANTUIVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUIVEXTPROC) (GLuint id, const GLuint *addr);$/;"	t
PFNGLVARIANTUSVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUSVEXTPROC) (GLuint id, const GLushort *addr);$/;"	t
PFNGLVERTEX2HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2HNVPROC) (GLhalfNV x, GLhalfNV y);$/;"	t
PFNGLVERTEX2HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLVERTEX3HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	t
PFNGLVERTEX3HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLVERTEX4HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);$/;"	t
PFNGLVERTEX4HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLVERTEXARRAYPARAMETERIAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYPARAMETERIAPPLEPROC) (GLenum pname, GLint param);$/;"	t
PFNGLVERTEXARRAYRANGEAPPLEPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, GLvoid *pointer);$/;"	t
PFNGLVERTEXARRAYRANGENVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYRANGENVPROC) (GLsizei length, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIB1DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DARBPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIB1DNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DNVPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIB1DVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB1DVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB1FARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FARBPROC) (GLuint index, GLfloat x);$/;"	t
PFNGLVERTEXATTRIB1FNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FNVPROC) (GLuint index, GLfloat x);$/;"	t
PFNGLVERTEXATTRIB1FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB1FVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB1HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1HNVPROC) (GLuint index, GLhalfNV x);$/;"	t
PFNGLVERTEXATTRIB1HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIB1SARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SARBPROC) (GLuint index, GLshort x);$/;"	t
PFNGLVERTEXATTRIB1SNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SNVPROC) (GLuint index, GLshort x);$/;"	t
PFNGLVERTEXATTRIB1SVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB1SVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVNVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB2DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DARBPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIB2DNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DNVPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIB2DVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB2DVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB2FARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FARBPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXATTRIB2FNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FNVPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXATTRIB2FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB2FVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB2HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y);$/;"	t
PFNGLVERTEXATTRIB2HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIB2SARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SARBPROC) (GLuint index, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXATTRIB2SNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SNVPROC) (GLuint index, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXATTRIB2SVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB2SVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVNVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB3DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIB3DNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIB3DVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB3DVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB3FARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXATTRIB3FNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXATTRIB3FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB3FVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB3HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	t
PFNGLVERTEXATTRIB3HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIB3SARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXATTRIB3SNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXATTRIB3SVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB3SVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVNVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4BVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVARBPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIB4DNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIB4DVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB4DVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB4FARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXATTRIB4FNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXATTRIB4FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB4FVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB4HNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);$/;"	t
PFNGLVERTEXATTRIB4HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIB4IVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVARBPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4NBVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVARBPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4NIVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVARBPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4NSVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4NUBARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBARBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	t
PFNGLVERTEXATTRIB4NUBVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVARBPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4NUIVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVARBPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4NUSVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVARBPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIB4SARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXATTRIB4SNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXATTRIB4SVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4SVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVNVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4UBNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBNVPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	t
PFNGLVERTEXATTRIB4UBVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVARBPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4UBVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVNVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4UIVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVARBPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4USVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVARBPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIBARRAYOBJECTATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBARRAYOBJECTATIPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);$/;"	t
PFNGLVERTEXATTRIBPOINTERARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERARBPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBPOINTERNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERNVPROC) (GLuint index, GLint fsize, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBS1DVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBS1FVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIBS1HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIBS1SVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBS2DVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBS2FVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIBS2HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIBS2SVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBS3DVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBS3FVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIBS3HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIBS3SVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBS4DVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBS4FVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIBS4HVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIBS4SVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBS4UBVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4UBVNVPROC) (GLuint index, GLsizei count, const GLubyte *v);$/;"	t
PFNGLVERTEXBLENDARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDARBPROC) (GLint count);$/;"	t
PFNGLVERTEXBLENDENVFATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDENVFATIPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLVERTEXBLENDENVIATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDENVIATIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLVERTEXPOINTEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLVERTEXPOINTERLISTIBMPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLVERTEXPOINTERVINTELPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* *pointer);$/;"	t
PFNGLVERTEXSTREAM1DATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1DATIPROC) (GLenum stream, GLdouble x);$/;"	t
PFNGLVERTEXSTREAM1DVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLVERTEXSTREAM1FATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1FATIPROC) (GLenum stream, GLfloat x);$/;"	t
PFNGLVERTEXSTREAM1FVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLVERTEXSTREAM1IATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1IATIPROC) (GLenum stream, GLint x);$/;"	t
PFNGLVERTEXSTREAM1IVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLVERTEXSTREAM1SATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1SATIPROC) (GLenum stream, GLshort x);$/;"	t
PFNGLVERTEXSTREAM1SVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLVERTEXSTREAM2DATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2DATIPROC) (GLenum stream, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXSTREAM2DVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLVERTEXSTREAM2FATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2FATIPROC) (GLenum stream, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXSTREAM2FVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLVERTEXSTREAM2IATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2IATIPROC) (GLenum stream, GLint x, GLint y);$/;"	t
PFNGLVERTEXSTREAM2IVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLVERTEXSTREAM2SATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2SATIPROC) (GLenum stream, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXSTREAM2SVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLVERTEXSTREAM3DATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXSTREAM3DVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLVERTEXSTREAM3FATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXSTREAM3FVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLVERTEXSTREAM3IATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3IATIPROC) (GLenum stream, GLint x, GLint y, GLint z);$/;"	t
PFNGLVERTEXSTREAM3IVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLVERTEXSTREAM3SATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXSTREAM3SVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLVERTEXSTREAM4DATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXSTREAM4DVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLVERTEXSTREAM4FATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXSTREAM4FVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLVERTEXSTREAM4IATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4IATIPROC) (GLenum stream, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLVERTEXSTREAM4IVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLVERTEXSTREAM4SATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXSTREAM4SVATIPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLVERTEXWEIGHTFEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTFEXTPROC) (GLfloat weight);$/;"	t
PFNGLVERTEXWEIGHTFVEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTFVEXTPROC) (const GLfloat *weight);$/;"	t
PFNGLVERTEXWEIGHTHNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTHNVPROC) (GLhalfNV weight);$/;"	t
PFNGLVERTEXWEIGHTHVNVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTHVNVPROC) (const GLhalfNV *weight);$/;"	t
PFNGLVERTEXWEIGHTPOINTEREXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTPOINTEREXTPROC) (GLsizei size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLWEIGHTBVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTBVARBPROC) (GLint size, const GLbyte *weights);$/;"	t
PFNGLWEIGHTDVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTDVARBPROC) (GLint size, const GLdouble *weights);$/;"	t
PFNGLWEIGHTFVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTFVARBPROC) (GLint size, const GLfloat *weights);$/;"	t
PFNGLWEIGHTIVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTIVARBPROC) (GLint size, const GLint *weights);$/;"	t
PFNGLWEIGHTPOINTERARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLWEIGHTSVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTSVARBPROC) (GLint size, const GLshort *weights);$/;"	t
PFNGLWEIGHTUBVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUBVARBPROC) (GLint size, const GLubyte *weights);$/;"	t
PFNGLWEIGHTUIVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUIVARBPROC) (GLint size, const GLuint *weights);$/;"	t
PFNGLWEIGHTUSVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUSVARBPROC) (GLint size, const GLushort *weights);$/;"	t
PFNGLWINDOWPOS2DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DARBPROC) (GLdouble x, GLdouble y);$/;"	t
PFNGLWINDOWPOS2DMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DMESAPROC) (GLdouble x, GLdouble y);$/;"	t
PFNGLWINDOWPOS2DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DPROC) (GLdouble x, GLdouble y);$/;"	t
PFNGLWINDOWPOS2DVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVARBPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS2DVMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVMESAPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS2DVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS2FARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FARBPROC) (GLfloat x, GLfloat y);$/;"	t
PFNGLWINDOWPOS2FMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FMESAPROC) (GLfloat x, GLfloat y);$/;"	t
PFNGLWINDOWPOS2FPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FPROC) (GLfloat x, GLfloat y);$/;"	t
PFNGLWINDOWPOS2FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVARBPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS2FVMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVMESAPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS2FVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS2IARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IARBPROC) (GLint x, GLint y);$/;"	t
PFNGLWINDOWPOS2IMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IMESAPROC) (GLint x, GLint y);$/;"	t
PFNGLWINDOWPOS2IPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IPROC) (GLint x, GLint y);$/;"	t
PFNGLWINDOWPOS2IVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVARBPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS2IVMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVMESAPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS2IVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS2SARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SARBPROC) (GLshort x, GLshort y);$/;"	t
PFNGLWINDOWPOS2SMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SMESAPROC) (GLshort x, GLshort y);$/;"	t
PFNGLWINDOWPOS2SPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SPROC) (GLshort x, GLshort y);$/;"	t
PFNGLWINDOWPOS2SVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVARBPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS2SVMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVMESAPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS2SVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS3DARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DARBPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLWINDOWPOS3DMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DMESAPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLWINDOWPOS3DPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLWINDOWPOS3DVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVARBPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS3DVMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVMESAPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS3DVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS3FARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FARBPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLWINDOWPOS3FMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FMESAPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLWINDOWPOS3FPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLWINDOWPOS3FVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVARBPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS3FVMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVMESAPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS3FVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS3IARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IARBPROC) (GLint x, GLint y, GLint z);$/;"	t
PFNGLWINDOWPOS3IMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IMESAPROC) (GLint x, GLint y, GLint z);$/;"	t
PFNGLWINDOWPOS3IPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IPROC) (GLint x, GLint y, GLint z);$/;"	t
PFNGLWINDOWPOS3IVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVARBPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS3IVMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVMESAPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS3IVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS3SARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SARBPROC) (GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLWINDOWPOS3SMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SMESAPROC) (GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLWINDOWPOS3SPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SPROC) (GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLWINDOWPOS3SVARBPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVARBPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS3SVMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVMESAPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS3SVPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS4DMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4DMESAPROC) (GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLWINDOWPOS4DVMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4DVMESAPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS4FMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4FMESAPROC) (GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLWINDOWPOS4FVMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4FVMESAPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS4IMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4IMESAPROC) (GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLWINDOWPOS4IVMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4IVMESAPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS4SMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4SMESAPROC) (GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLWINDOWPOS4SVMESAPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4SVMESAPROC) (const GLshort *v);$/;"	t
PFNGLWRITEMASKEXTPROC	include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWRITEMASKEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);$/;"	t
PFNWGLALLOCATEMEMORYNVPROC	include/GL/wglext.h	/^typedef void* (WINAPI * PFNWGLALLOCATEMEMORYNVPROC) (GLsizei size, GLfloat readfreq, GLfloat writefreq, GLfloat priority);$/;"	t
PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);$/;"	t
PFNWGLBEGINFRAMETRACKINGI3DPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLBEGINFRAMETRACKINGI3DPROC) (void);$/;"	t
PFNWGLBINDDISPLAYCOLORTABLEEXTPROC	include/GL/wglext.h	/^typedef GLboolean (WINAPI * PFNWGLBINDDISPLAYCOLORTABLEEXTPROC) (GLushort id);$/;"	t
PFNWGLBINDTEXIMAGEARBPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);$/;"	t
PFNWGLCHOOSEPIXELFORMATARBPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLCHOOSEPIXELFORMATARBPROC) (HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats);$/;"	t
PFNWGLCHOOSEPIXELFORMATEXTPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLCHOOSEPIXELFORMATEXTPROC) (HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats);$/;"	t
PFNWGLCREATEBUFFERREGIONARBPROC	include/GL/wglext.h	/^typedef HANDLE (WINAPI * PFNWGLCREATEBUFFERREGIONARBPROC) (HDC hDC, int iLayerPlane, UINT uType);$/;"	t
PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC	include/GL/wglext.h	/^typedef GLboolean (WINAPI * PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC) (GLushort id);$/;"	t
PFNWGLCREATEIMAGEBUFFERI3DPROC	include/GL/wglext.h	/^typedef LPVOID (WINAPI * PFNWGLCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);$/;"	t
PFNWGLCREATEPBUFFERARBPROC	include/GL/wglext.h	/^typedef HPBUFFERARB (WINAPI * PFNWGLCREATEPBUFFERARBPROC) (HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList);$/;"	t
PFNWGLCREATEPBUFFEREXTPROC	include/GL/wglext.h	/^typedef HPBUFFEREXT (WINAPI * PFNWGLCREATEPBUFFEREXTPROC) (HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList);$/;"	t
PFNWGLDELETEBUFFERREGIONARBPROC	include/GL/wglext.h	/^typedef VOID (WINAPI * PFNWGLDELETEBUFFERREGIONARBPROC) (HANDLE hRegion);$/;"	t
PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC	include/GL/wglext.h	/^typedef VOID (WINAPI * PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC) (GLushort id);$/;"	t
PFNWGLDESTROYIMAGEBUFFERI3DPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);$/;"	t
PFNWGLDESTROYPBUFFERARBPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLDESTROYPBUFFERARBPROC) (HPBUFFERARB hPbuffer);$/;"	t
PFNWGLDESTROYPBUFFEREXTPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLDESTROYPBUFFEREXTPROC) (HPBUFFEREXT hPbuffer);$/;"	t
PFNWGLDISABLEFRAMELOCKI3DPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLDISABLEFRAMELOCKI3DPROC) (void);$/;"	t
PFNWGLDISABLEGENLOCKI3DPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLDISABLEGENLOCKI3DPROC) (HDC hDC);$/;"	t
PFNWGLENABLEFRAMELOCKI3DPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLENABLEFRAMELOCKI3DPROC) (void);$/;"	t
PFNWGLENABLEGENLOCKI3DPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLENABLEGENLOCKI3DPROC) (HDC hDC);$/;"	t
PFNWGLENDFRAMETRACKINGI3DPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLENDFRAMETRACKINGI3DPROC) (void);$/;"	t
PFNWGLFREEMEMORYNVPROC	include/GL/wglext.h	/^typedef void (WINAPI * PFNWGLFREEMEMORYNVPROC) (void *pointer);$/;"	t
PFNWGLGENLOCKSAMPLERATEI3DPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGENLOCKSAMPLERATEI3DPROC) (HDC hDC, UINT uRate);$/;"	t
PFNWGLGENLOCKSOURCEDELAYI3DPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGENLOCKSOURCEDELAYI3DPROC) (HDC hDC, UINT uDelay);$/;"	t
PFNWGLGENLOCKSOURCEEDGEI3DPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGENLOCKSOURCEEDGEI3DPROC) (HDC hDC, UINT uEdge);$/;"	t
PFNWGLGENLOCKSOURCEI3DPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGENLOCKSOURCEI3DPROC) (HDC hDC, UINT uSource);$/;"	t
PFNWGLGETCURRENTREADDCARBPROC	include/GL/wglext.h	/^typedef HDC (WINAPI * PFNWGLGETCURRENTREADDCARBPROC) (void);$/;"	t
PFNWGLGETCURRENTREADDCEXTPROC	include/GL/wglext.h	/^typedef HDC (WINAPI * PFNWGLGETCURRENTREADDCEXTPROC) (void);$/;"	t
PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC) (HDC hDC, int iAttribute, int *piValue);$/;"	t
PFNWGLGETEXTENSIONSSTRINGARBPROC	include/GL/wglext.h	/^typedef const char * (WINAPI * PFNWGLGETEXTENSIONSSTRINGARBPROC) (HDC hdc);$/;"	t
PFNWGLGETEXTENSIONSSTRINGEXTPROC	include/GL/wglext.h	/^typedef const char * (WINAPI * PFNWGLGETEXTENSIONSSTRINGEXTPROC) (void);$/;"	t
PFNWGLGETFRAMEUSAGEI3DPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETFRAMEUSAGEI3DPROC) (float *pUsage);$/;"	t
PFNWGLGETGAMMATABLEI3DPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGAMMATABLEI3DPROC) (HDC hDC, int iEntries, USHORT *puRed, USHORT *puGreen, USHORT *puBlue);$/;"	t
PFNWGLGETGAMMATABLEPARAMETERSI3DPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGAMMATABLEPARAMETERSI3DPROC) (HDC hDC, int iAttribute, int *piValue);$/;"	t
PFNWGLGETGENLOCKSAMPLERATEI3DPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGENLOCKSAMPLERATEI3DPROC) (HDC hDC, UINT *uRate);$/;"	t
PFNWGLGETGENLOCKSOURCEDELAYI3DPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGENLOCKSOURCEDELAYI3DPROC) (HDC hDC, UINT *uDelay);$/;"	t
PFNWGLGETGENLOCKSOURCEEDGEI3DPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGENLOCKSOURCEEDGEI3DPROC) (HDC hDC, UINT *uEdge);$/;"	t
PFNWGLGETGENLOCKSOURCEI3DPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGENLOCKSOURCEI3DPROC) (HDC hDC, UINT *uSource);$/;"	t
PFNWGLGETMSCRATEOMLPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETMSCRATEOMLPROC) (HDC hdc, INT32 *numerator, INT32 *denominator);$/;"	t
PFNWGLGETPBUFFERDCARBPROC	include/GL/wglext.h	/^typedef HDC (WINAPI * PFNWGLGETPBUFFERDCARBPROC) (HPBUFFERARB hPbuffer);$/;"	t
PFNWGLGETPBUFFERDCEXTPROC	include/GL/wglext.h	/^typedef HDC (WINAPI * PFNWGLGETPBUFFERDCEXTPROC) (HPBUFFEREXT hPbuffer);$/;"	t
PFNWGLGETPIXELFORMATATTRIBFVARBPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBFVARBPROC) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, FLOAT *pfValues);$/;"	t
PFNWGLGETPIXELFORMATATTRIBFVEXTPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBFVEXTPROC) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *piAttributes, FLOAT *pfValues);$/;"	t
PFNWGLGETPIXELFORMATATTRIBIVARBPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBIVARBPROC) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, int *piValues);$/;"	t
PFNWGLGETPIXELFORMATATTRIBIVEXTPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBIVEXTPROC) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *piAttributes, int *piValues);$/;"	t
PFNWGLGETSWAPINTERVALEXTPROC	include/GL/wglext.h	/^typedef int (WINAPI * PFNWGLGETSWAPINTERVALEXTPROC) (void);$/;"	t
PFNWGLGETSYNCVALUESOMLPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETSYNCVALUESOMLPROC) (HDC hdc, INT64 *ust, INT64 *msc, INT64 *sbc);$/;"	t
PFNWGLISENABLEDFRAMELOCKI3DPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLISENABLEDFRAMELOCKI3DPROC) (BOOL *pFlag);$/;"	t
PFNWGLISENABLEDGENLOCKI3DPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLISENABLEDGENLOCKI3DPROC) (HDC hDC, BOOL *pFlag);$/;"	t
PFNWGLLOADDISPLAYCOLORTABLEEXTPROC	include/GL/wglext.h	/^typedef GLboolean (WINAPI * PFNWGLLOADDISPLAYCOLORTABLEEXTPROC) (const GLushort *table, GLuint length);$/;"	t
PFNWGLMAKECONTEXTCURRENTARBPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLMAKECONTEXTCURRENTARBPROC) (HDC hDrawDC, HDC hReadDC, HGLRC hglrc);$/;"	t
PFNWGLMAKECONTEXTCURRENTEXTPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLMAKECONTEXTCURRENTEXTPROC) (HDC hDrawDC, HDC hReadDC, HGLRC hglrc);$/;"	t
PFNWGLQUERYFRAMELOCKMASTERI3DPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYFRAMELOCKMASTERI3DPROC) (BOOL *pFlag);$/;"	t
PFNWGLQUERYFRAMETRACKINGI3DPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYFRAMETRACKINGI3DPROC) (DWORD *pFrameCount, DWORD *pMissedFrames, float *pLastMissedUsage);$/;"	t
PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC) (HDC hDC, UINT *uMaxLineDelay, UINT *uMaxPixelDelay);$/;"	t
PFNWGLQUERYPBUFFERARBPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYPBUFFERARBPROC) (HPBUFFERARB hPbuffer, int iAttribute, int *piValue);$/;"	t
PFNWGLQUERYPBUFFEREXTPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYPBUFFEREXTPROC) (HPBUFFEREXT hPbuffer, int iAttribute, int *piValue);$/;"	t
PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID *pAddress, UINT count);$/;"	t
PFNWGLRELEASEPBUFFERDCARBPROC	include/GL/wglext.h	/^typedef int (WINAPI * PFNWGLRELEASEPBUFFERDCARBPROC) (HPBUFFERARB hPbuffer, HDC hDC);$/;"	t
PFNWGLRELEASEPBUFFERDCEXTPROC	include/GL/wglext.h	/^typedef int (WINAPI * PFNWGLRELEASEPBUFFERDCEXTPROC) (HPBUFFEREXT hPbuffer, HDC hDC);$/;"	t
PFNWGLRELEASETEXIMAGEARBPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);$/;"	t
PFNWGLRESTOREBUFFERREGIONARBPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLRESTOREBUFFERREGIONARBPROC) (HANDLE hRegion, int x, int y, int width, int height, int xSrc, int ySrc);$/;"	t
PFNWGLSAVEBUFFERREGIONARBPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLSAVEBUFFERREGIONARBPROC) (HANDLE hRegion, int x, int y, int width, int height);$/;"	t
PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC) (HDC hDC, int iAttribute, const int *piValue);$/;"	t
PFNWGLSETGAMMATABLEI3DPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLSETGAMMATABLEI3DPROC) (HDC hDC, int iEntries, const USHORT *puRed, const USHORT *puGreen, const USHORT *puBlue);$/;"	t
PFNWGLSETGAMMATABLEPARAMETERSI3DPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLSETGAMMATABLEPARAMETERSI3DPROC) (HDC hDC, int iAttribute, const int *piValue);$/;"	t
PFNWGLSETPBUFFERATTRIBARBPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int *piAttribList);$/;"	t
PFNWGLSWAPBUFFERSMSCOMLPROC	include/GL/wglext.h	/^typedef INT64 (WINAPI * PFNWGLSWAPBUFFERSMSCOMLPROC) (HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder);$/;"	t
PFNWGLSWAPINTERVALEXTPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLSWAPINTERVALEXTPROC) (int interval);$/;"	t
PFNWGLSWAPLAYERBUFFERSMSCOMLPROC	include/GL/wglext.h	/^typedef INT64 (WINAPI * PFNWGLSWAPLAYERBUFFERSMSCOMLPROC) (HDC hdc, int fuPlanes, INT64 target_msc, INT64 divisor, INT64 remainder);$/;"	t
PFNWGLWAITFORMSCOMLPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLWAITFORMSCOMLPROC) (HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder, INT64 *ust, INT64 *msc, INT64 *sbc);$/;"	t
PFNWGLWAITFORSBCOMLPROC	include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLWAITFORSBCOMLPROC) (HDC hdc, INT64 target_sbc, INT64 *ust, INT64 *msc, INT64 *sbc);$/;"	t
PI	particles/CircularWireConstraint.cpp	5;"	d	file:
PNGAPI	include/pngconf.h	1305;"	d
PNGAPI	include/pngconf.h	1306;"	d
PNGAPI	include/pngconf.h	1334;"	d
PNGAPI	include/pngconf.h	1336;"	d
PNGAPI	include/pngconf.h	1377;"	d
PNGAPI	include/pngconf.h	1386;"	d
PNGARG	include/pngconf.h	275;"	d
PNGARG	include/pngconf.h	279;"	d
PNGARG	include/pngconf.h	284;"	d
PNGCONF_H	include/pngconf.h	18;"	d
PNG_16_TO_8	include/png.h	2786;"	d
PNG_1_2_X	include/pngconf.h	20;"	d
PNG_ABORT	include/pngconf.h	1418;"	d
PNG_ADD_ALPHA	include/png.h	2801;"	d
PNG_AFTER_IDAT	include/png.h	2757;"	d
PNG_ALL_FILTERS	include/png.h	1856;"	d
PNG_ALL_MNG_FEATURES	include/png.h	1152;"	d
PNG_ALWAYS_EXTERN	include/pngconf.h	390;"	d
PNG_ASM_FLAGS_INITIALIZED	include/png.h	2587;"	d
PNG_ASM_FLAG_MMX_READ_COMBINE_ROW	include/png.h	2581;"	d
PNG_ASM_FLAG_MMX_READ_FILTER_AVG	include/png.h	2585;"	d
PNG_ASM_FLAG_MMX_READ_FILTER_PAETH	include/png.h	2586;"	d
PNG_ASM_FLAG_MMX_READ_FILTER_SUB	include/png.h	2583;"	d
PNG_ASM_FLAG_MMX_READ_FILTER_UP	include/png.h	2584;"	d
PNG_ASM_FLAG_MMX_READ_INTERLACE	include/png.h	2582;"	d
PNG_ASM_FLAG_MMX_SUPPORT_COMPILED	include/png.h	2579;"	d
PNG_ASM_FLAG_MMX_SUPPORT_IN_CPU	include/png.h	2580;"	d
PNG_ASSEMBLER_CODE_SUPPORTED	include/pngconf.h	747;"	d
PNG_BACKGROUND	include/png.h	2783;"	d
PNG_BACKGROUND_EXPAND	include/png.h	2784;"	d
PNG_BACKGROUND_GAMMA_FILE	include/png.h	1703;"	d
PNG_BACKGROUND_GAMMA_SCREEN	include/png.h	1702;"	d
PNG_BACKGROUND_GAMMA_UNIQUE	include/png.h	1704;"	d
PNG_BACKGROUND_GAMMA_UNKNOWN	include/png.h	1701;"	d
PNG_BACKGROUND_IS_GRAY	include/png.h	2771;"	d
PNG_BGR	include/png.h	2776;"	d
PNG_BUILD_DLL	include/pngconf.h	177;"	d
PNG_CHUNK_NAME_LENGTH	include/png.h	687;"	d
PNG_COLOR_DIST	include/png.h	2863;"	d
PNG_COLOR_MASK_ALPHA	include/png.h	995;"	d
PNG_COLOR_MASK_COLOR	include/png.h	994;"	d
PNG_COLOR_MASK_PALETTE	include/png.h	993;"	d
PNG_COLOR_TYPE_GA	include/png.h	1005;"	d
PNG_COLOR_TYPE_GRAY	include/png.h	998;"	d
PNG_COLOR_TYPE_GRAY_ALPHA	include/png.h	1002;"	d
PNG_COLOR_TYPE_PALETTE	include/png.h	999;"	d
PNG_COLOR_TYPE_RGB	include/png.h	1000;"	d
PNG_COLOR_TYPE_RGBA	include/png.h	1004;"	d
PNG_COLOR_TYPE_RGB_ALPHA	include/png.h	1001;"	d
PNG_COMPRESSION_TYPE_BASE	include/png.h	1008;"	d
PNG_COMPRESSION_TYPE_DEFAULT	include/png.h	1009;"	d
PNG_CONST	include/pngconf.h	445;"	d
PNG_CONST	include/pngconf.h	447;"	d
PNG_COST_FACTOR	include/png.h	2817;"	d
PNG_COST_SHIFT	include/png.h	2816;"	d
PNG_CRC_DEFAULT	include/png.h	1824;"	d
PNG_CRC_ERROR_QUIT	include/png.h	1825;"	d
PNG_CRC_NO_CHANGE	include/png.h	1829;"	d
PNG_CRC_QUIET_USE	include/png.h	1828;"	d
PNG_CRC_WARN_DISCARD	include/png.h	1826;"	d
PNG_CRC_WARN_USE	include/png.h	1827;"	d
PNG_DEBUG	include/pngconf.h	237;"	d
PNG_DEBUG_FILE	include/png.h	2525;"	d
PNG_DESTROY_WILL_FREE_DATA	include/png.h	2079;"	d
PNG_DITHER	include/png.h	2782;"	d
PNG_DITHER_BLUE_BITS	include/pngconf.h	416;"	d
PNG_DITHER_GREEN_BITS	include/pngconf.h	413;"	d
PNG_DITHER_RED_BITS	include/pngconf.h	410;"	d
PNG_DLL	include/pngconf.h	1265;"	d
PNG_DLL	include/pngconf.h	183;"	d
PNG_DLL	include/pngconf.h	197;"	d
PNG_DLL	include/pngconf.h	205;"	d
PNG_DLL	include/pngconf.h	212;"	d
PNG_EASY_ACCESS_SUPPORTED	include/pngconf.h	731;"	d
PNG_EQUATION_ARBITRARY	include/png.h	1029;"	d
PNG_EQUATION_BASE_E	include/png.h	1028;"	d
PNG_EQUATION_HYPERBOLIC	include/png.h	1030;"	d
PNG_EQUATION_LAST	include/png.h	1031;"	d
PNG_EQUATION_LINEAR	include/png.h	1027;"	d
PNG_ERROR_NUMBERS_SUPPORTED	include/pngconf.h	699;"	d
PNG_EXPAND	include/png.h	2788;"	d
PNG_EXPAND_tRNS	include/png.h	2802;"	d
PNG_EXPORT	include/pngconf.h	1353;"	d
PNG_EXPORT	include/pngconf.h	1355;"	d
PNG_EXPORT	include/pngconf.h	1394;"	d
PNG_EXPORT	include/pngconf.h	1404;"	d
PNG_EXPORT_TYPE1	include/pngconf.h	1347;"	d
PNG_EXPORT_TYPE2	include/pngconf.h	1348;"	d
PNG_EXPORT_VAR	include/pngconf.h	1398;"	d
PNG_EXPORT_VAR	include/pngconf.h	1409;"	d
PNG_EXTERN	include/pngconf.h	362;"	d
PNG_FILLER	include/png.h	2791;"	d
PNG_FILLER_AFTER	include/png.h	1654;"	d
PNG_FILLER_BEFORE	include/png.h	1653;"	d
PNG_FILTER_AVG	include/png.h	1854;"	d
PNG_FILTER_HEURISTIC_DEFAULT	include/png.h	1908;"	d
PNG_FILTER_HEURISTIC_LAST	include/png.h	1911;"	d
PNG_FILTER_HEURISTIC_UNWEIGHTED	include/png.h	1909;"	d
PNG_FILTER_HEURISTIC_WEIGHTED	include/png.h	1910;"	d
PNG_FILTER_NONE	include/png.h	1851;"	d
PNG_FILTER_PAETH	include/png.h	1855;"	d
PNG_FILTER_SUB	include/png.h	1852;"	d
PNG_FILTER_TYPE_BASE	include/png.h	1012;"	d
PNG_FILTER_TYPE_DEFAULT	include/png.h	1014;"	d
PNG_FILTER_UP	include/png.h	1853;"	d
PNG_FILTER_VALUE_AVG	include/png.h	1865;"	d
PNG_FILTER_VALUE_LAST	include/png.h	1867;"	d
PNG_FILTER_VALUE_NONE	include/png.h	1862;"	d
PNG_FILTER_VALUE_PAETH	include/png.h	1866;"	d
PNG_FILTER_VALUE_SUB	include/png.h	1863;"	d
PNG_FILTER_VALUE_UP	include/png.h	1864;"	d
PNG_FIXED_POINT_SUPPORTED	include/pngconf.h	536;"	d
PNG_FLAG_ADD_ALPHA	include/png.h	2841;"	d
PNG_FLAG_CRC_ANCILLARY_MASK	include/png.h	2852;"	d
PNG_FLAG_CRC_ANCILLARY_NOWARN	include/png.h	2829;"	d
PNG_FLAG_CRC_ANCILLARY_USE	include/png.h	2828;"	d
PNG_FLAG_CRC_CRITICAL_IGNORE	include/png.h	2831;"	d
PNG_FLAG_CRC_CRITICAL_MASK	include/png.h	2855;"	d
PNG_FLAG_CRC_CRITICAL_USE	include/png.h	2830;"	d
PNG_FLAG_CRC_MASK	include/png.h	2858;"	d
PNG_FLAG_FILLER_AFTER	include/png.h	2827;"	d
PNG_FLAG_FREE_HIST	include/png.h	2834;"	d
PNG_FLAG_FREE_PLTE	include/png.h	2832;"	d
PNG_FLAG_FREE_TRNS	include/png.h	2833;"	d
PNG_FLAG_KEEP_UNKNOWN_CHUNKS	include/png.h	2835;"	d
PNG_FLAG_KEEP_UNSAFE_CHUNKS	include/png.h	2836;"	d
PNG_FLAG_LIBRARY_MISMATCH	include/png.h	2837;"	d
PNG_FLAG_MALLOC_NULL_MEM_OK	include/png.h	2840;"	d
PNG_FLAG_MNG_EMPTY_PLTE	include/png.h	1150;"	d
PNG_FLAG_MNG_FILTER_64	include/png.h	1151;"	d
PNG_FLAG_ROW_INIT	include/png.h	2826;"	d
PNG_FLAG_STRIP_ALPHA	include/png.h	2842;"	d
PNG_FLAG_STRIP_ERROR_NUMBERS	include/png.h	2838;"	d
PNG_FLAG_STRIP_ERROR_TEXT	include/png.h	2839;"	d
PNG_FLAG_ZLIB_CUSTOM_LEVEL	include/png.h	2821;"	d
PNG_FLAG_ZLIB_CUSTOM_MEM_LEVEL	include/png.h	2822;"	d
PNG_FLAG_ZLIB_CUSTOM_METHOD	include/png.h	2824;"	d
PNG_FLAG_ZLIB_CUSTOM_STRATEGY	include/png.h	2820;"	d
PNG_FLAG_ZLIB_CUSTOM_WINDOW_BITS	include/png.h	2823;"	d
PNG_FLAG_ZLIB_FINISHED	include/png.h	2825;"	d
PNG_FLOATING_POINT_SUPPORTED	include/pngconf.h	125;"	d
PNG_FREE_ALL	include/png.h	2094;"	d
PNG_FREE_HIST	include/png.h	2083;"	d
PNG_FREE_ICCP	include/png.h	2084;"	d
PNG_FREE_LIST	include/png.h	2090;"	d
PNG_FREE_ME_SUPPORTED	include/pngconf.h	540;"	d
PNG_FREE_MUL	include/png.h	2095;"	d
PNG_FREE_PCAL	include/png.h	2087;"	d
PNG_FREE_PLTE	include/png.h	2091;"	d
PNG_FREE_ROWS	include/png.h	2086;"	d
PNG_FREE_SCAL	include/png.h	2088;"	d
PNG_FREE_SPLT	include/png.h	2085;"	d
PNG_FREE_TEXT	include/png.h	2093;"	d
PNG_FREE_TRNS	include/png.h	2092;"	d
PNG_FREE_UNKN	include/png.h	2089;"	d
PNG_GAMMA	include/png.h	2789;"	d
PNG_GAMMA_THRESHOLD	include/pngconf.h	434;"	d
PNG_GRAY_TO_RGB	include/png.h	2790;"	d
PNG_H	include/png.h	399;"	d
PNG_HANDLE_AS_UNKNOWN_SUPPORTED	include/pngconf.h	1077;"	d
PNG_HANDLE_AS_UNKNOWN_SUPPORTED	include/pngconf.h	934;"	d
PNG_HANDLE_CHUNK_ALWAYS	include/png.h	2574;"	d
PNG_HANDLE_CHUNK_AS_DEFAULT	include/png.h	2571;"	d
PNG_HANDLE_CHUNK_IF_SAFE	include/png.h	2573;"	d
PNG_HANDLE_CHUNK_NEVER	include/png.h	2572;"	d
PNG_HAVE_CHUNK_AFTER_IDAT	include/png.h	2773;"	d
PNG_HAVE_CHUNK_HEADER	include/png.h	2768;"	d
PNG_HAVE_IDAT	include/png.h	2756;"	d
PNG_HAVE_IEND	include/png.h	2758;"	d
PNG_HAVE_IHDR	include/png.h	2754;"	d
PNG_HAVE_PLTE	include/png.h	2755;"	d
PNG_HAVE_PNG_SIGNATURE	include/png.h	2772;"	d
PNG_HAVE_cHRM	include/png.h	2766;"	d
PNG_HAVE_gAMA	include/png.h	2765;"	d
PNG_HAVE_sRGB	include/png.h	2767;"	d
PNG_HEADER_VERSION_STRING	include/png.h	409;"	d
PNG_IDAT	include/png.h	2894;"	d
PNG_IEND	include/png.h	2895;"	d
PNG_IHDR	include/png.h	2893;"	d
PNG_IMPEXP	include/pngconf.h	1307;"	d
PNG_IMPEXP	include/pngconf.h	1308;"	d
PNG_IMPEXP	include/pngconf.h	1325;"	d
PNG_IMPEXP	include/pngconf.h	1342;"	d
PNG_IMPEXP	include/pngconf.h	1357;"	d
PNG_IMPEXP	include/pngconf.h	1359;"	d
PNG_IMPEXP	include/pngconf.h	1368;"	d
PNG_IMPEXP	include/pngconf.h	1370;"	d
PNG_IMPEXP	include/pngconf.h	1389;"	d
PNG_INFO_IDAT	include/png.h	1077;"	d
PNG_INFO_IMAGE_SUPPORTED	include/pngconf.h	1096;"	d
PNG_INFO_PLTE	include/png.h	1065;"	d
PNG_INFO_bKGD	include/png.h	1067;"	d
PNG_INFO_cHRM	include/png.h	1064;"	d
PNG_INFO_gAMA	include/png.h	1062;"	d
PNG_INFO_hIST	include/png.h	1068;"	d
PNG_INFO_iCCP	include/png.h	1074;"	d
PNG_INFO_oFFs	include/png.h	1070;"	d
PNG_INFO_pCAL	include/png.h	1072;"	d
PNG_INFO_pHYs	include/png.h	1069;"	d
PNG_INFO_sBIT	include/png.h	1063;"	d
PNG_INFO_sCAL	include/png.h	1076;"	d
PNG_INFO_sPLT	include/png.h	1075;"	d
PNG_INFO_sRGB	include/png.h	1073;"	d
PNG_INFO_tIME	include/png.h	1071;"	d
PNG_INFO_tRNS	include/png.h	1066;"	d
PNG_INTERLACE	include/png.h	2777;"	d
PNG_INTERLACE_ADAM7	include/png.h	1018;"	d
PNG_INTERLACE_LAST	include/png.h	1019;"	d
PNG_INTERLACE_NONE	include/png.h	1017;"	d
PNG_INTRAPIXEL_DIFFERENCING	include/png.h	1013;"	d
PNG_INVERT_ALPHA	include/png.h	2795;"	d
PNG_INVERT_MONO	include/png.h	2781;"	d
PNG_ITXT_COMPRESSION_NONE	include/png.h	659;"	d
PNG_ITXT_COMPRESSION_zTXt	include/png.h	660;"	d
PNG_KEYWORD_MAX_LENGTH	include/png.h	1052;"	d
PNG_LIBPNG_BUILD_ALPHA	include/png.h	425;"	d
PNG_LIBPNG_BUILD_BASE_TYPE	include/png.h	439;"	d
PNG_LIBPNG_BUILD_BETA	include/png.h	426;"	d
PNG_LIBPNG_BUILD_PATCH	include/png.h	432;"	d
PNG_LIBPNG_BUILD_PRIVATE	include/png.h	434;"	d
PNG_LIBPNG_BUILD_RC	include/png.h	427;"	d
PNG_LIBPNG_BUILD_RELEASE_STATUS_MASK	include/png.h	429;"	d
PNG_LIBPNG_BUILD_SPECIAL	include/png.h	436;"	d
PNG_LIBPNG_BUILD_STABLE	include/png.h	428;"	d
PNG_LIBPNG_BUILD_TYPE	include/png.h	470;"	d
PNG_LIBPNG_BUILD_TYPE	include/png.h	474;"	d
PNG_LIBPNG_BUILD_TYPE	include/png.h	477;"	d
PNG_LIBPNG_VER	include/png.h	446;"	d
PNG_LIBPNG_VER_BUILD	include/png.h	422;"	d
PNG_LIBPNG_VER_DLLNUM	include/png.h	413;"	d
PNG_LIBPNG_VER_MAJOR	include/png.h	416;"	d
PNG_LIBPNG_VER_MINOR	include/png.h	417;"	d
PNG_LIBPNG_VER_RELEASE	include/png.h	418;"	d
PNG_LIBPNG_VER_SONUM	include/png.h	412;"	d
PNG_LIBPNG_VER_STRING	include/png.h	408;"	d
PNG_MAX_GAMMA_8	include/pngconf.h	427;"	d
PNG_MAX_MALLOC_64K	include/pngconf.h	1151;"	d
PNG_MAX_MALLOC_64K	include/pngconf.h	138;"	d
PNG_MAX_PALETTE_LENGTH	include/png.h	1055;"	d
PNG_MAX_UINT	include/png.h	988;"	d
PNG_MMX_CODE_SUPPORTED	include/pngconf.h	770;"	d
PNG_MMX_FLAGS	include/png.h	2597;"	d
PNG_MMX_READ_FLAGS	include/png.h	2589;"	d
PNG_MMX_WRITE_FLAGS	include/png.h	2595;"	d
PNG_MNG_FEATURES_SUPPORTED	include/pngconf.h	119;"	d
PNG_NO_CONSOLE_IO	include/pngconf.h	235;"	d
PNG_NO_CONSOLE_IO	include/pngconf.h	244;"	d
PNG_NO_CONSOLE_IO	include/pngconf.h	251;"	d
PNG_NO_FILTERS	include/png.h	1850;"	d
PNG_NO_FIXED_POINT_SUPPORTED	include/pngconf.h	530;"	d
PNG_NO_FREE_ME	include/pngconf.h	511;"	d
PNG_NO_HANDLE_AS_UNKNOWN	include/pngconf.h	945;"	d
PNG_NO_INFO_IMAGE	include/pngconf.h	523;"	d
PNG_NO_MMX_CODE	include/pngconf.h	753;"	d
PNG_NO_MMX_CODE	include/pngconf.h	759;"	d
PNG_NO_MMX_CODE	include/pngconf.h	765;"	d
PNG_NO_MNG_FEATURES	include/pngconf.h	529;"	d
PNG_NO_MODULEDEF	include/pngconf.h	1320;"	d
PNG_NO_READ_EMPTY_PLTE	include/pngconf.h	528;"	d
PNG_NO_READ_RGB_TO_GRAY	include/pngconf.h	524;"	d
PNG_NO_READ_UNKNOWN_CHUNKS	include/pngconf.h	512;"	d
PNG_NO_READ_UNKNOWN_CHUNKS	include/pngconf.h	942;"	d
PNG_NO_READ_USER_CHUNKS	include/pngconf.h	514;"	d
PNG_NO_READ_USER_TRANSFORM	include/pngconf.h	525;"	d
PNG_NO_READ_iCCP	include/pngconf.h	515;"	d
PNG_NO_READ_iTXt	include/pngconf.h	488;"	d
PNG_NO_READ_iTXt	include/pngconf.h	517;"	d
PNG_NO_READ_iTXt	include/pngconf.h	852;"	d
PNG_NO_READ_sCAL	include/pngconf.h	519;"	d
PNG_NO_READ_sPLT	include/pngconf.h	521;"	d
PNG_NO_READ_tEXt	include/pngconf.h	853;"	d
PNG_NO_READ_zTXt	include/pngconf.h	854;"	d
PNG_NO_USER_MEM	include/pngconf.h	527;"	d
PNG_NO_WRITE_UNKNOWN_CHUNKS	include/pngconf.h	513;"	d
PNG_NO_WRITE_USER_TRANSFORM	include/pngconf.h	526;"	d
PNG_NO_WRITE_iCCP	include/pngconf.h	516;"	d
PNG_NO_WRITE_iTXt	include/pngconf.h	491;"	d
PNG_NO_WRITE_iTXt	include/pngconf.h	518;"	d
PNG_NO_WRITE_iTXt	include/pngconf.h	962;"	d
PNG_NO_WRITE_sCAL	include/pngconf.h	520;"	d
PNG_NO_WRITE_sPLT	include/pngconf.h	522;"	d
PNG_NO_WRITE_tEXt	include/pngconf.h	963;"	d
PNG_NO_WRITE_zTXt	include/pngconf.h	964;"	d
PNG_NO_iTXt_SUPPORTED	include/pngconf.h	485;"	d
PNG_OFFSET_LAST	include/png.h	1024;"	d
PNG_OFFSET_MICROMETER	include/png.h	1023;"	d
PNG_OFFSET_PIXEL	include/png.h	1022;"	d
PNG_OPTIMIZED_CODE_SUPPORTED	include/pngconf.h	741;"	d
PNG_OUT_OF_RANGE	include/png.h	2877;"	d
PNG_PACK	include/png.h	2778;"	d
PNG_PACKSWAP	include/png.h	2792;"	d
PNG_PLTE	include/png.h	2896;"	d
PNG_PROGRESSIVE_READ_SUPPORTED	include/pngconf.h	609;"	d
PNG_READ_16_TO_8_SUPPORTED	include/pngconf.h	579;"	d
PNG_READ_ANCILLARY_CHUNKS_SUPPORTED	include/pngconf.h	840;"	d
PNG_READ_BACKGROUND_SUPPORTED	include/pngconf.h	576;"	d
PNG_READ_BGR_SUPPORTED	include/pngconf.h	561;"	d
PNG_READ_COMPOSITE_NODIV_SUPPORTED	include/pngconf.h	617;"	d
PNG_READ_DITHER_SUPPORTED	include/pngconf.h	573;"	d
PNG_READ_EMPTY_PLTE_SUPPORTED	include/pngconf.h	625;"	d
PNG_READ_EXPAND_SUPPORTED	include/pngconf.h	552;"	d
PNG_READ_FILLER_SUPPORTED	include/pngconf.h	582;"	d
PNG_READ_GAMMA_SUPPORTED	include/pngconf.h	585;"	d
PNG_READ_GRAY_TO_RGB_SUPPORTED	include/pngconf.h	588;"	d
PNG_READ_INTERLACING_SUPPORTED	include/pngconf.h	613;"	d
PNG_READ_INVERT_ALPHA_SUPPORTED	include/pngconf.h	594;"	d
PNG_READ_INVERT_SUPPORTED	include/pngconf.h	570;"	d
PNG_READ_OPT_PLTE_SUPPORTED	include/pngconf.h	949;"	d
PNG_READ_PACKSWAP_SUPPORTED	include/pngconf.h	567;"	d
PNG_READ_PACK_SUPPORTED	include/pngconf.h	558;"	d
PNG_READ_RGB_TO_GRAY_SUPPORTED	include/pngconf.h	603;"	d
PNG_READ_SHIFT_SUPPORTED	include/pngconf.h	555;"	d
PNG_READ_STRIP_ALPHA_SUPPORTED	include/pngconf.h	597;"	d
PNG_READ_SUPPORTED	include/pngconf.h	106;"	d
PNG_READ_SWAP_ALPHA_SUPPORTED	include/pngconf.h	591;"	d
PNG_READ_SWAP_SUPPORTED	include/pngconf.h	564;"	d
PNG_READ_TEXT_SUPPORTED	include/pngconf.h	953;"	d
PNG_READ_TRANSFORMS_SUPPORTED	include/pngconf.h	547;"	d
PNG_READ_UNKNOWN_CHUNKS_SUPPORTED	include/pngconf.h	929;"	d
PNG_READ_USER_CHUNKS_SUPPORTED	include/pngconf.h	939;"	d
PNG_READ_USER_TRANSFORM_SUPPORTED	include/pngconf.h	600;"	d
PNG_READ_bKGD_SUPPORTED	include/pngconf.h	857;"	d
PNG_READ_cHRM_SUPPORTED	include/pngconf.h	861;"	d
PNG_READ_gAMA_SUPPORTED	include/pngconf.h	865;"	d
PNG_READ_hIST_SUPPORTED	include/pngconf.h	869;"	d
PNG_READ_iCCP_SUPPORTED	include/pngconf.h	873;"	d
PNG_READ_iTXt	include/pngconf.h	497;"	d
PNG_READ_iTXt_SUPPORTED	include/pngconf.h	878;"	d
PNG_READ_oFFs_SUPPORTED	include/pngconf.h	885;"	d
PNG_READ_pCAL_SUPPORTED	include/pngconf.h	889;"	d
PNG_READ_pHYs_SUPPORTED	include/pngconf.h	897;"	d
PNG_READ_sBIT_SUPPORTED	include/pngconf.h	901;"	d
PNG_READ_sCAL_SUPPORTED	include/pngconf.h	893;"	d
PNG_READ_sPLT_SUPPORTED	include/pngconf.h	905;"	d
PNG_READ_sRGB_SUPPORTED	include/pngconf.h	909;"	d
PNG_READ_tEXt_SUPPORTED	include/pngconf.h	913;"	d
PNG_READ_tIME_SUPPORTED	include/pngconf.h	917;"	d
PNG_READ_tRNS_SUPPORTED	include/pngconf.h	921;"	d
PNG_READ_zTXt_SUPPORTED	include/pngconf.h	925;"	d
PNG_RESOLUTION_LAST	include/png.h	1042;"	d
PNG_RESOLUTION_METER	include/png.h	1041;"	d
PNG_RESOLUTION_UNKNOWN	include/png.h	1040;"	d
PNG_RGBA	include/png.h	2787;"	d
PNG_RGB_TO_GRAY	include/png.h	2799;"	d
PNG_RGB_TO_GRAY_ERR	include/png.h	2797;"	d
PNG_RGB_TO_GRAY_WARN	include/png.h	2798;"	d
PNG_ROWBYTES	include/png.h	2868;"	d
PNG_SAVE_BSD_SOURCE	include/pngconf.h	319;"	d
PNG_SAVE_BSD_SOURCE	include/pngconf.h	339;"	d
PNG_SCALE_LAST	include/png.h	1037;"	d
PNG_SCALE_METER	include/png.h	1035;"	d
PNG_SCALE_RADIAN	include/png.h	1036;"	d
PNG_SCALE_UNKNOWN	include/png.h	1034;"	d
PNG_SELECT_READ	include/png.h	2602;"	d
PNG_SELECT_WRITE	include/png.h	2603;"	d
PNG_SETJMP_SUPPORTED	include/pngconf.h	309;"	d
PNG_SET_USER_LIMITS_SUPPORTED	include/pngconf.h	786;"	d
PNG_SET_WILL_FREE_DATA	include/png.h	2080;"	d
PNG_SHIFT	include/png.h	2779;"	d
PNG_SIZE_MAX	include/png.h	985;"	d
PNG_STATIC	include/pngconf.h	186;"	d
PNG_STATIC	include/pngconf.h	191;"	d
PNG_STRIP_ALPHA	include/png.h	2794;"	d
PNG_STRUCT_INFO	include/png.h	2811;"	d
PNG_STRUCT_PNG	include/png.h	2810;"	d
PNG_SWAP_ALPHA	include/png.h	2793;"	d
PNG_SWAP_BYTES	include/png.h	2780;"	d
PNG_TEXT_COMPRESSION_LAST	include/png.h	661;"	d
PNG_TEXT_COMPRESSION_NONE	include/png.h	657;"	d
PNG_TEXT_COMPRESSION_NONE_WR	include/png.h	655;"	d
PNG_TEXT_COMPRESSION_zTXt	include/png.h	658;"	d
PNG_TEXT_COMPRESSION_zTXt_WR	include/png.h	656;"	d
PNG_TEXT_SUPPORTED	include/pngconf.h	1085;"	d
PNG_TEXT_SUPPORTED	include/pngconf.h	954;"	d
PNG_TIME_RFC1123_SUPPORTED	include/pngconf.h	711;"	d
PNG_TRANSFORM_BGR	include/png.h	1143;"	d
PNG_TRANSFORM_EXPAND	include/png.h	1140;"	d
PNG_TRANSFORM_IDENTITY	include/png.h	1135;"	d
PNG_TRANSFORM_INVERT_ALPHA	include/png.h	1146;"	d
PNG_TRANSFORM_INVERT_MONO	include/png.h	1141;"	d
PNG_TRANSFORM_PACKING	include/png.h	1138;"	d
PNG_TRANSFORM_PACKSWAP	include/png.h	1139;"	d
PNG_TRANSFORM_SHIFT	include/png.h	1142;"	d
PNG_TRANSFORM_STRIP_16	include/png.h	1136;"	d
PNG_TRANSFORM_STRIP_ALPHA	include/png.h	1137;"	d
PNG_TRANSFORM_STRIP_FILLER	include/png.h	1147;"	d
PNG_TRANSFORM_SWAP_ALPHA	include/png.h	1144;"	d
PNG_TRANSFORM_SWAP_ENDIAN	include/png.h	1145;"	d
PNG_TYPECAST_NULL	include/pngconf.h	281;"	d
PNG_UINT_31_MAX	include/png.h	983;"	d
PNG_UINT_32_MAX	include/png.h	984;"	d
PNG_UNKNOWN_CHUNKS_SUPPORTED	include/pngconf.h	1073;"	d
PNG_UNKNOWN_CHUNKS_SUPPORTED	include/pngconf.h	931;"	d
PNG_USER_CHUNKS_SUPPORTED	include/pngconf.h	940;"	d
PNG_USER_HEIGHT_MAX	include/pngconf.h	798;"	d
PNG_USER_MEM_SUPPORTED	include/pngconf.h	778;"	d
PNG_USER_PRIVATEBUILD	include/pngconf.h	28;"	d
PNG_USER_PRIVATEBUILD	include/pngconf.h	70;"	d
PNG_USER_TRANSFORM	include/png.h	2796;"	d
PNG_USER_TRANSFORM_PTR_SUPPORTED	include/pngconf.h	706;"	d
PNG_USER_WIDTH_MAX	include/pngconf.h	795;"	d
PNG_USER_WILL_FREE_DATA	include/png.h	2081;"	d
PNG_USE_DLL	include/pngconf.h	180;"	d
PNG_USE_DLL	include/pngconf.h	194;"	d
PNG_USE_DLL	include/pngconf.h	202;"	d
PNG_USE_DLL	include/pngconf.h	209;"	d
PNG_USE_GLOBAL_ARRAYS	include/pngconf.h	1274;"	d
PNG_USE_GLOBAL_ARRAYS	include/pngconf.h	1282;"	d
PNG_USE_GLOBAL_ARRAYS	include/pngconf.h	1300;"	d
PNG_USE_LOCAL_ARRAYS	include/pngconf.h	1277;"	d
PNG_USE_LOCAL_ARRAYS	include/pngconf.h	1287;"	d
PNG_USE_LOCAL_ARRAYS	include/pngconf.h	1298;"	d
PNG_WARN_UNINITIALIZED_ROW	include/pngconf.h	82;"	d
PNG_WEIGHT_FACTOR	include/png.h	2815;"	d
PNG_WEIGHT_SHIFT	include/png.h	2814;"	d
PNG_WRITE_ANCILLARY_CHUNKS_SUPPORTED	include/pngconf.h	846;"	d
PNG_WRITE_BGR_SUPPORTED	include/pngconf.h	646;"	d
PNG_WRITE_EMPTY_PLTE_SUPPORTED	include/pngconf.h	691;"	d
PNG_WRITE_FILLER_SUPPORTED	include/pngconf.h	658;"	d
PNG_WRITE_FLUSH_SUPPORTED	include/pngconf.h	685;"	d
PNG_WRITE_INTERLACING_SUPPORTED	include/pngconf.h	673;"	d
PNG_WRITE_INVERT_ALPHA_SUPPORTED	include/pngconf.h	664;"	d
PNG_WRITE_INVERT_SUPPORTED	include/pngconf.h	655;"	d
PNG_WRITE_PACKSWAP_SUPPORTED	include/pngconf.h	652;"	d
PNG_WRITE_PACK_SUPPORTED	include/pngconf.h	643;"	d
PNG_WRITE_SHIFT_SUPPORTED	include/pngconf.h	640;"	d
PNG_WRITE_SUPPORTED	include/pngconf.h	112;"	d
PNG_WRITE_SWAP_ALPHA_SUPPORTED	include/pngconf.h	661;"	d
PNG_WRITE_SWAP_SUPPORTED	include/pngconf.h	649;"	d
PNG_WRITE_TEXT_SUPPORTED	include/pngconf.h	1083;"	d
PNG_WRITE_TRANSFORMS_SUPPORTED	include/pngconf.h	635;"	d
PNG_WRITE_UNKNOWN_CHUNKS_SUPPORTED	include/pngconf.h	1071;"	d
PNG_WRITE_USER_TRANSFORM_SUPPORTED	include/pngconf.h	667;"	d
PNG_WRITE_WEIGHTED_FILTER_SUPPORTED	include/pngconf.h	681;"	d
PNG_WRITE_bKGD_SUPPORTED	include/pngconf.h	967;"	d
PNG_WRITE_cHRM_SUPPORTED	include/pngconf.h	973;"	d
PNG_WRITE_gAMA_SUPPORTED	include/pngconf.h	979;"	d
PNG_WRITE_hIST_SUPPORTED	include/pngconf.h	985;"	d
PNG_WRITE_iCCP_SUPPORTED	include/pngconf.h	991;"	d
PNG_WRITE_iTXt	include/pngconf.h	500;"	d
PNG_WRITE_iTXt_SUPPORTED	include/pngconf.h	998;"	d
PNG_WRITE_oFFs_SUPPORTED	include/pngconf.h	1005;"	d
PNG_WRITE_pCAL_SUPPORTED	include/pngconf.h	1011;"	d
PNG_WRITE_pHYs_SUPPORTED	include/pngconf.h	1023;"	d
PNG_WRITE_sBIT_SUPPORTED	include/pngconf.h	1029;"	d
PNG_WRITE_sCAL_SUPPORTED	include/pngconf.h	1017;"	d
PNG_WRITE_sPLT_SUPPORTED	include/pngconf.h	1035;"	d
PNG_WRITE_sRGB_SUPPORTED	include/pngconf.h	1041;"	d
PNG_WRITE_tEXt_SUPPORTED	include/pngconf.h	1047;"	d
PNG_WRITE_tIME_SUPPORTED	include/pngconf.h	1053;"	d
PNG_WRITE_tRNS_SUPPORTED	include/pngconf.h	1059;"	d
PNG_WRITE_zTXt_SUPPORTED	include/pngconf.h	1065;"	d
PNG_WROTE_INFO_BEFORE_PLTE	include/png.h	2770;"	d
PNG_WROTE_tIME	include/png.h	2769;"	d
PNG_ZBUF_SIZE	include/pngconf.h	100;"	d
PNG_ZBUF_SIZE	include/pngconf.h	1474;"	d
PNG_ZBUF_SIZE	include/pngconf.h	1475;"	d
PNG_bKGD	include/png.h	2897;"	d
PNG_bKGD_SUPPORTED	include/pngconf.h	858;"	d
PNG_bKGD_SUPPORTED	include/pngconf.h	969;"	d
PNG_cHRM	include/png.h	2898;"	d
PNG_cHRM_SUPPORTED	include/pngconf.h	862;"	d
PNG_cHRM_SUPPORTED	include/pngconf.h	975;"	d
PNG_gAMA	include/png.h	2899;"	d
PNG_gAMA_SUPPORTED	include/pngconf.h	866;"	d
PNG_gAMA_SUPPORTED	include/pngconf.h	981;"	d
PNG_hIST	include/png.h	2900;"	d
PNG_hIST_SUPPORTED	include/pngconf.h	870;"	d
PNG_hIST_SUPPORTED	include/pngconf.h	987;"	d
PNG_iCCP	include/png.h	2901;"	d
PNG_iCCP_SUPPORTED	include/pngconf.h	874;"	d
PNG_iCCP_SUPPORTED	include/pngconf.h	993;"	d
PNG_iTXt	include/png.h	2902;"	d
PNG_iTXt_SUPPORTED	include/pngconf.h	1001;"	d
PNG_iTXt_SUPPORTED	include/pngconf.h	881;"	d
PNG_oFFs	include/png.h	2903;"	d
PNG_oFFs_SUPPORTED	include/pngconf.h	1007;"	d
PNG_oFFs_SUPPORTED	include/pngconf.h	886;"	d
PNG_pCAL	include/png.h	2904;"	d
PNG_pCAL_SUPPORTED	include/pngconf.h	1013;"	d
PNG_pCAL_SUPPORTED	include/pngconf.h	890;"	d
PNG_pHYs	include/png.h	2906;"	d
PNG_pHYs_SUPPORTED	include/pngconf.h	1025;"	d
PNG_pHYs_SUPPORTED	include/pngconf.h	898;"	d
PNG_sBIT	include/png.h	2907;"	d
PNG_sBIT_SUPPORTED	include/pngconf.h	1031;"	d
PNG_sBIT_SUPPORTED	include/pngconf.h	902;"	d
PNG_sCAL	include/png.h	2905;"	d
PNG_sCAL_SUPPORTED	include/pngconf.h	1019;"	d
PNG_sCAL_SUPPORTED	include/pngconf.h	894;"	d
PNG_sPLT	include/png.h	2908;"	d
PNG_sPLT_SUPPORTED	include/pngconf.h	1037;"	d
PNG_sPLT_SUPPORTED	include/pngconf.h	906;"	d
PNG_sRGB	include/png.h	2909;"	d
PNG_sRGB_INTENT_ABSOLUTE	include/png.h	1048;"	d
PNG_sRGB_INTENT_LAST	include/png.h	1049;"	d
PNG_sRGB_INTENT_PERCEPTUAL	include/png.h	1045;"	d
PNG_sRGB_INTENT_RELATIVE	include/png.h	1046;"	d
PNG_sRGB_INTENT_SATURATION	include/png.h	1047;"	d
PNG_sRGB_SUPPORTED	include/pngconf.h	1043;"	d
PNG_sRGB_SUPPORTED	include/pngconf.h	910;"	d
PNG_tEXt	include/png.h	2910;"	d
PNG_tEXt_SUPPORTED	include/pngconf.h	1049;"	d
PNG_tEXt_SUPPORTED	include/pngconf.h	914;"	d
PNG_tIME	include/png.h	2911;"	d
PNG_tIME_SUPPORTED	include/pngconf.h	1055;"	d
PNG_tIME_SUPPORTED	include/pngconf.h	918;"	d
PNG_tRNS	include/png.h	2912;"	d
PNG_tRNS_SUPPORTED	include/pngconf.h	1061;"	d
PNG_tRNS_SUPPORTED	include/pngconf.h	922;"	d
PNG_zTXt	include/png.h	2913;"	d
PNG_zTXt_SUPPORTED	include/pngconf.h	1067;"	d
PNG_zTXt_SUPPORTED	include/pngconf.h	926;"	d
PNTrianglesfATI	include/GL/glprocs.h	/^  void (APIENTRY *PNTrianglesfATI) (GLenum pname, GLfloat param);$/;"	m	struct:__anon1
PNTrianglesiATI	include/GL/glprocs.h	/^  void (APIENTRY *PNTrianglesiATI) (GLenum pname, GLint param);$/;"	m	struct:__anon1
Particle	particles/Particle.cpp	/^Particle::Particle(const Vec2f & ConstructPos, float Mass) :$/;"	f	class:Particle
Particle	particles/Particle.h	/^class Particle$/;"	c
PassTexCoordATI	include/GL/glprocs.h	/^  void (APIENTRY *PassTexCoordATI) (GLuint dst, GLuint coord, GLenum swizzle);$/;"	m	struct:__anon1
PixelDataRangeNV	include/GL/glprocs.h	/^  void (APIENTRY *PixelDataRangeNV) (GLenum target, GLsizei length, GLvoid *pointer);$/;"	m	struct:__anon1
PixelTexGenParameterfSGIS	include/GL/glprocs.h	/^  void (APIENTRY *PixelTexGenParameterfSGIS) (GLenum pname, GLfloat param);$/;"	m	struct:__anon1
PixelTexGenParameterfvSGIS	include/GL/glprocs.h	/^  void (APIENTRY *PixelTexGenParameterfvSGIS) (GLenum pname, const GLfloat *params);$/;"	m	struct:__anon1
PixelTexGenParameteriSGIS	include/GL/glprocs.h	/^  void (APIENTRY *PixelTexGenParameteriSGIS) (GLenum pname, GLint param);$/;"	m	struct:__anon1
PixelTexGenParameterivSGIS	include/GL/glprocs.h	/^  void (APIENTRY *PixelTexGenParameterivSGIS) (GLenum pname, const GLint *params);$/;"	m	struct:__anon1
PixelTexGenSGIX	include/GL/glprocs.h	/^  void (APIENTRY *PixelTexGenSGIX) (GLenum mode);$/;"	m	struct:__anon1
PixelTransformParameterfEXT	include/GL/glprocs.h	/^  void (APIENTRY *PixelTransformParameterfEXT) (GLenum target, GLenum pname, GLfloat param);$/;"	m	struct:__anon1
PixelTransformParameterfvEXT	include/GL/glprocs.h	/^  void (APIENTRY *PixelTransformParameterfvEXT) (GLenum target, GLenum pname, const GLfloat *params);$/;"	m	struct:__anon1
PixelTransformParameteriEXT	include/GL/glprocs.h	/^  void (APIENTRY *PixelTransformParameteriEXT) (GLenum target, GLenum pname, GLint param);$/;"	m	struct:__anon1
PixelTransformParameterivEXT	include/GL/glprocs.h	/^  void (APIENTRY *PixelTransformParameterivEXT) (GLenum target, GLenum pname, const GLint *params);$/;"	m	struct:__anon1
PointParameterf	include/GL/glprocs.h	/^  void (APIENTRY *PointParameterf) (GLenum pname, GLfloat param);$/;"	m	struct:__anon1
PointParameterfARB	include/GL/glprocs.h	/^  void (APIENTRY *PointParameterfARB) (GLenum pname, GLfloat param);$/;"	m	struct:__anon1
PointParameterfEXT	include/GL/glprocs.h	/^  void (APIENTRY *PointParameterfEXT) (GLenum pname, GLfloat param);$/;"	m	struct:__anon1
PointParameterfSGIS	include/GL/glprocs.h	/^  void (APIENTRY *PointParameterfSGIS) (GLenum pname, GLfloat param);$/;"	m	struct:__anon1
PointParameterfv	include/GL/glprocs.h	/^  void (APIENTRY *PointParameterfv) (GLenum pname, const GLfloat *params);$/;"	m	struct:__anon1
PointParameterfvARB	include/GL/glprocs.h	/^  void (APIENTRY *PointParameterfvARB) (GLenum pname, const GLfloat *params);$/;"	m	struct:__anon1
PointParameterfvEXT	include/GL/glprocs.h	/^  void (APIENTRY *PointParameterfvEXT) (GLenum pname, const GLfloat *params);$/;"	m	struct:__anon1
PointParameterfvSGIS	include/GL/glprocs.h	/^  void (APIENTRY *PointParameterfvSGIS) (GLenum pname, const GLfloat *params);$/;"	m	struct:__anon1
PointParameteri	include/GL/glprocs.h	/^  void (APIENTRY *PointParameteri) (GLenum pname, GLint param);$/;"	m	struct:__anon1
PointParameteriNV	include/GL/glprocs.h	/^  void (APIENTRY *PointParameteriNV) (GLenum pname, GLint param);$/;"	m	struct:__anon1
PointParameteriv	include/GL/glprocs.h	/^  void (APIENTRY *PointParameteriv) (GLenum pname, const GLint *params);$/;"	m	struct:__anon1
PointParameterivNV	include/GL/glprocs.h	/^  void (APIENTRY *PointParameterivNV) (GLenum pname, const GLint *params);$/;"	m	struct:__anon1
PollAsyncSGIX	include/GL/glprocs.h	/^  GLint (APIENTRY *PollAsyncSGIX) (GLuint *markerp);$/;"	m	struct:__anon1
PollInstrumentsSGIX	include/GL/glprocs.h	/^  GLint (APIENTRY *PollInstrumentsSGIX) (GLint *marker_p);$/;"	m	struct:__anon1
PolygonOffsetEXT	include/GL/glprocs.h	/^  void (APIENTRY *PolygonOffsetEXT) (GLfloat factor, GLfloat bias);$/;"	m	struct:__anon1
PrevDensityField	StableFluids.cpp	/^static ScalarField *DensityField, *PrevDensityField;$/;"	v	file:
PrevVelocityField	StableFluids.cpp	/^static VectorField *VelocityField, *PrevVelocityField;$/;"	v	file:
PrimitiveRestartIndexNV	include/GL/glprocs.h	/^  void (APIENTRY *PrimitiveRestartIndexNV) (GLuint index);$/;"	m	struct:__anon1
PrimitiveRestartNV	include/GL/glprocs.h	/^  void (APIENTRY *PrimitiveRestartNV) (void);$/;"	m	struct:__anon1
PrioritizeTexturesEXT	include/GL/glprocs.h	/^  void (APIENTRY *PrioritizeTexturesEXT) (GLsizei n, const GLuint *textures, const GLclampf *priorities);$/;"	m	struct:__anon1
ProgramEnvParameter4dARB	include/GL/glprocs.h	/^  void (APIENTRY *ProgramEnvParameter4dARB) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	m	struct:__anon1
ProgramEnvParameter4dvARB	include/GL/glprocs.h	/^  void (APIENTRY *ProgramEnvParameter4dvARB) (GLenum target, GLuint index, const GLdouble *params);$/;"	m	struct:__anon1
ProgramEnvParameter4fARB	include/GL/glprocs.h	/^  void (APIENTRY *ProgramEnvParameter4fARB) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	m	struct:__anon1
ProgramEnvParameter4fvARB	include/GL/glprocs.h	/^  void (APIENTRY *ProgramEnvParameter4fvARB) (GLenum target, GLuint index, const GLfloat *params);$/;"	m	struct:__anon1
ProgramLocalParameter4dARB	include/GL/glprocs.h	/^  void (APIENTRY *ProgramLocalParameter4dARB) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	m	struct:__anon1
ProgramLocalParameter4dvARB	include/GL/glprocs.h	/^  void (APIENTRY *ProgramLocalParameter4dvARB) (GLenum target, GLuint index, const GLdouble *params);$/;"	m	struct:__anon1
ProgramLocalParameter4fARB	include/GL/glprocs.h	/^  void (APIENTRY *ProgramLocalParameter4fARB) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	m	struct:__anon1
ProgramLocalParameter4fvARB	include/GL/glprocs.h	/^  void (APIENTRY *ProgramLocalParameter4fvARB) (GLenum target, GLuint index, const GLfloat *params);$/;"	m	struct:__anon1
ProgramNamedParameter4dNV	include/GL/glprocs.h	/^  void (APIENTRY *ProgramNamedParameter4dNV) (GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	m	struct:__anon1
ProgramNamedParameter4dvNV	include/GL/glprocs.h	/^  void (APIENTRY *ProgramNamedParameter4dvNV) (GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v);$/;"	m	struct:__anon1
ProgramNamedParameter4fNV	include/GL/glprocs.h	/^  void (APIENTRY *ProgramNamedParameter4fNV) (GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	m	struct:__anon1
ProgramNamedParameter4fvNV	include/GL/glprocs.h	/^  void (APIENTRY *ProgramNamedParameter4fvNV) (GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v);$/;"	m	struct:__anon1
ProgramParameter4dNV	include/GL/glprocs.h	/^  void (APIENTRY *ProgramParameter4dNV) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	m	struct:__anon1
ProgramParameter4dvNV	include/GL/glprocs.h	/^  void (APIENTRY *ProgramParameter4dvNV) (GLenum target, GLuint index, const GLdouble *v);$/;"	m	struct:__anon1
ProgramParameter4fNV	include/GL/glprocs.h	/^  void (APIENTRY *ProgramParameter4fNV) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	m	struct:__anon1
ProgramParameter4fvNV	include/GL/glprocs.h	/^  void (APIENTRY *ProgramParameter4fvNV) (GLenum target, GLuint index, const GLfloat *v);$/;"	m	struct:__anon1
ProgramParameters4dvNV	include/GL/glprocs.h	/^  void (APIENTRY *ProgramParameters4dvNV) (GLenum target, GLuint index, GLuint count, const GLdouble *v);$/;"	m	struct:__anon1
ProgramParameters4fvNV	include/GL/glprocs.h	/^  void (APIENTRY *ProgramParameters4fvNV) (GLenum target, GLuint index, GLuint count, const GLfloat *v);$/;"	m	struct:__anon1
ProgramStringARB	include/GL/glprocs.h	/^  void (APIENTRY *ProgramStringARB) (GLenum target, GLenum format, GLsizei len, const GLvoid *string);$/;"	m	struct:__anon1
Quat	include/gfx/quat.h	/^    Quat()                                       { v=0.0; s=1.0; }$/;"	f	class:gfx::Quat
Quat	include/gfx/quat.h	/^    Quat(const Quat& q)                          { *this=q; }$/;"	f	class:gfx::Quat
Quat	include/gfx/quat.h	/^    Quat(const Vec3& a, double b)                { v=a; s=b; }$/;"	f	class:gfx::Quat
Quat	include/gfx/quat.h	/^    Quat(double x, double y, double z, double w) { v[0]=x;v[1]=y;v[2]=z; s=w; }$/;"	f	class:gfx::Quat
Quat	include/gfx/quat.h	/^class Quat$/;"	c	namespace:gfx
QueryFrameLockMasterI3D	include/GL/glprocs.h	/^  BOOL (WINAPI *QueryFrameLockMasterI3D) (BOOL *pFlag);$/;"	m	struct:__anon1
QueryFrameTrackingI3D	include/GL/glprocs.h	/^  BOOL (WINAPI *QueryFrameTrackingI3D) (DWORD *pFrameCount, DWORD *pMissedFrames, float *pLastMissedUsage);$/;"	m	struct:__anon1
QueryGenlockMaxSourceDelayI3D	include/GL/glprocs.h	/^  BOOL (WINAPI *QueryGenlockMaxSourceDelayI3D) (HDC hDC, UINT *uMaxLineDelay, UINT *uMaxPixelDelay);$/;"	m	struct:__anon1
QueryPbufferARB	include/GL/glprocs.h	/^  BOOL (WINAPI *QueryPbufferARB) (HPBUFFERARB hPbuffer, int iAttribute, int *piValue);$/;"	m	struct:__anon1
QueryPbufferEXT	include/GL/glprocs.h	/^  BOOL (WINAPI *QueryPbufferEXT) (HPBUFFEREXT hPbuffer, int iAttribute, int *piValue);$/;"	m	struct:__anon1
RAND	particles/Solver.cpp	22;"	d	file:
ReadInstrumentsSGIX	include/GL/glprocs.h	/^  void (APIENTRY *ReadInstrumentsSGIX) (GLint marker);$/;"	m	struct:__anon1
Rectangle	Rectangle.cpp	/^Rectangle::Rectangle(const Vec2f &c, float i, float w, float h) :$/;"	f	class:Rectangle
Rectangle	Rectangle.h	/^class Rectangle : public RigidBody {$/;"	c
ReferencePlaneSGIX	include/GL/glprocs.h	/^  void (APIENTRY *ReferencePlaneSGIX) (const GLdouble *equation);$/;"	m	struct:__anon1
ReleaseImageBufferEventsI3D	include/GL/glprocs.h	/^  BOOL (WINAPI *ReleaseImageBufferEventsI3D) (HDC hDC, const LPVOID *pAddress, UINT count);$/;"	m	struct:__anon1
ReleasePbufferDCARB	include/GL/glprocs.h	/^  int (WINAPI *ReleasePbufferDCARB) (HPBUFFERARB hPbuffer, HDC hDC);$/;"	m	struct:__anon1
ReleasePbufferDCEXT	include/GL/glprocs.h	/^  int (WINAPI *ReleasePbufferDCEXT) (HPBUFFEREXT hPbuffer, HDC hDC);$/;"	m	struct:__anon1
ReleaseTexImageARB	include/GL/glprocs.h	/^  BOOL (WINAPI *ReleaseTexImageARB) (HPBUFFERARB hPbuffer, int iBuffer);$/;"	m	struct:__anon1
ReplacementCodePointerSUN	include/GL/glprocs.h	/^  void (APIENTRY *ReplacementCodePointerSUN) (GLenum type, GLsizei stride, const GLvoid* *pointer);$/;"	m	struct:__anon1
ReplacementCodeubSUN	include/GL/glprocs.h	/^  void (APIENTRY *ReplacementCodeubSUN) (GLubyte code);$/;"	m	struct:__anon1
ReplacementCodeubvSUN	include/GL/glprocs.h	/^  void (APIENTRY *ReplacementCodeubvSUN) (const GLubyte *code);$/;"	m	struct:__anon1
ReplacementCodeuiColor3fVertex3fSUN	include/GL/glprocs.h	/^  void (APIENTRY *ReplacementCodeuiColor3fVertex3fSUN) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	m	struct:__anon1
ReplacementCodeuiColor3fVertex3fvSUN	include/GL/glprocs.h	/^  void (APIENTRY *ReplacementCodeuiColor3fVertex3fvSUN) (const GLuint *rc, const GLfloat *c, const GLfloat *v);$/;"	m	struct:__anon1
ReplacementCodeuiColor4fNormal3fVertex3fSUN	include/GL/glprocs.h	/^  void (APIENTRY *ReplacementCodeuiColor4fNormal3fVertex3fSUN) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	m	struct:__anon1
ReplacementCodeuiColor4fNormal3fVertex3fvSUN	include/GL/glprocs.h	/^  void (APIENTRY *ReplacementCodeuiColor4fNormal3fVertex3fvSUN) (const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	m	struct:__anon1
ReplacementCodeuiColor4ubVertex3fSUN	include/GL/glprocs.h	/^  void (APIENTRY *ReplacementCodeuiColor4ubVertex3fSUN) (GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	m	struct:__anon1
ReplacementCodeuiColor4ubVertex3fvSUN	include/GL/glprocs.h	/^  void (APIENTRY *ReplacementCodeuiColor4ubVertex3fvSUN) (const GLuint *rc, const GLubyte *c, const GLfloat *v);$/;"	m	struct:__anon1
ReplacementCodeuiNormal3fVertex3fSUN	include/GL/glprocs.h	/^  void (APIENTRY *ReplacementCodeuiNormal3fVertex3fSUN) (GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	m	struct:__anon1
ReplacementCodeuiNormal3fVertex3fvSUN	include/GL/glprocs.h	/^  void (APIENTRY *ReplacementCodeuiNormal3fVertex3fvSUN) (const GLuint *rc, const GLfloat *n, const GLfloat *v);$/;"	m	struct:__anon1
ReplacementCodeuiSUN	include/GL/glprocs.h	/^  void (APIENTRY *ReplacementCodeuiSUN) (GLuint code);$/;"	m	struct:__anon1
ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN	include/GL/glprocs.h	/^  void (APIENTRY *ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN) (GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	m	struct:__anon1
ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN	include/GL/glprocs.h	/^  void (APIENTRY *ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN) (const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	m	struct:__anon1
ReplacementCodeuiTexCoord2fNormal3fVertex3fSUN	include/GL/glprocs.h	/^  void (APIENTRY *ReplacementCodeuiTexCoord2fNormal3fVertex3fSUN) (GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	m	struct:__anon1
ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN	include/GL/glprocs.h	/^  void (APIENTRY *ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN) (const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v);$/;"	m	struct:__anon1
ReplacementCodeuiTexCoord2fVertex3fSUN	include/GL/glprocs.h	/^  void (APIENTRY *ReplacementCodeuiTexCoord2fVertex3fSUN) (GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);$/;"	m	struct:__anon1
ReplacementCodeuiTexCoord2fVertex3fvSUN	include/GL/glprocs.h	/^  void (APIENTRY *ReplacementCodeuiTexCoord2fVertex3fvSUN) (const GLuint *rc, const GLfloat *tc, const GLfloat *v);$/;"	m	struct:__anon1
ReplacementCodeuiVertex3fSUN	include/GL/glprocs.h	/^  void (APIENTRY *ReplacementCodeuiVertex3fSUN) (GLuint rc, GLfloat x, GLfloat y, GLfloat z);$/;"	m	struct:__anon1
ReplacementCodeuiVertex3fvSUN	include/GL/glprocs.h	/^  void (APIENTRY *ReplacementCodeuiVertex3fvSUN) (const GLuint *rc, const GLfloat *v);$/;"	m	struct:__anon1
ReplacementCodeuivSUN	include/GL/glprocs.h	/^  void (APIENTRY *ReplacementCodeuivSUN) (const GLuint *code);$/;"	m	struct:__anon1
ReplacementCodeusSUN	include/GL/glprocs.h	/^  void (APIENTRY *ReplacementCodeusSUN) (GLushort code);$/;"	m	struct:__anon1
ReplacementCodeusvSUN	include/GL/glprocs.h	/^  void (APIENTRY *ReplacementCodeusvSUN) (const GLushort *code);$/;"	m	struct:__anon1
RequestResidentProgramsNV	include/GL/glprocs.h	/^  void (APIENTRY *RequestResidentProgramsNV) (GLsizei n, const GLuint *programs);$/;"	m	struct:__anon1
ResetHistogram	include/GL/glprocs.h	/^  void (APIENTRY *ResetHistogram) (GLenum target);$/;"	m	struct:__anon1
ResetHistogramEXT	include/GL/glprocs.h	/^  void (APIENTRY *ResetHistogramEXT) (GLenum target);$/;"	m	struct:__anon1
ResetMinmax	include/GL/glprocs.h	/^  void (APIENTRY *ResetMinmax) (GLenum target);$/;"	m	struct:__anon1
ResetMinmaxEXT	include/GL/glprocs.h	/^  void (APIENTRY *ResetMinmaxEXT) (GLenum target);$/;"	m	struct:__anon1
ResizeBuffersMESA	include/GL/glprocs.h	/^  void (APIENTRY *ResizeBuffersMESA) (void);$/;"	m	struct:__anon1
RestoreBufferRegionARB	include/GL/glprocs.h	/^  BOOL (WINAPI *RestoreBufferRegionARB) (HANDLE hRegion, int x, int y, int width, int height, int xSrc, int ySrc);$/;"	m	struct:__anon1
RigidBody	RigidBody.h	/^class RigidBody {$/;"	c
RodConstraint	particles/RodConstraint.cpp	/^RodConstraint::RodConstraint(Particle *p1, Particle *p2, double dist, std::vector<int> ids) :$/;"	f	class:RodConstraint
RodConstraint	particles/RodConstraint.h	/^class RodConstraint : public Constraint {$/;"	c
RungeKutta	particles/Solver.cpp	/^void RungeKutta(std::vector< Particle * > pVector, std::vector< Force * > fVector, float dt, std::vector< Constraint * > constraints) {$/;"	f
SEEK_CUR	include/zconf.h	297;"	d
SEEK_END	include/zconf.h	298;"	d
SEEK_SET	include/zconf.h	296;"	d
SMALL_MEDIUM	include/zconf.h	183;"	d
SMALL_MEDIUM	include/zconf.h	192;"	d
STDC	include/zconf.h	106;"	d
STDC	include/zconf.h	109;"	d
STDC	include/zconf.h	112;"	d
STDC	include/zconf.h	115;"	d
STDC	include/zconf.h	119;"	d
STDC	include/zconf.h	97;"	d
STDC99	include/zconf.h	101;"	d
SYS16BIT	include/zconf.h	79;"	d
SampleCoverage	include/GL/glprocs.h	/^  void (APIENTRY *SampleCoverage) (GLclampf value, GLboolean invert);$/;"	m	struct:__anon1
SampleCoverageARB	include/GL/glprocs.h	/^  void (APIENTRY *SampleCoverageARB) (GLclampf value, GLboolean invert);$/;"	m	struct:__anon1
SampleMapATI	include/GL/glprocs.h	/^  void (APIENTRY *SampleMapATI) (GLuint dst, GLuint interp, GLenum swizzle);$/;"	m	struct:__anon1
SampleMaskEXT	include/GL/glprocs.h	/^  void (APIENTRY *SampleMaskEXT) (GLclampf value, GLboolean invert);$/;"	m	struct:__anon1
SampleMaskSGIS	include/GL/glprocs.h	/^  void (APIENTRY *SampleMaskSGIS) (GLclampf value, GLboolean invert);$/;"	m	struct:__anon1
SamplePatternEXT	include/GL/glprocs.h	/^  void (APIENTRY *SamplePatternEXT) (GLenum pattern);$/;"	m	struct:__anon1
SamplePatternSGIS	include/GL/glprocs.h	/^  void (APIENTRY *SamplePatternSGIS) (GLenum pattern);$/;"	m	struct:__anon1
SaveBufferRegionARB	include/GL/glprocs.h	/^  BOOL (WINAPI *SaveBufferRegionARB) (HANDLE hRegion, int x, int y, int width, int height);$/;"	m	struct:__anon1
ScalarField	ScalarField.cpp	/^ScalarField::ScalarField(ScalarField *CopyField)$/;"	f	class:ScalarField
ScalarField	ScalarField.cpp	/^ScalarField::ScalarField(int a_NumCells, float a_Viscosity, float a_Dt)$/;"	f	class:ScalarField
ScalarField	ScalarField.h	/^class ScalarField$/;"	c
SecondaryColor3b	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColor3b) (GLbyte red, GLbyte green, GLbyte blue);$/;"	m	struct:__anon1
SecondaryColor3bEXT	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColor3bEXT) (GLbyte red, GLbyte green, GLbyte blue);$/;"	m	struct:__anon1
SecondaryColor3bv	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColor3bv) (const GLbyte *v);$/;"	m	struct:__anon1
SecondaryColor3bvEXT	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColor3bvEXT) (const GLbyte *v);$/;"	m	struct:__anon1
SecondaryColor3d	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColor3d) (GLdouble red, GLdouble green, GLdouble blue);$/;"	m	struct:__anon1
SecondaryColor3dEXT	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColor3dEXT) (GLdouble red, GLdouble green, GLdouble blue);$/;"	m	struct:__anon1
SecondaryColor3dv	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColor3dv) (const GLdouble *v);$/;"	m	struct:__anon1
SecondaryColor3dvEXT	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColor3dvEXT) (const GLdouble *v);$/;"	m	struct:__anon1
SecondaryColor3f	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColor3f) (GLfloat red, GLfloat green, GLfloat blue);$/;"	m	struct:__anon1
SecondaryColor3fEXT	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColor3fEXT) (GLfloat red, GLfloat green, GLfloat blue);$/;"	m	struct:__anon1
SecondaryColor3fv	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColor3fv) (const GLfloat *v);$/;"	m	struct:__anon1
SecondaryColor3fvEXT	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColor3fvEXT) (const GLfloat *v);$/;"	m	struct:__anon1
SecondaryColor3hNV	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColor3hNV) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	m	struct:__anon1
SecondaryColor3hvNV	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColor3hvNV) (const GLhalfNV *v);$/;"	m	struct:__anon1
SecondaryColor3i	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColor3i) (GLint red, GLint green, GLint blue);$/;"	m	struct:__anon1
SecondaryColor3iEXT	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColor3iEXT) (GLint red, GLint green, GLint blue);$/;"	m	struct:__anon1
SecondaryColor3iv	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColor3iv) (const GLint *v);$/;"	m	struct:__anon1
SecondaryColor3ivEXT	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColor3ivEXT) (const GLint *v);$/;"	m	struct:__anon1
SecondaryColor3s	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColor3s) (GLshort red, GLshort green, GLshort blue);$/;"	m	struct:__anon1
SecondaryColor3sEXT	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColor3sEXT) (GLshort red, GLshort green, GLshort blue);$/;"	m	struct:__anon1
SecondaryColor3sv	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColor3sv) (const GLshort *v);$/;"	m	struct:__anon1
SecondaryColor3svEXT	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColor3svEXT) (const GLshort *v);$/;"	m	struct:__anon1
SecondaryColor3ub	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColor3ub) (GLubyte red, GLubyte green, GLubyte blue);$/;"	m	struct:__anon1
SecondaryColor3ubEXT	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColor3ubEXT) (GLubyte red, GLubyte green, GLubyte blue);$/;"	m	struct:__anon1
SecondaryColor3ubv	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColor3ubv) (const GLubyte *v);$/;"	m	struct:__anon1
SecondaryColor3ubvEXT	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColor3ubvEXT) (const GLubyte *v);$/;"	m	struct:__anon1
SecondaryColor3ui	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColor3ui) (GLuint red, GLuint green, GLuint blue);$/;"	m	struct:__anon1
SecondaryColor3uiEXT	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColor3uiEXT) (GLuint red, GLuint green, GLuint blue);$/;"	m	struct:__anon1
SecondaryColor3uiv	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColor3uiv) (const GLuint *v);$/;"	m	struct:__anon1
SecondaryColor3uivEXT	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColor3uivEXT) (const GLuint *v);$/;"	m	struct:__anon1
SecondaryColor3us	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColor3us) (GLushort red, GLushort green, GLushort blue);$/;"	m	struct:__anon1
SecondaryColor3usEXT	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColor3usEXT) (GLushort red, GLushort green, GLushort blue);$/;"	m	struct:__anon1
SecondaryColor3usv	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColor3usv) (const GLushort *v);$/;"	m	struct:__anon1
SecondaryColor3usvEXT	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColor3usvEXT) (const GLushort *v);$/;"	m	struct:__anon1
SecondaryColorPointer	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColorPointer) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	m	struct:__anon1
SecondaryColorPointerEXT	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColorPointerEXT) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	m	struct:__anon1
SecondaryColorPointerListIBM	include/GL/glprocs.h	/^  void (APIENTRY *SecondaryColorPointerListIBM) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	m	struct:__anon1
SeparableFilter2D	include/GL/glprocs.h	/^  void (APIENTRY *SeparableFilter2D) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);$/;"	m	struct:__anon1
SeparableFilter2DEXT	include/GL/glprocs.h	/^  void (APIENTRY *SeparableFilter2DEXT) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);$/;"	m	struct:__anon1
SetDigitalVideoParametersI3D	include/GL/glprocs.h	/^  BOOL (WINAPI *SetDigitalVideoParametersI3D) (HDC hDC, int iAttribute, const int *piValue);$/;"	m	struct:__anon1
SetFenceAPPLE	include/GL/glprocs.h	/^  void (APIENTRY *SetFenceAPPLE) (GLuint fence);$/;"	m	struct:__anon1
SetFenceNV	include/GL/glprocs.h	/^  void (APIENTRY *SetFenceNV) (GLuint fence, GLenum condition);$/;"	m	struct:__anon1
SetFragmentShaderConstantATI	include/GL/glprocs.h	/^  void (APIENTRY *SetFragmentShaderConstantATI) (GLuint dst, const GLfloat *value);$/;"	m	struct:__anon1
SetGammaTableI3D	include/GL/glprocs.h	/^  BOOL (WINAPI *SetGammaTableI3D) (HDC hDC, int iEntries, const USHORT *puRed, const USHORT *puGreen, const USHORT *puBlue);$/;"	m	struct:__anon1
SetGammaTableParametersI3D	include/GL/glprocs.h	/^  BOOL (WINAPI *SetGammaTableParametersI3D) (HDC hDC, int iAttribute, const int *piValue);$/;"	m	struct:__anon1
SetInvariantEXT	include/GL/glprocs.h	/^  void (APIENTRY *SetInvariantEXT) (GLuint id, GLenum type, const GLvoid *addr);$/;"	m	struct:__anon1
SetLocalConstantEXT	include/GL/glprocs.h	/^  void (APIENTRY *SetLocalConstantEXT) (GLuint id, GLenum type, const GLvoid *addr);$/;"	m	struct:__anon1
SetPbufferAttribARB	include/GL/glprocs.h	/^  BOOL (WINAPI *SetPbufferAttribARB) (HPBUFFERARB hPbuffer, const int *piAttribList);$/;"	m	struct:__anon1
ShaderOp1EXT	include/GL/glprocs.h	/^  void (APIENTRY *ShaderOp1EXT) (GLenum op, GLuint res, GLuint arg1);$/;"	m	struct:__anon1
ShaderOp2EXT	include/GL/glprocs.h	/^  void (APIENTRY *ShaderOp2EXT) (GLenum op, GLuint res, GLuint arg1, GLuint arg2);$/;"	m	struct:__anon1
ShaderOp3EXT	include/GL/glprocs.h	/^  void (APIENTRY *ShaderOp3EXT) (GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);$/;"	m	struct:__anon1
ShaderSourceARB	include/GL/glprocs.h	/^  void (APIENTRY *ShaderSourceARB) (GLhandleARB shaderObj, GLsizei count, const GLcharARB* *string, const GLint *length);$/;"	m	struct:__anon1
SharpenTexFuncSGIS	include/GL/glprocs.h	/^  void (APIENTRY *SharpenTexFuncSGIS) (GLenum target, GLsizei n, const GLfloat *points);$/;"	m	struct:__anon1
Singleton	include/Singleton.h	/^	Singleton()$/;"	f	class:Singleton
Singleton	include/Singleton.h	/^class Singleton$/;"	c
SpringForce	particles/SpringForce.cpp	/^SpringForce::SpringForce(Particle *p1, Particle * p2, double dist, double ks, double kd) :$/;"	f	class:SpringForce
SpringForce	particles/SpringForce.h	/^class SpringForce : public Force $/;"	c
SpriteParameterfSGIX	include/GL/glprocs.h	/^  void (APIENTRY *SpriteParameterfSGIX) (GLenum pname, GLfloat param);$/;"	m	struct:__anon1
SpriteParameterfvSGIX	include/GL/glprocs.h	/^  void (APIENTRY *SpriteParameterfvSGIX) (GLenum pname, const GLfloat *params);$/;"	m	struct:__anon1
SpriteParameteriSGIX	include/GL/glprocs.h	/^  void (APIENTRY *SpriteParameteriSGIX) (GLenum pname, GLint param);$/;"	m	struct:__anon1
SpriteParameterivSGIX	include/GL/glprocs.h	/^  void (APIENTRY *SpriteParameterivSGIX) (GLenum pname, const GLint *params);$/;"	m	struct:__anon1
StartInstrumentsSGIX	include/GL/glprocs.h	/^  void (APIENTRY *StartInstrumentsSGIX) (void);$/;"	m	struct:__anon1
StencilFuncSeparateATI	include/GL/glprocs.h	/^  void (APIENTRY *StencilFuncSeparateATI) (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);$/;"	m	struct:__anon1
StencilOpSeparateATI	include/GL/glprocs.h	/^  void (APIENTRY *StencilOpSeparateATI) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);$/;"	m	struct:__anon1
StopInstrumentsSGIX	include/GL/glprocs.h	/^  void (APIENTRY *StopInstrumentsSGIX) (GLint marker);$/;"	m	struct:__anon1
SwapBuffersMscOML	include/GL/glprocs.h	/^  INT64 (WINAPI *SwapBuffersMscOML) (HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder);$/;"	m	struct:__anon1
SwapIntervalEXT	include/GL/glprocs.h	/^  BOOL (WINAPI *SwapIntervalEXT) (int interval);$/;"	m	struct:__anon1
SwapLayerBuffersMscOML	include/GL/glprocs.h	/^  INT64 (WINAPI *SwapLayerBuffersMscOML) (HDC hdc, int fuPlanes, INT64 target_msc, INT64 divisor, INT64 remainder);$/;"	m	struct:__anon1
SwizzleEXT	include/GL/glprocs.h	/^  void (APIENTRY *SwizzleEXT) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);$/;"	m	struct:__anon1
SymMat2	include/gfx/symmat2.h	/^    SymMat2(const SymMat2& m) { *this = m; }$/;"	f	class:gfx::SymMat2
SymMat2	include/gfx/symmat2.h	/^    SymMat2(double s=0.0) { *this = s; }$/;"	f	class:gfx::SymMat2
SymMat2	include/gfx/symmat2.h	/^class SymMat2$/;"	c	namespace:gfx
SymMat3	include/gfx/symmat3.h	/^    SymMat3(const SymMat3& m) { *this = m; }$/;"	f	class:gfx::SymMat3
SymMat3	include/gfx/symmat3.h	/^    SymMat3(double s=0.0) { *this = s; }$/;"	f	class:gfx::SymMat3
SymMat3	include/gfx/symmat3.h	/^class SymMat3$/;"	c	namespace:gfx
SymMat4	include/gfx/symmat4.h	/^    SymMat4(const SymMat4 &m) {*this=m;}$/;"	f	class:gfx::SymMat4
SymMat4	include/gfx/symmat4.h	/^    SymMat4(double s=0.0) { *this = 0.0; }$/;"	f	class:gfx::SymMat4
SymMat4	include/gfx/symmat4.h	/^class SymMat4$/;"	c	namespace:gfx
TIMING	include/gfx/gfx.h	95;"	d
TVec2	include/gfx/vec2.h	/^    TVec2(T s=0) { *this = s; }$/;"	f	class:gfx::TVec2
TVec2	include/gfx/vec2.h	/^    TVec2(T x, T y) { elt[0]=x; elt[1]=y; }$/;"	f	class:gfx::TVec2
TVec2	include/gfx/vec2.h	/^    template<class U> TVec2(const TVec2<U>& v) { *this = v; }$/;"	f	class:gfx::TVec2
TVec2	include/gfx/vec2.h	/^    template<class U> TVec2(const U v[2]) { elt[0]=v[0]; elt[1]=v[1]; }$/;"	f	class:gfx::TVec2
TVec2	include/gfx/vec2.h	/^class TVec2 {$/;"	c	namespace:gfx
TVec3	include/gfx/vec3.h	/^    TVec3(T s=0) { *this = s; }$/;"	f	class:gfx::TVec3
TVec3	include/gfx/vec3.h	/^    TVec3(T x, T y, T z) { elt[0]=x; elt[1]=y; elt[2]=z; }$/;"	f	class:gfx::TVec3
TVec3	include/gfx/vec3.h	/^    TVec3(const double *v) { elt[0]=v[0]; elt[1]=v[1]; elt[2]=v[2]; }$/;"	f	class:gfx::TVec3
TVec3	include/gfx/vec3.h	/^    TVec3(const float *v) { elt[0]=v[0]; elt[1]=v[1]; elt[2]=v[2]; }$/;"	f	class:gfx::TVec3
TVec3	include/gfx/vec3.h	/^    template<class U> TVec3(const TVec3<U>& v) { *this = v; }$/;"	f	class:gfx::TVec3
TVec3	include/gfx/vec3.h	/^    template<class U> TVec3(const U v[3])$/;"	f	class:gfx::TVec3
TVec3	include/gfx/vec3.h	/^class TVec3 {$/;"	c	namespace:gfx
TVec4	include/gfx/vec4.h	/^    TVec4(T s=0) { *this = s; }$/;"	f	class:gfx::TVec4
TVec4	include/gfx/vec4.h	/^    TVec4(T x, T y, T z, T w) { elt[0]=x; elt[1]=y; elt[2]=z; elt[3]=w; }$/;"	f	class:gfx::TVec4
TVec4	include/gfx/vec4.h	/^    template<class U> TVec4(const TVec3<U>& v,T w)$/;"	f	class:gfx::TVec4
TVec4	include/gfx/vec4.h	/^    template<class U> TVec4(const TVec4<U>& v) { *this = v; }$/;"	f	class:gfx::TVec4
TVec4	include/gfx/vec4.h	/^    template<class U> TVec4(const U v[4])$/;"	f	class:gfx::TVec4
TVec4	include/gfx/vec4.h	/^class TVec4 {$/;"	c	namespace:gfx
TagSampleBufferSGIX	include/GL/glprocs.h	/^  void (APIENTRY *TagSampleBufferSGIX) (void);$/;"	m	struct:__anon1
Tangent3bEXT	include/GL/glprocs.h	/^  void (APIENTRY *Tangent3bEXT) (GLbyte tx, GLbyte ty, GLbyte tz);$/;"	m	struct:__anon1
Tangent3bvEXT	include/GL/glprocs.h	/^  void (APIENTRY *Tangent3bvEXT) (const GLbyte *v);$/;"	m	struct:__anon1
Tangent3dEXT	include/GL/glprocs.h	/^  void (APIENTRY *Tangent3dEXT) (GLdouble tx, GLdouble ty, GLdouble tz);$/;"	m	struct:__anon1
Tangent3dvEXT	include/GL/glprocs.h	/^  void (APIENTRY *Tangent3dvEXT) (const GLdouble *v);$/;"	m	struct:__anon1
Tangent3fEXT	include/GL/glprocs.h	/^  void (APIENTRY *Tangent3fEXT) (GLfloat tx, GLfloat ty, GLfloat tz);$/;"	m	struct:__anon1
Tangent3fvEXT	include/GL/glprocs.h	/^  void (APIENTRY *Tangent3fvEXT) (const GLfloat *v);$/;"	m	struct:__anon1
Tangent3iEXT	include/GL/glprocs.h	/^  void (APIENTRY *Tangent3iEXT) (GLint tx, GLint ty, GLint tz);$/;"	m	struct:__anon1
Tangent3ivEXT	include/GL/glprocs.h	/^  void (APIENTRY *Tangent3ivEXT) (const GLint *v);$/;"	m	struct:__anon1
Tangent3sEXT	include/GL/glprocs.h	/^  void (APIENTRY *Tangent3sEXT) (GLshort tx, GLshort ty, GLshort tz);$/;"	m	struct:__anon1
Tangent3svEXT	include/GL/glprocs.h	/^  void (APIENTRY *Tangent3svEXT) (const GLshort *v);$/;"	m	struct:__anon1
TangentPointerEXT	include/GL/glprocs.h	/^  void (APIENTRY *TangentPointerEXT) (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	m	struct:__anon1
TbufferMask3DFX	include/GL/glprocs.h	/^  void (APIENTRY *TbufferMask3DFX) (GLuint mask);$/;"	m	struct:__anon1
TestFenceAPPLE	include/GL/glprocs.h	/^  GLboolean (APIENTRY *TestFenceAPPLE) (GLuint fence);$/;"	m	struct:__anon1
TestFenceNV	include/GL/glprocs.h	/^  GLboolean (APIENTRY *TestFenceNV) (GLuint fence);$/;"	m	struct:__anon1
TestObjectAPPLE	include/GL/glprocs.h	/^  GLboolean (APIENTRY *TestObjectAPPLE) (GLenum object, GLuint name);$/;"	m	struct:__anon1
TexBumpParameterfvATI	include/GL/glprocs.h	/^  void (APIENTRY *TexBumpParameterfvATI) (GLenum pname, const GLfloat *param);$/;"	m	struct:__anon1
TexBumpParameterivATI	include/GL/glprocs.h	/^  void (APIENTRY *TexBumpParameterivATI) (GLenum pname, const GLint *param);$/;"	m	struct:__anon1
TexCoord1hNV	include/GL/glprocs.h	/^  void (APIENTRY *TexCoord1hNV) (GLhalfNV s);$/;"	m	struct:__anon1
TexCoord1hvNV	include/GL/glprocs.h	/^  void (APIENTRY *TexCoord1hvNV) (const GLhalfNV *v);$/;"	m	struct:__anon1
TexCoord2fColor3fVertex3fSUN	include/GL/glprocs.h	/^  void (APIENTRY *TexCoord2fColor3fVertex3fSUN) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	m	struct:__anon1
TexCoord2fColor3fVertex3fvSUN	include/GL/glprocs.h	/^  void (APIENTRY *TexCoord2fColor3fVertex3fvSUN) (const GLfloat *tc, const GLfloat *c, const GLfloat *v);$/;"	m	struct:__anon1
TexCoord2fColor4fNormal3fVertex3fSUN	include/GL/glprocs.h	/^  void (APIENTRY *TexCoord2fColor4fNormal3fVertex3fSUN) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	m	struct:__anon1
TexCoord2fColor4fNormal3fVertex3fvSUN	include/GL/glprocs.h	/^  void (APIENTRY *TexCoord2fColor4fNormal3fVertex3fvSUN) (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	m	struct:__anon1
TexCoord2fColor4ubVertex3fSUN	include/GL/glprocs.h	/^  void (APIENTRY *TexCoord2fColor4ubVertex3fSUN) (GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	m	struct:__anon1
TexCoord2fColor4ubVertex3fvSUN	include/GL/glprocs.h	/^  void (APIENTRY *TexCoord2fColor4ubVertex3fvSUN) (const GLfloat *tc, const GLubyte *c, const GLfloat *v);$/;"	m	struct:__anon1
TexCoord2fNormal3fVertex3fSUN	include/GL/glprocs.h	/^  void (APIENTRY *TexCoord2fNormal3fVertex3fSUN) (GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	m	struct:__anon1
TexCoord2fNormal3fVertex3fvSUN	include/GL/glprocs.h	/^  void (APIENTRY *TexCoord2fNormal3fVertex3fvSUN) (const GLfloat *tc, const GLfloat *n, const GLfloat *v);$/;"	m	struct:__anon1
TexCoord2fVertex3fSUN	include/GL/glprocs.h	/^  void (APIENTRY *TexCoord2fVertex3fSUN) (GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);$/;"	m	struct:__anon1
TexCoord2fVertex3fvSUN	include/GL/glprocs.h	/^  void (APIENTRY *TexCoord2fVertex3fvSUN) (const GLfloat *tc, const GLfloat *v);$/;"	m	struct:__anon1
TexCoord2hNV	include/GL/glprocs.h	/^  void (APIENTRY *TexCoord2hNV) (GLhalfNV s, GLhalfNV t);$/;"	m	struct:__anon1
TexCoord2hvNV	include/GL/glprocs.h	/^  void (APIENTRY *TexCoord2hvNV) (const GLhalfNV *v);$/;"	m	struct:__anon1
TexCoord3hNV	include/GL/glprocs.h	/^  void (APIENTRY *TexCoord3hNV) (GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	m	struct:__anon1
TexCoord3hvNV	include/GL/glprocs.h	/^  void (APIENTRY *TexCoord3hvNV) (const GLhalfNV *v);$/;"	m	struct:__anon1
TexCoord4fColor4fNormal3fVertex4fSUN	include/GL/glprocs.h	/^  void (APIENTRY *TexCoord4fColor4fNormal3fVertex4fSUN) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	m	struct:__anon1
TexCoord4fColor4fNormal3fVertex4fvSUN	include/GL/glprocs.h	/^  void (APIENTRY *TexCoord4fColor4fNormal3fVertex4fvSUN) (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	m	struct:__anon1
TexCoord4fVertex4fSUN	include/GL/glprocs.h	/^  void (APIENTRY *TexCoord4fVertex4fSUN) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	m	struct:__anon1
TexCoord4fVertex4fvSUN	include/GL/glprocs.h	/^  void (APIENTRY *TexCoord4fVertex4fvSUN) (const GLfloat *tc, const GLfloat *v);$/;"	m	struct:__anon1
TexCoord4hNV	include/GL/glprocs.h	/^  void (APIENTRY *TexCoord4hNV) (GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);$/;"	m	struct:__anon1
TexCoord4hvNV	include/GL/glprocs.h	/^  void (APIENTRY *TexCoord4hvNV) (const GLhalfNV *v);$/;"	m	struct:__anon1
TexCoordPointerEXT	include/GL/glprocs.h	/^  void (APIENTRY *TexCoordPointerEXT) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	m	struct:__anon1
TexCoordPointerListIBM	include/GL/glprocs.h	/^  void (APIENTRY *TexCoordPointerListIBM) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	m	struct:__anon1
TexCoordPointervINTEL	include/GL/glprocs.h	/^  void (APIENTRY *TexCoordPointervINTEL) (GLint size, GLenum type, const GLvoid* *pointer);$/;"	m	struct:__anon1
TexFilterFuncSGIS	include/GL/glprocs.h	/^  void (APIENTRY *TexFilterFuncSGIS) (GLenum target, GLenum filter, GLsizei n, const GLfloat *weights);$/;"	m	struct:__anon1
TexImage3D	include/GL/glprocs.h	/^  void (APIENTRY *TexImage3D) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	m	struct:__anon1
TexImage3DEXT	include/GL/glprocs.h	/^  void (APIENTRY *TexImage3DEXT) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	m	struct:__anon1
TexImage4DSGIS	include/GL/glprocs.h	/^  void (APIENTRY *TexImage4DSGIS) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	m	struct:__anon1
TexSubImage1DEXT	include/GL/glprocs.h	/^  void (APIENTRY *TexSubImage1DEXT) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);$/;"	m	struct:__anon1
TexSubImage2DEXT	include/GL/glprocs.h	/^  void (APIENTRY *TexSubImage2DEXT) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);$/;"	m	struct:__anon1
TexSubImage3D	include/GL/glprocs.h	/^  void (APIENTRY *TexSubImage3D) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	m	struct:__anon1
TexSubImage3DEXT	include/GL/glprocs.h	/^  void (APIENTRY *TexSubImage3DEXT) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	m	struct:__anon1
TexSubImage4DSGIS	include/GL/glprocs.h	/^  void (APIENTRY *TexSubImage4DSGIS) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const GLvoid *pixels);$/;"	m	struct:__anon1
TextureColorMaskSGIS	include/GL/glprocs.h	/^  void (APIENTRY *TextureColorMaskSGIS) (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);$/;"	m	struct:__anon1
TextureLightEXT	include/GL/glprocs.h	/^  void (APIENTRY *TextureLightEXT) (GLenum pname);$/;"	m	struct:__anon1
TextureMaterialEXT	include/GL/glprocs.h	/^  void (APIENTRY *TextureMaterialEXT) (GLenum face, GLenum mode);$/;"	m	struct:__anon1
TextureNormalEXT	include/GL/glprocs.h	/^  void (APIENTRY *TextureNormalEXT) (GLenum mode);$/;"	m	struct:__anon1
TimeStep	ScalarField.cpp	/^void ScalarField::TimeStep(ScalarField *a_SrcField, ScalarField *a_PrevField, VectorField *VelocityField) {$/;"	f	class:ScalarField
TimeStep	VectorField.cpp	/^VectorField::TimeStep(VectorField *a_SrcField, VectorField *VelocityField, std::vector<RigidBody*> &bodies) {$/;"	f	class:VectorField
TrackMatrixNV	include/GL/glprocs.h	/^  void (APIENTRY *TrackMatrixNV) (GLenum target, GLuint address, GLenum matrix, GLenum transform);$/;"	m	struct:__anon1
UNALIGNED_OK	include/zconf.h	92;"	d
USE_FAR_KEYWORD	include/pngconf.h	1156;"	d
USE_FAR_KEYWORD	include/pngconf.h	1175;"	d
Uniform1fARB	include/GL/glprocs.h	/^  void (APIENTRY *Uniform1fARB) (GLint location, GLfloat v0);$/;"	m	struct:__anon1
Uniform1fvARB	include/GL/glprocs.h	/^  void (APIENTRY *Uniform1fvARB) (GLint location, GLsizei count, const GLfloat *value);$/;"	m	struct:__anon1
Uniform1iARB	include/GL/glprocs.h	/^  void (APIENTRY *Uniform1iARB) (GLint location, GLint v0);$/;"	m	struct:__anon1
Uniform1ivARB	include/GL/glprocs.h	/^  void (APIENTRY *Uniform1ivARB) (GLint location, GLsizei count, const GLint *value);$/;"	m	struct:__anon1
Uniform2fARB	include/GL/glprocs.h	/^  void (APIENTRY *Uniform2fARB) (GLint location, GLfloat v0, GLfloat v1);$/;"	m	struct:__anon1
Uniform2fvARB	include/GL/glprocs.h	/^  void (APIENTRY *Uniform2fvARB) (GLint location, GLsizei count, const GLfloat *value);$/;"	m	struct:__anon1
Uniform2iARB	include/GL/glprocs.h	/^  void (APIENTRY *Uniform2iARB) (GLint location, GLint v0, GLint v1);$/;"	m	struct:__anon1
Uniform2ivARB	include/GL/glprocs.h	/^  void (APIENTRY *Uniform2ivARB) (GLint location, GLsizei count, const GLint *value);$/;"	m	struct:__anon1
Uniform3fARB	include/GL/glprocs.h	/^  void (APIENTRY *Uniform3fARB) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	m	struct:__anon1
Uniform3fvARB	include/GL/glprocs.h	/^  void (APIENTRY *Uniform3fvARB) (GLint location, GLsizei count, const GLfloat *value);$/;"	m	struct:__anon1
Uniform3iARB	include/GL/glprocs.h	/^  void (APIENTRY *Uniform3iARB) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	m	struct:__anon1
Uniform3ivARB	include/GL/glprocs.h	/^  void (APIENTRY *Uniform3ivARB) (GLint location, GLsizei count, const GLint *value);$/;"	m	struct:__anon1
Uniform4fARB	include/GL/glprocs.h	/^  void (APIENTRY *Uniform4fARB) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	m	struct:__anon1
Uniform4fvARB	include/GL/glprocs.h	/^  void (APIENTRY *Uniform4fvARB) (GLint location, GLsizei count, const GLfloat *value);$/;"	m	struct:__anon1
Uniform4iARB	include/GL/glprocs.h	/^  void (APIENTRY *Uniform4iARB) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	m	struct:__anon1
Uniform4ivARB	include/GL/glprocs.h	/^  void (APIENTRY *Uniform4ivARB) (GLint location, GLsizei count, const GLint *value);$/;"	m	struct:__anon1
UniformMatrix2fvARB	include/GL/glprocs.h	/^  void (APIENTRY *UniformMatrix2fvARB) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	m	struct:__anon1
UniformMatrix3fvARB	include/GL/glprocs.h	/^  void (APIENTRY *UniformMatrix3fvARB) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	m	struct:__anon1
UniformMatrix4fvARB	include/GL/glprocs.h	/^  void (APIENTRY *UniformMatrix4fvARB) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	m	struct:__anon1
UnlockArraysEXT	include/GL/glprocs.h	/^  void (APIENTRY *UnlockArraysEXT) (void);$/;"	m	struct:__anon1
UnmapBuffer	include/GL/glprocs.h	/^  GLboolean (APIENTRY *UnmapBuffer) (GLenum target);$/;"	m	struct:__anon1
UnmapBufferARB	include/GL/glprocs.h	/^  GLboolean (APIENTRY *UnmapBufferARB) (GLenum target);$/;"	m	struct:__anon1
UnmapObjectBufferATI	include/GL/glprocs.h	/^  void (APIENTRY *UnmapObjectBufferATI) (GLuint buffer);$/;"	m	struct:__anon1
UpdateObjectBufferATI	include/GL/glprocs.h	/^  void (APIENTRY *UpdateObjectBufferATI) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);$/;"	m	struct:__anon1
UseProgramObjectARB	include/GL/glprocs.h	/^  void (APIENTRY *UseProgramObjectARB) (GLhandleARB programObj);$/;"	m	struct:__anon1
ValidateProgramARB	include/GL/glprocs.h	/^  void (APIENTRY *ValidateProgramARB) (GLhandleARB programObj);$/;"	m	struct:__anon1
VariantArrayObjectATI	include/GL/glprocs.h	/^  void (APIENTRY *VariantArrayObjectATI) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);$/;"	m	struct:__anon1
VariantPointerEXT	include/GL/glprocs.h	/^  void (APIENTRY *VariantPointerEXT) (GLuint id, GLenum type, GLuint stride, const GLvoid *addr);$/;"	m	struct:__anon1
VariantbvEXT	include/GL/glprocs.h	/^  void (APIENTRY *VariantbvEXT) (GLuint id, const GLbyte *addr);$/;"	m	struct:__anon1
VariantdvEXT	include/GL/glprocs.h	/^  void (APIENTRY *VariantdvEXT) (GLuint id, const GLdouble *addr);$/;"	m	struct:__anon1
VariantfvEXT	include/GL/glprocs.h	/^  void (APIENTRY *VariantfvEXT) (GLuint id, const GLfloat *addr);$/;"	m	struct:__anon1
VariantivEXT	include/GL/glprocs.h	/^  void (APIENTRY *VariantivEXT) (GLuint id, const GLint *addr);$/;"	m	struct:__anon1
VariantsvEXT	include/GL/glprocs.h	/^  void (APIENTRY *VariantsvEXT) (GLuint id, const GLshort *addr);$/;"	m	struct:__anon1
VariantubvEXT	include/GL/glprocs.h	/^  void (APIENTRY *VariantubvEXT) (GLuint id, const GLubyte *addr);$/;"	m	struct:__anon1
VariantuivEXT	include/GL/glprocs.h	/^  void (APIENTRY *VariantuivEXT) (GLuint id, const GLuint *addr);$/;"	m	struct:__anon1
VariantusvEXT	include/GL/glprocs.h	/^  void (APIENTRY *VariantusvEXT) (GLuint id, const GLushort *addr);$/;"	m	struct:__anon1
Vec2	include/gfx/vec2.h	/^typedef TVec2<double> Vec2;$/;"	t	namespace:gfx
Vec2f	include/gfx/vec2.h	/^typedef TVec2<float>  Vec2f;$/;"	t	namespace:gfx
Vec3	include/gfx/vec3.h	/^typedef TVec3<double> Vec3;$/;"	t	namespace:gfx
Vec3f	include/gfx/vec3.h	/^typedef TVec3<float>  Vec3f;$/;"	t	namespace:gfx
Vec4	include/gfx/vec4.h	/^typedef TVec4<double> Vec4;$/;"	t	namespace:gfx
Vec4f	include/gfx/vec4.h	/^typedef TVec4<float>  Vec4f;$/;"	t	namespace:gfx
VectorField	VectorField.cpp	/^VectorField::VectorField(VectorField *CopyField)$/;"	f	class:VectorField
VectorField	VectorField.cpp	/^VectorField::VectorField(int a_NumCells, float a_Viscosity, float a_Dt)$/;"	f	class:VectorField
VectorField	VectorField.h	/^class VectorField {$/;"	c
Velocity	Rectangle.h	/^    Vec2f Velocity;$/;"	m	class:Rectangle
VelocityField	StableFluids.cpp	/^static VectorField *VelocityField, *PrevVelocityField;$/;"	v	file:
Vertex2hNV	include/GL/glprocs.h	/^  void (APIENTRY *Vertex2hNV) (GLhalfNV x, GLhalfNV y);$/;"	m	struct:__anon1
Vertex2hvNV	include/GL/glprocs.h	/^  void (APIENTRY *Vertex2hvNV) (const GLhalfNV *v);$/;"	m	struct:__anon1
Vertex3hNV	include/GL/glprocs.h	/^  void (APIENTRY *Vertex3hNV) (GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	m	struct:__anon1
Vertex3hvNV	include/GL/glprocs.h	/^  void (APIENTRY *Vertex3hvNV) (const GLhalfNV *v);$/;"	m	struct:__anon1
Vertex4hNV	include/GL/glprocs.h	/^  void (APIENTRY *Vertex4hNV) (GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);$/;"	m	struct:__anon1
Vertex4hvNV	include/GL/glprocs.h	/^  void (APIENTRY *Vertex4hvNV) (const GLhalfNV *v);$/;"	m	struct:__anon1
VertexArrayParameteriAPPLE	include/GL/glprocs.h	/^  void (APIENTRY *VertexArrayParameteriAPPLE) (GLenum pname, GLint param);$/;"	m	struct:__anon1
VertexArrayRangeAPPLE	include/GL/glprocs.h	/^  void (APIENTRY *VertexArrayRangeAPPLE) (GLsizei length, GLvoid *pointer);$/;"	m	struct:__anon1
VertexArrayRangeNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexArrayRangeNV) (GLsizei length, const GLvoid *pointer);$/;"	m	struct:__anon1
VertexAttrib1dARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib1dARB) (GLuint index, GLdouble x);$/;"	m	struct:__anon1
VertexAttrib1dNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib1dNV) (GLuint index, GLdouble x);$/;"	m	struct:__anon1
VertexAttrib1dvARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib1dvARB) (GLuint index, const GLdouble *v);$/;"	m	struct:__anon1
VertexAttrib1dvNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib1dvNV) (GLuint index, const GLdouble *v);$/;"	m	struct:__anon1
VertexAttrib1fARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib1fARB) (GLuint index, GLfloat x);$/;"	m	struct:__anon1
VertexAttrib1fNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib1fNV) (GLuint index, GLfloat x);$/;"	m	struct:__anon1
VertexAttrib1fvARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib1fvARB) (GLuint index, const GLfloat *v);$/;"	m	struct:__anon1
VertexAttrib1fvNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib1fvNV) (GLuint index, const GLfloat *v);$/;"	m	struct:__anon1
VertexAttrib1hNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib1hNV) (GLuint index, GLhalfNV x);$/;"	m	struct:__anon1
VertexAttrib1hvNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib1hvNV) (GLuint index, const GLhalfNV *v);$/;"	m	struct:__anon1
VertexAttrib1sARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib1sARB) (GLuint index, GLshort x);$/;"	m	struct:__anon1
VertexAttrib1sNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib1sNV) (GLuint index, GLshort x);$/;"	m	struct:__anon1
VertexAttrib1svARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib1svARB) (GLuint index, const GLshort *v);$/;"	m	struct:__anon1
VertexAttrib1svNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib1svNV) (GLuint index, const GLshort *v);$/;"	m	struct:__anon1
VertexAttrib2dARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib2dARB) (GLuint index, GLdouble x, GLdouble y);$/;"	m	struct:__anon1
VertexAttrib2dNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib2dNV) (GLuint index, GLdouble x, GLdouble y);$/;"	m	struct:__anon1
VertexAttrib2dvARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib2dvARB) (GLuint index, const GLdouble *v);$/;"	m	struct:__anon1
VertexAttrib2dvNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib2dvNV) (GLuint index, const GLdouble *v);$/;"	m	struct:__anon1
VertexAttrib2fARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib2fARB) (GLuint index, GLfloat x, GLfloat y);$/;"	m	struct:__anon1
VertexAttrib2fNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib2fNV) (GLuint index, GLfloat x, GLfloat y);$/;"	m	struct:__anon1
VertexAttrib2fvARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib2fvARB) (GLuint index, const GLfloat *v);$/;"	m	struct:__anon1
VertexAttrib2fvNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib2fvNV) (GLuint index, const GLfloat *v);$/;"	m	struct:__anon1
VertexAttrib2hNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib2hNV) (GLuint index, GLhalfNV x, GLhalfNV y);$/;"	m	struct:__anon1
VertexAttrib2hvNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib2hvNV) (GLuint index, const GLhalfNV *v);$/;"	m	struct:__anon1
VertexAttrib2sARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib2sARB) (GLuint index, GLshort x, GLshort y);$/;"	m	struct:__anon1
VertexAttrib2sNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib2sNV) (GLuint index, GLshort x, GLshort y);$/;"	m	struct:__anon1
VertexAttrib2svARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib2svARB) (GLuint index, const GLshort *v);$/;"	m	struct:__anon1
VertexAttrib2svNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib2svNV) (GLuint index, const GLshort *v);$/;"	m	struct:__anon1
VertexAttrib3dARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib3dARB) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	m	struct:__anon1
VertexAttrib3dNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib3dNV) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	m	struct:__anon1
VertexAttrib3dvARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib3dvARB) (GLuint index, const GLdouble *v);$/;"	m	struct:__anon1
VertexAttrib3dvNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib3dvNV) (GLuint index, const GLdouble *v);$/;"	m	struct:__anon1
VertexAttrib3fARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib3fARB) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	m	struct:__anon1
VertexAttrib3fNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib3fNV) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	m	struct:__anon1
VertexAttrib3fvARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib3fvARB) (GLuint index, const GLfloat *v);$/;"	m	struct:__anon1
VertexAttrib3fvNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib3fvNV) (GLuint index, const GLfloat *v);$/;"	m	struct:__anon1
VertexAttrib3hNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib3hNV) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	m	struct:__anon1
VertexAttrib3hvNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib3hvNV) (GLuint index, const GLhalfNV *v);$/;"	m	struct:__anon1
VertexAttrib3sARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib3sARB) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	m	struct:__anon1
VertexAttrib3sNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib3sNV) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	m	struct:__anon1
VertexAttrib3svARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib3svARB) (GLuint index, const GLshort *v);$/;"	m	struct:__anon1
VertexAttrib3svNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib3svNV) (GLuint index, const GLshort *v);$/;"	m	struct:__anon1
VertexAttrib4NbvARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib4NbvARB) (GLuint index, const GLbyte *v);$/;"	m	struct:__anon1
VertexAttrib4NivARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib4NivARB) (GLuint index, const GLint *v);$/;"	m	struct:__anon1
VertexAttrib4NsvARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib4NsvARB) (GLuint index, const GLshort *v);$/;"	m	struct:__anon1
VertexAttrib4NubARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib4NubARB) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	m	struct:__anon1
VertexAttrib4NubvARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib4NubvARB) (GLuint index, const GLubyte *v);$/;"	m	struct:__anon1
VertexAttrib4NuivARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib4NuivARB) (GLuint index, const GLuint *v);$/;"	m	struct:__anon1
VertexAttrib4NusvARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib4NusvARB) (GLuint index, const GLushort *v);$/;"	m	struct:__anon1
VertexAttrib4bvARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib4bvARB) (GLuint index, const GLbyte *v);$/;"	m	struct:__anon1
VertexAttrib4dARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib4dARB) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	m	struct:__anon1
VertexAttrib4dNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib4dNV) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	m	struct:__anon1
VertexAttrib4dvARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib4dvARB) (GLuint index, const GLdouble *v);$/;"	m	struct:__anon1
VertexAttrib4dvNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib4dvNV) (GLuint index, const GLdouble *v);$/;"	m	struct:__anon1
VertexAttrib4fARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib4fARB) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	m	struct:__anon1
VertexAttrib4fNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib4fNV) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	m	struct:__anon1
VertexAttrib4fvARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib4fvARB) (GLuint index, const GLfloat *v);$/;"	m	struct:__anon1
VertexAttrib4fvNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib4fvNV) (GLuint index, const GLfloat *v);$/;"	m	struct:__anon1
VertexAttrib4hNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib4hNV) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);$/;"	m	struct:__anon1
VertexAttrib4hvNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib4hvNV) (GLuint index, const GLhalfNV *v);$/;"	m	struct:__anon1
VertexAttrib4ivARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib4ivARB) (GLuint index, const GLint *v);$/;"	m	struct:__anon1
VertexAttrib4sARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib4sARB) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	m	struct:__anon1
VertexAttrib4sNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib4sNV) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	m	struct:__anon1
VertexAttrib4svARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib4svARB) (GLuint index, const GLshort *v);$/;"	m	struct:__anon1
VertexAttrib4svNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib4svNV) (GLuint index, const GLshort *v);$/;"	m	struct:__anon1
VertexAttrib4ubNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib4ubNV) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	m	struct:__anon1
VertexAttrib4ubvARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib4ubvARB) (GLuint index, const GLubyte *v);$/;"	m	struct:__anon1
VertexAttrib4ubvNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib4ubvNV) (GLuint index, const GLubyte *v);$/;"	m	struct:__anon1
VertexAttrib4uivARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib4uivARB) (GLuint index, const GLuint *v);$/;"	m	struct:__anon1
VertexAttrib4usvARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttrib4usvARB) (GLuint index, const GLushort *v);$/;"	m	struct:__anon1
VertexAttribArrayObjectATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttribArrayObjectATI) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);$/;"	m	struct:__anon1
VertexAttribPointerARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttribPointerARB) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);$/;"	m	struct:__anon1
VertexAttribPointerNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttribPointerNV) (GLuint index, GLint fsize, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	m	struct:__anon1
VertexAttribs1dvNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttribs1dvNV) (GLuint index, GLsizei count, const GLdouble *v);$/;"	m	struct:__anon1
VertexAttribs1fvNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttribs1fvNV) (GLuint index, GLsizei count, const GLfloat *v);$/;"	m	struct:__anon1
VertexAttribs1hvNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttribs1hvNV) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	m	struct:__anon1
VertexAttribs1svNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttribs1svNV) (GLuint index, GLsizei count, const GLshort *v);$/;"	m	struct:__anon1
VertexAttribs2dvNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttribs2dvNV) (GLuint index, GLsizei count, const GLdouble *v);$/;"	m	struct:__anon1
VertexAttribs2fvNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttribs2fvNV) (GLuint index, GLsizei count, const GLfloat *v);$/;"	m	struct:__anon1
VertexAttribs2hvNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttribs2hvNV) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	m	struct:__anon1
VertexAttribs2svNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttribs2svNV) (GLuint index, GLsizei count, const GLshort *v);$/;"	m	struct:__anon1
VertexAttribs3dvNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttribs3dvNV) (GLuint index, GLsizei count, const GLdouble *v);$/;"	m	struct:__anon1
VertexAttribs3fvNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttribs3fvNV) (GLuint index, GLsizei count, const GLfloat *v);$/;"	m	struct:__anon1
VertexAttribs3hvNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttribs3hvNV) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	m	struct:__anon1
VertexAttribs3svNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttribs3svNV) (GLuint index, GLsizei count, const GLshort *v);$/;"	m	struct:__anon1
VertexAttribs4dvNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttribs4dvNV) (GLuint index, GLsizei count, const GLdouble *v);$/;"	m	struct:__anon1
VertexAttribs4fvNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttribs4fvNV) (GLuint index, GLsizei count, const GLfloat *v);$/;"	m	struct:__anon1
VertexAttribs4hvNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttribs4hvNV) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	m	struct:__anon1
VertexAttribs4svNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttribs4svNV) (GLuint index, GLsizei count, const GLshort *v);$/;"	m	struct:__anon1
VertexAttribs4ubvNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexAttribs4ubvNV) (GLuint index, GLsizei count, const GLubyte *v);$/;"	m	struct:__anon1
VertexBlendARB	include/GL/glprocs.h	/^  void (APIENTRY *VertexBlendARB) (GLint count);$/;"	m	struct:__anon1
VertexBlendEnvfATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexBlendEnvfATI) (GLenum pname, GLfloat param);$/;"	m	struct:__anon1
VertexBlendEnviATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexBlendEnviATI) (GLenum pname, GLint param);$/;"	m	struct:__anon1
VertexPointerEXT	include/GL/glprocs.h	/^  void (APIENTRY *VertexPointerEXT) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	m	struct:__anon1
VertexPointerListIBM	include/GL/glprocs.h	/^  void (APIENTRY *VertexPointerListIBM) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	m	struct:__anon1
VertexPointervINTEL	include/GL/glprocs.h	/^  void (APIENTRY *VertexPointervINTEL) (GLint size, GLenum type, const GLvoid* *pointer);$/;"	m	struct:__anon1
VertexStream1dATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexStream1dATI) (GLenum stream, GLdouble x);$/;"	m	struct:__anon1
VertexStream1dvATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexStream1dvATI) (GLenum stream, const GLdouble *coords);$/;"	m	struct:__anon1
VertexStream1fATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexStream1fATI) (GLenum stream, GLfloat x);$/;"	m	struct:__anon1
VertexStream1fvATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexStream1fvATI) (GLenum stream, const GLfloat *coords);$/;"	m	struct:__anon1
VertexStream1iATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexStream1iATI) (GLenum stream, GLint x);$/;"	m	struct:__anon1
VertexStream1ivATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexStream1ivATI) (GLenum stream, const GLint *coords);$/;"	m	struct:__anon1
VertexStream1sATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexStream1sATI) (GLenum stream, GLshort x);$/;"	m	struct:__anon1
VertexStream1svATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexStream1svATI) (GLenum stream, const GLshort *coords);$/;"	m	struct:__anon1
VertexStream2dATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexStream2dATI) (GLenum stream, GLdouble x, GLdouble y);$/;"	m	struct:__anon1
VertexStream2dvATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexStream2dvATI) (GLenum stream, const GLdouble *coords);$/;"	m	struct:__anon1
VertexStream2fATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexStream2fATI) (GLenum stream, GLfloat x, GLfloat y);$/;"	m	struct:__anon1
VertexStream2fvATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexStream2fvATI) (GLenum stream, const GLfloat *coords);$/;"	m	struct:__anon1
VertexStream2iATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexStream2iATI) (GLenum stream, GLint x, GLint y);$/;"	m	struct:__anon1
VertexStream2ivATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexStream2ivATI) (GLenum stream, const GLint *coords);$/;"	m	struct:__anon1
VertexStream2sATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexStream2sATI) (GLenum stream, GLshort x, GLshort y);$/;"	m	struct:__anon1
VertexStream2svATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexStream2svATI) (GLenum stream, const GLshort *coords);$/;"	m	struct:__anon1
VertexStream3dATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexStream3dATI) (GLenum stream, GLdouble x, GLdouble y, GLdouble z);$/;"	m	struct:__anon1
VertexStream3dvATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexStream3dvATI) (GLenum stream, const GLdouble *coords);$/;"	m	struct:__anon1
VertexStream3fATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexStream3fATI) (GLenum stream, GLfloat x, GLfloat y, GLfloat z);$/;"	m	struct:__anon1
VertexStream3fvATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexStream3fvATI) (GLenum stream, const GLfloat *coords);$/;"	m	struct:__anon1
VertexStream3iATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexStream3iATI) (GLenum stream, GLint x, GLint y, GLint z);$/;"	m	struct:__anon1
VertexStream3ivATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexStream3ivATI) (GLenum stream, const GLint *coords);$/;"	m	struct:__anon1
VertexStream3sATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexStream3sATI) (GLenum stream, GLshort x, GLshort y, GLshort z);$/;"	m	struct:__anon1
VertexStream3svATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexStream3svATI) (GLenum stream, const GLshort *coords);$/;"	m	struct:__anon1
VertexStream4dATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexStream4dATI) (GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	m	struct:__anon1
VertexStream4dvATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexStream4dvATI) (GLenum stream, const GLdouble *coords);$/;"	m	struct:__anon1
VertexStream4fATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexStream4fATI) (GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	m	struct:__anon1
VertexStream4fvATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexStream4fvATI) (GLenum stream, const GLfloat *coords);$/;"	m	struct:__anon1
VertexStream4iATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexStream4iATI) (GLenum stream, GLint x, GLint y, GLint z, GLint w);$/;"	m	struct:__anon1
VertexStream4ivATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexStream4ivATI) (GLenum stream, const GLint *coords);$/;"	m	struct:__anon1
VertexStream4sATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexStream4sATI) (GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	m	struct:__anon1
VertexStream4svATI	include/GL/glprocs.h	/^  void (APIENTRY *VertexStream4svATI) (GLenum stream, const GLshort *coords);$/;"	m	struct:__anon1
VertexWeightPointerEXT	include/GL/glprocs.h	/^  void (APIENTRY *VertexWeightPointerEXT) (GLsizei size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	m	struct:__anon1
VertexWeightfEXT	include/GL/glprocs.h	/^  void (APIENTRY *VertexWeightfEXT) (GLfloat weight);$/;"	m	struct:__anon1
VertexWeightfvEXT	include/GL/glprocs.h	/^  void (APIENTRY *VertexWeightfvEXT) (const GLfloat *weight);$/;"	m	struct:__anon1
VertexWeighthNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexWeighthNV) (GLhalfNV weight);$/;"	m	struct:__anon1
VertexWeighthvNV	include/GL/glprocs.h	/^  void (APIENTRY *VertexWeighthvNV) (const GLhalfNV *weight);$/;"	m	struct:__anon1
WGL_3DFX_multisample	include/GL/wglext.h	485;"	d
WGL_ACCELERATION_ARB	include/GL/wglext.h	78;"	d
WGL_ACCELERATION_EXT	include/GL/wglext.h	186;"	d
WGL_ACCUM_ALPHA_BITS_ARB	include/GL/wglext.h	112;"	d
WGL_ACCUM_ALPHA_BITS_EXT	include/GL/wglext.h	216;"	d
WGL_ACCUM_BITS_ARB	include/GL/wglext.h	108;"	d
WGL_ACCUM_BITS_EXT	include/GL/wglext.h	212;"	d
WGL_ACCUM_BLUE_BITS_ARB	include/GL/wglext.h	111;"	d
WGL_ACCUM_BLUE_BITS_EXT	include/GL/wglext.h	215;"	d
WGL_ACCUM_GREEN_BITS_ARB	include/GL/wglext.h	110;"	d
WGL_ACCUM_GREEN_BITS_EXT	include/GL/wglext.h	214;"	d
WGL_ACCUM_RED_BITS_ARB	include/GL/wglext.h	109;"	d
WGL_ACCUM_RED_BITS_EXT	include/GL/wglext.h	213;"	d
WGL_ALPHA_BITS_ARB	include/GL/wglext.h	106;"	d
WGL_ALPHA_BITS_EXT	include/GL/wglext.h	210;"	d
WGL_ALPHA_SHIFT_ARB	include/GL/wglext.h	107;"	d
WGL_ALPHA_SHIFT_EXT	include/GL/wglext.h	211;"	d
WGL_ARB_buffer_region	include/GL/wglext.h	325;"	d
WGL_ARB_extensions_string	include/GL/wglext.h	343;"	d
WGL_ARB_make_current_read	include/GL/wglext.h	363;"	d
WGL_ARB_multisample	include/GL/wglext.h	339;"	d
WGL_ARB_pbuffer	include/GL/wglext.h	373;"	d
WGL_ARB_pixel_format	include/GL/wglext.h	351;"	d
WGL_ARB_render_texture	include/GL/wglext.h	389;"	d
WGL_AUX0_ARB	include/GL/wglext.h	166;"	d
WGL_AUX1_ARB	include/GL/wglext.h	167;"	d
WGL_AUX2_ARB	include/GL/wglext.h	168;"	d
WGL_AUX3_ARB	include/GL/wglext.h	169;"	d
WGL_AUX4_ARB	include/GL/wglext.h	170;"	d
WGL_AUX5_ARB	include/GL/wglext.h	171;"	d
WGL_AUX6_ARB	include/GL/wglext.h	172;"	d
WGL_AUX7_ARB	include/GL/wglext.h	173;"	d
WGL_AUX8_ARB	include/GL/wglext.h	174;"	d
WGL_AUX9_ARB	include/GL/wglext.h	175;"	d
WGL_AUX_BUFFERS_ARB	include/GL/wglext.h	115;"	d
WGL_AUX_BUFFERS_EXT	include/GL/wglext.h	219;"	d
WGL_BACK_COLOR_BUFFER_BIT_ARB	include/GL/wglext.h	61;"	d
WGL_BACK_LEFT_ARB	include/GL/wglext.h	164;"	d
WGL_BACK_RIGHT_ARB	include/GL/wglext.h	165;"	d
WGL_BIND_TO_TEXTURE_DEPTH_NV	include/GL/wglext.h	289;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV	include/GL/wglext.h	290;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGBA_NV	include/GL/wglext.h	307;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGB_NV	include/GL/wglext.h	306;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RG_NV	include/GL/wglext.h	305;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV	include/GL/wglext.h	304;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV	include/GL/wglext.h	298;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV	include/GL/wglext.h	297;"	d
WGL_BIND_TO_TEXTURE_RGBA_ARB	include/GL/wglext.h	144;"	d
WGL_BIND_TO_TEXTURE_RGB_ARB	include/GL/wglext.h	143;"	d
WGL_BLUE_BITS_ARB	include/GL/wglext.h	104;"	d
WGL_BLUE_BITS_EXT	include/GL/wglext.h	208;"	d
WGL_BLUE_SHIFT_ARB	include/GL/wglext.h	105;"	d
WGL_BLUE_SHIFT_EXT	include/GL/wglext.h	209;"	d
WGL_COLOR_BITS_ARB	include/GL/wglext.h	99;"	d
WGL_COLOR_BITS_EXT	include/GL/wglext.h	203;"	d
WGL_CUBE_MAP_FACE_ARB	include/GL/wglext.h	155;"	d
WGL_DEPTH_BITS_ARB	include/GL/wglext.h	113;"	d
WGL_DEPTH_BITS_EXT	include/GL/wglext.h	217;"	d
WGL_DEPTH_BUFFER_BIT_ARB	include/GL/wglext.h	62;"	d
WGL_DEPTH_COMPONENT_NV	include/GL/wglext.h	293;"	d
WGL_DEPTH_FLOAT_EXT	include/GL/wglext.h	243;"	d
WGL_DEPTH_TEXTURE_FORMAT_NV	include/GL/wglext.h	291;"	d
WGL_DIGITAL_VIDEO_CURSOR_ALPHA_FRAMEBUFFER_I3D	include/GL/wglext.h	257;"	d
WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D	include/GL/wglext.h	258;"	d
WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D	include/GL/wglext.h	259;"	d
WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D	include/GL/wglext.h	260;"	d
WGL_DOUBLE_BUFFER_ARB	include/GL/wglext.h	96;"	d
WGL_DOUBLE_BUFFER_EXT	include/GL/wglext.h	200;"	d
WGL_DRAW_TO_BITMAP_ARB	include/GL/wglext.h	77;"	d
WGL_DRAW_TO_BITMAP_EXT	include/GL/wglext.h	185;"	d
WGL_DRAW_TO_PBUFFER_ARB	include/GL/wglext.h	132;"	d
WGL_DRAW_TO_PBUFFER_EXT	include/GL/wglext.h	231;"	d
WGL_DRAW_TO_WINDOW_ARB	include/GL/wglext.h	76;"	d
WGL_DRAW_TO_WINDOW_EXT	include/GL/wglext.h	184;"	d
WGL_EXT_depth_float	include/GL/wglext.h	471;"	d
WGL_EXT_display_color_table	include/GL/wglext.h	401;"	d
WGL_EXT_extensions_string	include/GL/wglext.h	415;"	d
WGL_EXT_make_current_read	include/GL/wglext.h	423;"	d
WGL_EXT_multisample	include/GL/wglext.h	489;"	d
WGL_EXT_pbuffer	include/GL/wglext.h	433;"	d
WGL_EXT_pixel_format	include/GL/wglext.h	449;"	d
WGL_EXT_swap_control	include/GL/wglext.h	461;"	d
WGL_FLOAT_COMPONENTS_NV	include/GL/wglext.h	303;"	d
WGL_FRONT_COLOR_BUFFER_BIT_ARB	include/GL/wglext.h	60;"	d
WGL_FRONT_LEFT_ARB	include/GL/wglext.h	162;"	d
WGL_FRONT_RIGHT_ARB	include/GL/wglext.h	163;"	d
WGL_FULL_ACCELERATION_ARB	include/GL/wglext.h	118;"	d
WGL_FULL_ACCELERATION_EXT	include/GL/wglext.h	222;"	d
WGL_GAMMA_EXCLUDE_DESKTOP_I3D	include/GL/wglext.h	265;"	d
WGL_GAMMA_TABLE_SIZE_I3D	include/GL/wglext.h	264;"	d
WGL_GENERIC_ACCELERATION_ARB	include/GL/wglext.h	117;"	d
WGL_GENERIC_ACCELERATION_EXT	include/GL/wglext.h	221;"	d
WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D	include/GL/wglext.h	274;"	d
WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D	include/GL/wglext.h	273;"	d
WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D	include/GL/wglext.h	277;"	d
WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D	include/GL/wglext.h	275;"	d
WGL_GENLOCK_SOURCE_EDGE_RISING_I3D	include/GL/wglext.h	276;"	d
WGL_GENLOCK_SOURCE_EXTENAL_FIELD_I3D	include/GL/wglext.h	271;"	d
WGL_GENLOCK_SOURCE_EXTENAL_SYNC_I3D	include/GL/wglext.h	270;"	d
WGL_GENLOCK_SOURCE_EXTENAL_TTL_I3D	include/GL/wglext.h	272;"	d
WGL_GENLOCK_SOURCE_MULTIVIEW_I3D	include/GL/wglext.h	269;"	d
WGL_GREEN_BITS_ARB	include/GL/wglext.h	102;"	d
WGL_GREEN_BITS_EXT	include/GL/wglext.h	206;"	d
WGL_GREEN_SHIFT_ARB	include/GL/wglext.h	103;"	d
WGL_GREEN_SHIFT_EXT	include/GL/wglext.h	207;"	d
WGL_I3D_digital_video_control	include/GL/wglext.h	511;"	d
WGL_I3D_gamma	include/GL/wglext.h	521;"	d
WGL_I3D_genlock	include/GL/wglext.h	535;"	d
WGL_I3D_image_buffer	include/GL/wglext.h	565;"	d
WGL_I3D_swap_frame_lock	include/GL/wglext.h	579;"	d
WGL_I3D_swap_frame_usage	include/GL/wglext.h	593;"	d
WGL_IMAGE_BUFFER_LOCK_I3D	include/GL/wglext.h	282;"	d
WGL_IMAGE_BUFFER_MIN_ACCESS_I3D	include/GL/wglext.h	281;"	d
WGL_MAX_PBUFFER_HEIGHT_ARB	include/GL/wglext.h	135;"	d
WGL_MAX_PBUFFER_HEIGHT_EXT	include/GL/wglext.h	234;"	d
WGL_MAX_PBUFFER_PIXELS_ARB	include/GL/wglext.h	133;"	d
WGL_MAX_PBUFFER_PIXELS_EXT	include/GL/wglext.h	232;"	d
WGL_MAX_PBUFFER_WIDTH_ARB	include/GL/wglext.h	134;"	d
WGL_MAX_PBUFFER_WIDTH_EXT	include/GL/wglext.h	233;"	d
WGL_MIPMAP_LEVEL_ARB	include/GL/wglext.h	154;"	d
WGL_MIPMAP_TEXTURE_ARB	include/GL/wglext.h	147;"	d
WGL_NEED_PALETTE_ARB	include/GL/wglext.h	79;"	d
WGL_NEED_PALETTE_EXT	include/GL/wglext.h	187;"	d
WGL_NEED_SYSTEM_PALETTE_ARB	include/GL/wglext.h	80;"	d
WGL_NEED_SYSTEM_PALETTE_EXT	include/GL/wglext.h	188;"	d
WGL_NO_ACCELERATION_ARB	include/GL/wglext.h	116;"	d
WGL_NO_ACCELERATION_EXT	include/GL/wglext.h	220;"	d
WGL_NO_TEXTURE_ARB	include/GL/wglext.h	150;"	d
WGL_NUMBER_OVERLAYS_ARB	include/GL/wglext.h	83;"	d
WGL_NUMBER_OVERLAYS_EXT	include/GL/wglext.h	191;"	d
WGL_NUMBER_PIXEL_FORMATS_ARB	include/GL/wglext.h	75;"	d
WGL_NUMBER_PIXEL_FORMATS_EXT	include/GL/wglext.h	183;"	d
WGL_NUMBER_UNDERLAYS_ARB	include/GL/wglext.h	84;"	d
WGL_NUMBER_UNDERLAYS_EXT	include/GL/wglext.h	192;"	d
WGL_NV_vertex_array_range	include/GL/wglext.h	475;"	d
WGL_OML_sync_control	include/GL/wglext.h	493;"	d
WGL_OPTIMAL_PBUFFER_HEIGHT_EXT	include/GL/wglext.h	236;"	d
WGL_OPTIMAL_PBUFFER_WIDTH_EXT	include/GL/wglext.h	235;"	d
WGL_PBUFFER_HEIGHT_ARB	include/GL/wglext.h	138;"	d
WGL_PBUFFER_HEIGHT_EXT	include/GL/wglext.h	239;"	d
WGL_PBUFFER_LARGEST_ARB	include/GL/wglext.h	136;"	d
WGL_PBUFFER_LARGEST_EXT	include/GL/wglext.h	237;"	d
WGL_PBUFFER_LOST_ARB	include/GL/wglext.h	139;"	d
WGL_PBUFFER_WIDTH_ARB	include/GL/wglext.h	137;"	d
WGL_PBUFFER_WIDTH_EXT	include/GL/wglext.h	238;"	d
WGL_PIXEL_TYPE_ARB	include/GL/wglext.h	98;"	d
WGL_PIXEL_TYPE_EXT	include/GL/wglext.h	202;"	d
WGL_RED_BITS_ARB	include/GL/wglext.h	100;"	d
WGL_RED_BITS_EXT	include/GL/wglext.h	204;"	d
WGL_RED_SHIFT_ARB	include/GL/wglext.h	101;"	d
WGL_RED_SHIFT_EXT	include/GL/wglext.h	205;"	d
WGL_SAMPLES_3DFX	include/GL/wglext.h	248;"	d
WGL_SAMPLES_ARB	include/GL/wglext.h	68;"	d
WGL_SAMPLES_EXT	include/GL/wglext.h	253;"	d
WGL_SAMPLE_BUFFERS_3DFX	include/GL/wglext.h	247;"	d
WGL_SAMPLE_BUFFERS_ARB	include/GL/wglext.h	67;"	d
WGL_SAMPLE_BUFFERS_EXT	include/GL/wglext.h	252;"	d
WGL_SHARE_ACCUM_ARB	include/GL/wglext.h	93;"	d
WGL_SHARE_ACCUM_EXT	include/GL/wglext.h	197;"	d
WGL_SHARE_DEPTH_ARB	include/GL/wglext.h	91;"	d
WGL_SHARE_DEPTH_EXT	include/GL/wglext.h	195;"	d
WGL_SHARE_STENCIL_ARB	include/GL/wglext.h	92;"	d
WGL_SHARE_STENCIL_EXT	include/GL/wglext.h	196;"	d
WGL_STENCIL_BITS_ARB	include/GL/wglext.h	114;"	d
WGL_STENCIL_BITS_EXT	include/GL/wglext.h	218;"	d
WGL_STENCIL_BUFFER_BIT_ARB	include/GL/wglext.h	63;"	d
WGL_STEREO_ARB	include/GL/wglext.h	97;"	d
WGL_STEREO_EXT	include/GL/wglext.h	201;"	d
WGL_SUPPORT_GDI_ARB	include/GL/wglext.h	94;"	d
WGL_SUPPORT_GDI_EXT	include/GL/wglext.h	198;"	d
WGL_SUPPORT_OPENGL_ARB	include/GL/wglext.h	95;"	d
WGL_SUPPORT_OPENGL_EXT	include/GL/wglext.h	199;"	d
WGL_SWAP_COPY_ARB	include/GL/wglext.h	120;"	d
WGL_SWAP_COPY_EXT	include/GL/wglext.h	224;"	d
WGL_SWAP_EXCHANGE_ARB	include/GL/wglext.h	119;"	d
WGL_SWAP_EXCHANGE_EXT	include/GL/wglext.h	223;"	d
WGL_SWAP_LAYER_BUFFERS_ARB	include/GL/wglext.h	81;"	d
WGL_SWAP_LAYER_BUFFERS_EXT	include/GL/wglext.h	189;"	d
WGL_SWAP_METHOD_ARB	include/GL/wglext.h	82;"	d
WGL_SWAP_METHOD_EXT	include/GL/wglext.h	190;"	d
WGL_SWAP_UNDEFINED_ARB	include/GL/wglext.h	121;"	d
WGL_SWAP_UNDEFINED_EXT	include/GL/wglext.h	225;"	d
WGL_TEXTURE_1D_ARB	include/GL/wglext.h	152;"	d
WGL_TEXTURE_2D_ARB	include/GL/wglext.h	153;"	d
WGL_TEXTURE_CUBE_MAP_ARB	include/GL/wglext.h	151;"	d
WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB	include/GL/wglext.h	157;"	d
WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB	include/GL/wglext.h	159;"	d
WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB	include/GL/wglext.h	161;"	d
WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB	include/GL/wglext.h	156;"	d
WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB	include/GL/wglext.h	158;"	d
WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB	include/GL/wglext.h	160;"	d
WGL_TEXTURE_DEPTH_COMPONENT_NV	include/GL/wglext.h	292;"	d
WGL_TEXTURE_FLOAT_RGBA_NV	include/GL/wglext.h	311;"	d
WGL_TEXTURE_FLOAT_RGB_NV	include/GL/wglext.h	310;"	d
WGL_TEXTURE_FLOAT_RG_NV	include/GL/wglext.h	309;"	d
WGL_TEXTURE_FLOAT_R_NV	include/GL/wglext.h	308;"	d
WGL_TEXTURE_FORMAT_ARB	include/GL/wglext.h	145;"	d
WGL_TEXTURE_RECTANGLE_NV	include/GL/wglext.h	299;"	d
WGL_TEXTURE_RGBA_ARB	include/GL/wglext.h	149;"	d
WGL_TEXTURE_RGB_ARB	include/GL/wglext.h	148;"	d
WGL_TEXTURE_TARGET_ARB	include/GL/wglext.h	146;"	d
WGL_TRANSPARENT_ALPHA_VALUE_ARB	include/GL/wglext.h	89;"	d
WGL_TRANSPARENT_ARB	include/GL/wglext.h	85;"	d
WGL_TRANSPARENT_BLUE_VALUE_ARB	include/GL/wglext.h	88;"	d
WGL_TRANSPARENT_EXT	include/GL/wglext.h	193;"	d
WGL_TRANSPARENT_GREEN_VALUE_ARB	include/GL/wglext.h	87;"	d
WGL_TRANSPARENT_INDEX_VALUE_ARB	include/GL/wglext.h	90;"	d
WGL_TRANSPARENT_RED_VALUE_ARB	include/GL/wglext.h	86;"	d
WGL_TRANSPARENT_VALUE_EXT	include/GL/wglext.h	194;"	d
WGL_TYPE_COLORINDEX_ARB	include/GL/wglext.h	123;"	d
WGL_TYPE_COLORINDEX_EXT	include/GL/wglext.h	227;"	d
WGL_TYPE_RGBA_ARB	include/GL/wglext.h	122;"	d
WGL_TYPE_RGBA_EXT	include/GL/wglext.h	226;"	d
WGL_WGLEXT_VERSION	include/GL/wglext.h	57;"	d
WIN32	include/zconf.h	73;"	d
WIN32_LEAN_AND_MEAN	include/GL/glext.h	38;"	d
WIN32_LEAN_AND_MEAN	include/GL/wglext.h	38;"	d
WINDOWS	include/zconf.h	69;"	d
WINGDIAPI	include/GL/gl.h	28;"	d
WINGDIAPI	include/GL/glut.h	39;"	d
WINGDIAPI	include/GL/glut.h	40;"	d
WINGDIAPI	include/GL/glut.h	45;"	d
WINGDIAPI	include/GL/glut.h	703;"	d
WaitForMscOML	include/GL/glprocs.h	/^  BOOL (WINAPI *WaitForMscOML) (HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder, INT64 *ust, INT64 *msc, INT64 *sbc);$/;"	m	struct:__anon1
WaitForSbcOML	include/GL/glprocs.h	/^  BOOL (WINAPI *WaitForSbcOML) (HDC hdc, INT64 target_sbc, INT64 *ust, INT64 *msc, INT64 *sbc);$/;"	m	struct:__anon1
WeightPointerARB	include/GL/glprocs.h	/^  void (APIENTRY *WeightPointerARB) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	m	struct:__anon1
WeightbvARB	include/GL/glprocs.h	/^  void (APIENTRY *WeightbvARB) (GLint size, const GLbyte *weights);$/;"	m	struct:__anon1
WeightdvARB	include/GL/glprocs.h	/^  void (APIENTRY *WeightdvARB) (GLint size, const GLdouble *weights);$/;"	m	struct:__anon1
WeightfvARB	include/GL/glprocs.h	/^  void (APIENTRY *WeightfvARB) (GLint size, const GLfloat *weights);$/;"	m	struct:__anon1
WeightivARB	include/GL/glprocs.h	/^  void (APIENTRY *WeightivARB) (GLint size, const GLint *weights);$/;"	m	struct:__anon1
WeightsvARB	include/GL/glprocs.h	/^  void (APIENTRY *WeightsvARB) (GLint size, const GLshort *weights);$/;"	m	struct:__anon1
WeightubvARB	include/GL/glprocs.h	/^  void (APIENTRY *WeightubvARB) (GLint size, const GLubyte *weights);$/;"	m	struct:__anon1
WeightuivARB	include/GL/glprocs.h	/^  void (APIENTRY *WeightuivARB) (GLint size, const GLuint *weights);$/;"	m	struct:__anon1
WeightusvARB	include/GL/glprocs.h	/^  void (APIENTRY *WeightusvARB) (GLint size, const GLushort *weights);$/;"	m	struct:__anon1
WindowPos2d	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos2d) (GLdouble x, GLdouble y);$/;"	m	struct:__anon1
WindowPos2dARB	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos2dARB) (GLdouble x, GLdouble y);$/;"	m	struct:__anon1
WindowPos2dMESA	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos2dMESA) (GLdouble x, GLdouble y);$/;"	m	struct:__anon1
WindowPos2dv	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos2dv) (const GLdouble *v);$/;"	m	struct:__anon1
WindowPos2dvARB	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos2dvARB) (const GLdouble *v);$/;"	m	struct:__anon1
WindowPos2dvMESA	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos2dvMESA) (const GLdouble *v);$/;"	m	struct:__anon1
WindowPos2f	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos2f) (GLfloat x, GLfloat y);$/;"	m	struct:__anon1
WindowPos2fARB	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos2fARB) (GLfloat x, GLfloat y);$/;"	m	struct:__anon1
WindowPos2fMESA	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos2fMESA) (GLfloat x, GLfloat y);$/;"	m	struct:__anon1
WindowPos2fv	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos2fv) (const GLfloat *v);$/;"	m	struct:__anon1
WindowPos2fvARB	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos2fvARB) (const GLfloat *v);$/;"	m	struct:__anon1
WindowPos2fvMESA	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos2fvMESA) (const GLfloat *v);$/;"	m	struct:__anon1
WindowPos2i	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos2i) (GLint x, GLint y);$/;"	m	struct:__anon1
WindowPos2iARB	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos2iARB) (GLint x, GLint y);$/;"	m	struct:__anon1
WindowPos2iMESA	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos2iMESA) (GLint x, GLint y);$/;"	m	struct:__anon1
WindowPos2iv	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos2iv) (const GLint *v);$/;"	m	struct:__anon1
WindowPos2ivARB	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos2ivARB) (const GLint *v);$/;"	m	struct:__anon1
WindowPos2ivMESA	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos2ivMESA) (const GLint *v);$/;"	m	struct:__anon1
WindowPos2s	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos2s) (GLshort x, GLshort y);$/;"	m	struct:__anon1
WindowPos2sARB	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos2sARB) (GLshort x, GLshort y);$/;"	m	struct:__anon1
WindowPos2sMESA	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos2sMESA) (GLshort x, GLshort y);$/;"	m	struct:__anon1
WindowPos2sv	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos2sv) (const GLshort *v);$/;"	m	struct:__anon1
WindowPos2svARB	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos2svARB) (const GLshort *v);$/;"	m	struct:__anon1
WindowPos2svMESA	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos2svMESA) (const GLshort *v);$/;"	m	struct:__anon1
WindowPos3d	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos3d) (GLdouble x, GLdouble y, GLdouble z);$/;"	m	struct:__anon1
WindowPos3dARB	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos3dARB) (GLdouble x, GLdouble y, GLdouble z);$/;"	m	struct:__anon1
WindowPos3dMESA	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos3dMESA) (GLdouble x, GLdouble y, GLdouble z);$/;"	m	struct:__anon1
WindowPos3dv	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos3dv) (const GLdouble *v);$/;"	m	struct:__anon1
WindowPos3dvARB	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos3dvARB) (const GLdouble *v);$/;"	m	struct:__anon1
WindowPos3dvMESA	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos3dvMESA) (const GLdouble *v);$/;"	m	struct:__anon1
WindowPos3f	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos3f) (GLfloat x, GLfloat y, GLfloat z);$/;"	m	struct:__anon1
WindowPos3fARB	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos3fARB) (GLfloat x, GLfloat y, GLfloat z);$/;"	m	struct:__anon1
WindowPos3fMESA	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos3fMESA) (GLfloat x, GLfloat y, GLfloat z);$/;"	m	struct:__anon1
WindowPos3fv	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos3fv) (const GLfloat *v);$/;"	m	struct:__anon1
WindowPos3fvARB	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos3fvARB) (const GLfloat *v);$/;"	m	struct:__anon1
WindowPos3fvMESA	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos3fvMESA) (const GLfloat *v);$/;"	m	struct:__anon1
WindowPos3i	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos3i) (GLint x, GLint y, GLint z);$/;"	m	struct:__anon1
WindowPos3iARB	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos3iARB) (GLint x, GLint y, GLint z);$/;"	m	struct:__anon1
WindowPos3iMESA	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos3iMESA) (GLint x, GLint y, GLint z);$/;"	m	struct:__anon1
WindowPos3iv	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos3iv) (const GLint *v);$/;"	m	struct:__anon1
WindowPos3ivARB	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos3ivARB) (const GLint *v);$/;"	m	struct:__anon1
WindowPos3ivMESA	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos3ivMESA) (const GLint *v);$/;"	m	struct:__anon1
WindowPos3s	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos3s) (GLshort x, GLshort y, GLshort z);$/;"	m	struct:__anon1
WindowPos3sARB	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos3sARB) (GLshort x, GLshort y, GLshort z);$/;"	m	struct:__anon1
WindowPos3sMESA	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos3sMESA) (GLshort x, GLshort y, GLshort z);$/;"	m	struct:__anon1
WindowPos3sv	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos3sv) (const GLshort *v);$/;"	m	struct:__anon1
WindowPos3svARB	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos3svARB) (const GLshort *v);$/;"	m	struct:__anon1
WindowPos3svMESA	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos3svMESA) (const GLshort *v);$/;"	m	struct:__anon1
WindowPos4dMESA	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos4dMESA) (GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	m	struct:__anon1
WindowPos4dvMESA	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos4dvMESA) (const GLdouble *v);$/;"	m	struct:__anon1
WindowPos4fMESA	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos4fMESA) (GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	m	struct:__anon1
WindowPos4fvMESA	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos4fvMESA) (const GLfloat *v);$/;"	m	struct:__anon1
WindowPos4iMESA	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos4iMESA) (GLint x, GLint y, GLint z, GLint w);$/;"	m	struct:__anon1
WindowPos4ivMESA	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos4ivMESA) (const GLint *v);$/;"	m	struct:__anon1
WindowPos4sMESA	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos4sMESA) (GLshort x, GLshort y, GLshort z, GLshort w);$/;"	m	struct:__anon1
WindowPos4svMESA	include/GL/glprocs.h	/^  void (APIENTRY *WindowPos4svMESA) (const GLshort *v);$/;"	m	struct:__anon1
WriteMaskEXT	include/GL/glprocs.h	/^  void (APIENTRY *WriteMaskEXT) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);$/;"	m	struct:__anon1
ZCONF_H	include/zconf.h	9;"	d
ZEXPORT	include/zconf.h	225;"	d
ZEXPORT	include/zconf.h	237;"	d
ZEXPORT	include/zconf.h	240;"	d
ZEXPORT	include/zconf.h	250;"	d
ZEXPORTVA	include/zconf.h	227;"	d
ZEXPORTVA	include/zconf.h	229;"	d
ZEXPORTVA	include/zconf.h	238;"	d
ZEXPORTVA	include/zconf.h	241;"	d
ZEXPORTVA	include/zconf.h	253;"	d
ZEXTERN	include/zconf.h	208;"	d
ZEXTERN	include/zconf.h	210;"	d
ZEXTERN	include/zconf.h	247;"	d
ZLIB_H	include/zlib.h	32;"	d
ZLIB_VERNUM	include/zlib.h	41;"	d
ZLIB_VERSION	include/zlib.h	40;"	d
Z_ASCII	include/zlib.h	198;"	d
Z_BEST_COMPRESSION	include/zlib.h	185;"	d
Z_BEST_SPEED	include/zlib.h	184;"	d
Z_BINARY	include/zlib.h	196;"	d
Z_BLOCK	include/zlib.h	167;"	d
Z_BUF_ERROR	include/zlib.h	177;"	d
Z_DATA_ERROR	include/zlib.h	175;"	d
Z_DEFAULT_COMPRESSION	include/zlib.h	186;"	d
Z_DEFAULT_STRATEGY	include/zlib.h	193;"	d
Z_DEFLATED	include/zlib.h	202;"	d
Z_ERRNO	include/zlib.h	173;"	d
Z_FILTERED	include/zlib.h	189;"	d
Z_FINISH	include/zlib.h	166;"	d
Z_FIXED	include/zlib.h	192;"	d
Z_FULL_FLUSH	include/zlib.h	165;"	d
Z_HUFFMAN_ONLY	include/zlib.h	190;"	d
Z_MEM_ERROR	include/zlib.h	176;"	d
Z_NEED_DICT	include/zlib.h	172;"	d
Z_NO_COMPRESSION	include/zlib.h	183;"	d
Z_NO_FLUSH	include/zlib.h	162;"	d
Z_NULL	include/zlib.h	205;"	d
Z_OK	include/zlib.h	170;"	d
Z_PARTIAL_FLUSH	include/zlib.h	163;"	d
Z_RLE	include/zlib.h	191;"	d
Z_STREAM_END	include/zlib.h	171;"	d
Z_STREAM_ERROR	include/zlib.h	174;"	d
Z_SYNC_FLUSH	include/zlib.h	164;"	d
Z_TEXT	include/zlib.h	197;"	d
Z_UNKNOWN	include/zlib.h	199;"	d
Z_VERSION_ERROR	include/zlib.h	178;"	d
_ASSERT	include/GL/glprocs.c	51;"	d	file:
_BSD_SOURCE	include/pngconf.h	320;"	d
_BSD_SOURCE	include/pngconf.h	337;"	d
_CRTIMP	include/GL/glut.h	109;"	d
_CRTIMP	include/GL/glut.h	113;"	d
_CRTIMP	include/GL/glut.h	115;"	d
_CRTIMP	include/GL/glut.h	713;"	d
_GET_TLS_PROCTABLE	include/GL/glprocs.h	/^static _inline _GLextensionProcs *_GET_TLS_PROCTABLE(void)$/;"	f
_GLPROCS_H_	include/GL/glprocs.h	2;"	d
_GLextensionProcs	include/GL/glprocs.h	/^} _GLextensionProcs;$/;"	t	typeref:struct:__anon1
_InitExtensionProcs	include/GL/glprocs.h	/^static _inline void _InitExtensionProcs(_GLextensionProcs *appProcs)$/;"	f
_WCHAR_T_DEFINED	include/GL/glut.h	51;"	d
__cdecl	include/GL/glut.h	103;"	d
__cdecl	include/GL/glut.h	708;"	d
__gl_h_	include/GL/gl.h	2;"	d
__glext_h_	include/GL/glext.h	2;"	d
__glut_h__	include/GL/glut.h	2;"	d
__wglext_h_	include/GL/wglext.h	2;"	d
_endsWith	imageio.cpp	/^bool _endsWith(char *s, char *postfix) {$/;"	f
_endsWith	particles/imageio.cpp	/^bool _endsWith(char *s, char *postfix) {$/;"	f
_extensionProcs	include/GL/glprocs.c	/^_GLextensionProcs _extensionProcs = {$/;"	v
_inline	include/GL/glprocs.h	52;"	d
_inline	include/GL/glprocs.h	54;"	d
_loadImageRGBApng	imageio.cpp	/^unsigned char *_loadImageRGBApng(char *fileName, int *width, int *height) {$/;"	f
_loadImageRGBApng	particles/imageio.cpp	/^unsigned char *_loadImageRGBApng(char *fileName, int *width, int *height) {$/;"	f
_loadImgError	imageio.cpp	/^unsigned char *_loadImgError(int *width, int *height) {$/;"	f
_loadImgError	particles/imageio.cpp	/^unsigned char *_loadImgError(int *width, int *height) {$/;"	f
_saveImageRGBApng	imageio.cpp	/^bool _saveImageRGBApng(char *fileName, unsigned char *buffer, int width, int height) {$/;"	f
_saveImageRGBApng	particles/imageio.cpp	/^bool _saveImageRGBApng(char *fileName, unsigned char *buffer, int width, int height) {$/;"	f
act	Rectangle.cpp	/^void Rectangle::act(VectorField *newField, VectorField *oldField) {$/;"	f	class:Rectangle
act	particles/AngularForce.cpp	/^void AngularForce::act()$/;"	f	class:AngularForce
act	particles/Gravity.cpp	/^void Drag::act()$/;"	f	class:Drag
act	particles/Gravity.cpp	/^void Gravity::act()$/;"	f	class:Gravity
act	particles/MouseForce.cpp	/^void MouseForce::act()$/;"	f	class:MouseForce
act	particles/SpringForce.cpp	/^void SpringForce::act(){$/;"	f	class:SpringForce
adjoint	include/gfx/mat2.h	/^inline Mat2 adjoint(const Mat2 &m)$/;"	f	namespace:gfx
adler	include/zlib.h	/^    uLong   adler;      \/* adler32 value of the uncompressed data *\/$/;"	m	struct:z_stream_s
adler32	include/zconf.h	41;"	d
advect	ScalarField.cpp	/^void advect(int b, ScalarField *A, ScalarField *B, VectorField *C, VectorField *D, int lrC, int lrD,$/;"	f
advect	VectorField.cpp	/^void advect(int b, VectorField *A, VectorField *B, VectorField *C, VectorField *D, int lrA, int lrB, int lrC, int lrD,$/;"	f
alloc_func	include/zconf.h	46;"	d
alloc_func	include/zlib.h	/^typedef voidpf (*alloc_func) OF((voidpf opaque, uInt items, uInt size));$/;"	t
allocate_data	StableFluids.cpp	/^static int allocate_data(void) {$/;"	f	file:
alpha	include/png.h	/^   png_byte alpha; \/* for alpha channel files *\/$/;"	m	struct:png_color_8_struct
alpha	include/png.h	/^   png_uint_16 alpha;$/;"	m	struct:png_sPLT_entry_struct
angle	Rectangle.h	/^    float angle;$/;"	m	class:Rectangle
asm_flags	include/png.h	/^   png_uint_32  asm_flags;$/;"	m	struct:png_struct_def
avail_in	include/zlib.h	/^    uInt     avail_in;  \/* number of bytes available at next_in *\/$/;"	m	struct:z_stream_s
avail_out	include/zlib.h	/^    uInt     avail_out; \/* remaining free space at next_out *\/$/;"	m	struct:z_stream_s
avg_row	include/png.h	/^   png_bytep avg_row;         \/* buffer to save "avg" row when filtering *\/$/;"	m	struct:png_struct_def
background	include/png.h	/^   png_color_16 background;   \/* background color in screen gamma space *\/$/;"	m	struct:png_struct_def
background	include/png.h	/^   png_color_16 background;$/;"	m	struct:png_info_struct
background_1	include/png.h	/^   png_color_16 background_1; \/* background normalized to gamma 1.0 *\/$/;"	m	struct:png_struct_def
background_gamma	include/png.h	/^   float background_gamma;$/;"	m	struct:png_struct_def
background_gamma_type	include/png.h	/^   png_byte background_gamma_type;$/;"	m	struct:png_struct_def
big_row_buf	include/png.h	/^   png_bytep big_row_buf;         \/* buffer to save current (unfiltered) row *\/$/;"	m	struct:png_struct_def
bit_depth	include/png.h	/^   png_byte bit_depth;        \/* bit depth of file *\/$/;"	m	struct:png_struct_def
bit_depth	include/png.h	/^   png_byte bit_depth;      \/* 1, 2, 4, 8, or 16 bits\/channel (from IHDR) *\/$/;"	m	struct:png_info_struct
bit_depth	include/png.h	/^   png_byte bit_depth; \/* bit depth of row *\/$/;"	m	struct:png_row_info_struct
blue	include/png.h	/^   png_byte blue;$/;"	m	struct:png_color_8_struct
blue	include/png.h	/^   png_byte blue;$/;"	m	struct:png_color_struct
blue	include/png.h	/^   png_uint_16 blue;$/;"	m	struct:png_color_16_struct
blue	include/png.h	/^   png_uint_16 blue;$/;"	m	struct:png_sPLT_entry_struct
bodies	StableFluids.cpp	/^static std::vector< RigidBody * > bodies;$/;"	v	file:
bool	include/gfx/gfx.h	/^typedef int bool;$/;"	t
buffer_size	include/png.h	/^   png_size_t buffer_size;           \/* total amount of available input data *\/$/;"	m	struct:png_struct_def
calcC	particles/CircularWireConstraint.cpp	/^float CircularWireConstraint::calcC() {$/;"	f	class:CircularWireConstraint
calcC	particles/RodConstraint.cpp	/^float RodConstraint::calcC() {$/;"	f	class:RodConstraint
calcCD	particles/CircularWireConstraint.cpp	/^float CircularWireConstraint::calcCD() {$/;"	f	class:CircularWireConstraint
calcCD	particles/RodConstraint.cpp	/^float RodConstraint::calcCD() {$/;"	f	class:RodConstraint
center	Rectangle.h	/^    Vec2f center;$/;"	m	class:Rectangle
channels	include/png.h	/^   png_byte channels;         \/* number of channels in file *\/$/;"	m	struct:png_struct_def
channels	include/png.h	/^   png_byte channels;       \/* number of data channels per pixel (1, 2, 3, 4) *\/$/;"	m	struct:png_info_struct
channels	include/png.h	/^   png_byte channels; \/* number of channels (1, 2, 3, or 4) *\/$/;"	m	struct:png_row_info_struct
charf	include/zconf.h	/^typedef char  FAR charf;$/;"	t
charf	include/zconf.h	54;"	d
chunk_list	include/png.h	/^   png_bytep chunk_list;$/;"	m	struct:png_struct_def
chunk_name	include/png.h	/^   png_byte chunk_name[5];    \/* null-terminated name of current chunk *\/$/;"	m	struct:png_struct_def
chunkdata	include/png.h	/^  png_charp chunkdata;  \/* buffer for reading chunk data *\/$/;"	m	struct:png_struct_def
clamp_to_bbox	include/gfx/geom3d.h	/^Vec clamp_to_bbox(Vec p, const Vec& min, const Vec& max)$/;"	f	namespace:gfx
clear_data	StableFluids.cpp	/^static void clear_data(void) {$/;"	f	file:
clear_data	particles/TinkerToy.cpp	/^static void clear_data(void) {$/;"	f	file:
col	include/gfx/mat2.h	/^    inline Vec2 col(int i) const {return Vec2(row[0][i],row[1][i]);}$/;"	f	class:gfx::Mat2
col	include/gfx/mat3.h	/^    inline Vec3 col(int i) const {return Vec3(row[0][i],row[1][i],row[2][i]);}$/;"	f	class:gfx::Mat3
col	include/gfx/mat4.h	/^    inline Vec4 col(int i) const$/;"	f	class:gfx::Mat4
col	include/gfx/symmat2.h	/^inline Vec2 SymMat2::col(int j) const$/;"	f	class:gfx::SymMat2
col	include/gfx/symmat3.h	/^inline Vec3 SymMat3::col(int j) const$/;"	f	class:gfx::SymMat3
col	include/gfx/symmat4.h	/^inline Vec4 SymMat4::col(int j) const$/;"	f	class:gfx::SymMat4
color_type	include/png.h	/^   png_byte color_type;       \/* color type of file *\/$/;"	m	struct:png_struct_def
color_type	include/png.h	/^   png_byte color_type;     \/* see PNG_COLOR_TYPE_ below (from IHDR) *\/$/;"	m	struct:png_info_struct
color_type	include/png.h	/^   png_byte color_type; \/* color type of row *\/$/;"	m	struct:png_row_info_struct
comm_max	include/zlib.h	/^    uInt    comm_max;   \/* space at comment (only when reading header) *\/$/;"	m	struct:gz_header_s
comment	include/zlib.h	/^    Bytef   *comment;   \/* pointer to zero-terminated comment or Z_NULL *\/$/;"	m	struct:gz_header_s
compress	include/zconf.h	37;"	d
compress2	include/zconf.h	38;"	d
compressBound	include/zconf.h	39;"	d
compression	include/png.h	/^   int  compression;       \/* compression value:$/;"	m	struct:png_text_struct
compression	include/png.h	/^   png_byte compression;      \/* file compression type (always 0) *\/$/;"	m	struct:png_struct_def
compression_type	include/png.h	/^   png_byte compression_type; \/* must be PNG_COMPRESSION_TYPE_BASE (IHDR) *\/$/;"	m	struct:png_info_struct
compression_type	include/png.h	/^   png_byte compression_type;$/;"	m	struct:png_struct_def
compute_bbox	include/gfx/geom3d.h	/^void compute_bbox(Vec& min, Vec& max, const List& items)$/;"	f	namespace:gfx
conjugate	include/gfx/quat.h	/^inline Quat conjugate(const Quat& q) { return Quat(-q.vector(), q.scalar()); }$/;"	f	namespace:gfx
const	include/zconf.h	124;"	d
crc	include/png.h	/^   png_uint_32 crc;           \/* current chunk CRC value *\/$/;"	m	struct:png_struct_def
crc32	include/zconf.h	42;"	d
create_grid	StableFluids.cpp	/^static void create_grid(int N)$/;"	f	file:
create_grid	particles/TinkerToy.cpp	/^static void create_grid(int size, bool diagonals) {$/;"	f	file:
cross	include/gfx/vec3.h	/^template<class T> inline TVec3<T> cross(const TVec3<T>& u, const TVec3<T>& v)$/;"	f	namespace:gfx
cross	include/gfx/vec4.h	/^inline TVec4<T> cross(const TVec4<T>& a, const TVec4<T>& b, const TVec4<T>& c)$/;"	f	namespace:gfx
cur_palette	include/png.h	/^   int cur_palette;                  \/* current push library palette index *\/$/;"	m	struct:png_struct_def
current_buffer	include/png.h	/^   png_bytep current_buffer;         \/* buffer for recently used data *\/$/;"	m	struct:png_struct_def
current_buffer_ptr	include/png.h	/^   png_bytep current_buffer_ptr;     \/* current location in current_buffer *\/$/;"	m	struct:png_struct_def
current_buffer_size	include/png.h	/^   png_size_t current_buffer_size;   \/* amount of data now in current_buffer *\/$/;"	m	struct:png_struct_def
current_text	include/png.h	/^     png_charp current_text;         \/* current text chunk buffer *\/$/;"	m	struct:png_struct_def
current_text_left	include/png.h	/^     png_size_t current_text_left;   \/* how much text left to read in input *\/$/;"	m	struct:png_struct_def
current_text_ptr	include/png.h	/^     png_charp current_text_ptr;     \/* current location in current_text *\/$/;"	m	struct:png_struct_def
current_text_size	include/png.h	/^     png_size_t current_text_size;   \/* current size of text input data *\/$/;"	m	struct:png_struct_def
d	particles/TinkerToy.cpp	/^static float dt, d;$/;"	v	file:
data	include/png.h	/^    png_byte *data;$/;"	m	struct:png_unknown_chunk_t
data_type	include/zlib.h	/^    int     data_type;  \/* best guess about the data type: binary or text *\/$/;"	m	struct:z_stream_s
day	include/png.h	/^   png_byte day;     \/* day of month, 1 - 31 *\/$/;"	m	struct:png_time_struct
deflate	include/zconf.h	17;"	d
deflateBound	include/zconf.h	27;"	d
deflateCopy	include/zconf.h	24;"	d
deflateEnd	include/zconf.h	18;"	d
deflateInit	include/zlib.h	1331;"	d
deflateInit2	include/zlib.h	1335;"	d
deflateInit2_	include/zconf.h	22;"	d
deflateInit_	include/zconf.h	16;"	d
deflateParams	include/zconf.h	26;"	d
deflatePrime	include/zconf.h	28;"	d
deflateReset	include/zconf.h	25;"	d
deflateSetDictionary	include/zconf.h	23;"	d
delete_this_dummy_rod	particles/TinkerToy.cpp	/^static RodConstraint *delete_this_dummy_rod = NULL;$/;"	v	file:
delete_this_dummy_wire	particles/TinkerToy.cpp	/^static CircularWireConstraint *delete_this_dummy_wire = NULL;$/;"	v	file:
depth	include/png.h	/^   png_byte depth;           \/* depth of palette samples *\/$/;"	m	struct:png_sPLT_struct
det	include/gfx/mat2.h	/^inline double det(const Mat2 &m)$/;"	f	namespace:gfx
det	include/gfx/mat3.h	/^inline double det(const Mat3& m) { return m[0] * (m[1] ^ m[2]); }$/;"	f	namespace:gfx
det	include/gfx/mat4.h	/^inline double det(const Mat4& m) { return m[0] * cross(m[1], m[2], m[3]); }$/;"	f	namespace:gfx
det	include/gfx/symmat2.h	/^inline double det(const SymMat2& m) { return m(0,0)*m(1,1) - 2*m(0,1); }$/;"	f	namespace:gfx
det	include/gfx/symmat3.h	/^inline double det(const SymMat3& m) { return m.row(0) * (m.row(1)^m.row(2)); }$/;"	f	namespace:gfx
diff	StableFluids.cpp	/^static float dt, diff, visc;$/;"	v	file:
dim	include/gfx/mat2.h	/^    static int dim() { return 2; }$/;"	f	class:gfx::Mat2
dim	include/gfx/mat3.h	/^    static int dim() { return 3; }$/;"	f	class:gfx::Mat3
dim	include/gfx/mat4.h	/^    static int dim() { return 4; }$/;"	f	class:gfx::Mat4
dim	include/gfx/symmat2.h	/^    static int dim() { return 2; }$/;"	f	class:gfx::SymMat2
dim	include/gfx/symmat3.h	/^    static int dim() { return 3; }$/;"	f	class:gfx::SymMat3
dim	include/gfx/symmat4.h	/^    static int dim() { return 4; }$/;"	f	class:gfx::SymMat4
dim	include/gfx/vec2.h	/^    static int dim() { return 2; }$/;"	f	class:gfx::TVec2
dim	include/gfx/vec3.h	/^    static int dim() { return 3; }$/;"	f	class:gfx::TVec3
dim	include/gfx/vec4.h	/^    static int dim() { return 4; }$/;"	f	class:gfx::TVec4
disable	particles/MouseForce.cpp	/^void MouseForce::disable()$/;"	f	class:MouseForce
display_func	StableFluids.cpp	/^static void display_func(void) {$/;"	f	file:
display_func	particles/TinkerToy.cpp	/^static void display_func(void) {$/;"	f	file:
dither_index	include/png.h	/^   png_bytep dither_index;           \/* index translation for palette files *\/$/;"	m	struct:png_struct_def
dither_sort	include/png.h	/^   png_bytep dither_sort;            \/* working sort array *\/$/;"	m	struct:png_struct_def
do_filter	include/png.h	/^   png_byte do_filter;        \/* row filter flags (see PNG_FILTER_ below ) *\/$/;"	m	struct:png_struct_def
done	include/zlib.h	/^    int     done;       \/* true when done reading gzip header (not used$/;"	m	struct:gz_header_s
draw	Rectangle.cpp	/^void Rectangle::draw() {$/;"	f	class:Rectangle
draw	particles/AngularForce.cpp	/^void AngularForce::draw()$/;"	f	class:AngularForce
draw	particles/CircularWireConstraint.cpp	/^void CircularWireConstraint::draw() {$/;"	f	class:CircularWireConstraint
draw	particles/Gravity.cpp	/^void Drag::draw()$/;"	f	class:Drag
draw	particles/Gravity.cpp	/^void Gravity::draw()$/;"	f	class:Gravity
draw	particles/MouseForce.cpp	/^void MouseForce::draw()$/;"	f	class:MouseForce
draw	particles/Particle.cpp	/^void Particle::draw()$/;"	f	class:Particle
draw	particles/RodConstraint.cpp	/^void RodConstraint::draw() {$/;"	f	class:RodConstraint
draw	particles/SpringForce.cpp	/^void SpringForce::draw()$/;"	f	class:SpringForce
drawLine	StableFluids.cpp	/^bool drawLine = true;$/;"	v
draw_circle	particles/CircularWireConstraint.cpp	/^static void draw_circle(const Vec2f &vect, float radius) {$/;"	f	file:
draw_constraints	StableFluids.cpp	/^static void draw_constraints(void) {$/;"	f	file:
draw_constraints	particles/TinkerToy.cpp	/^static void draw_constraints(void) {$/;"	f	file:
draw_density	StableFluids.cpp	/^static void draw_density(void) {$/;"	f	file:
draw_forces	StableFluids.cpp	/^static void draw_forces(void) {$/;"	f	file:
draw_forces	particles/TinkerToy.cpp	/^static void draw_forces(void) {$/;"	f	file:
draw_particles	StableFluids.cpp	/^static void draw_particles(void) {$/;"	f	file:
draw_particles	particles/TinkerToy.cpp	/^static void draw_particles(void) {$/;"	f	file:
draw_velocity	StableFluids.cpp	/^static void draw_velocity(void) {$/;"	f	file:
dsim	particles/TinkerToy.cpp	/^static int dsim;$/;"	v	file:
dt	StableFluids.cpp	/^static float dt, diff, visc;$/;"	v	file:
dt	particles/TinkerToy.cpp	/^static float dt, d;$/;"	v	file:
dummy	include/zlib.h	/^    struct internal_state {int dummy;}; \/* hack for buggy compilers *\/$/;"	m	struct:internal_state
dump_frames	StableFluids.cpp	/^static int dump_frames;$/;"	v	file:
dump_frames	particles/TinkerToy.cpp	/^static int dump_frames;$/;"	v	file:
dvel	StableFluids.cpp	/^static int dvel;$/;"	v	file:
edge	Rectangle.h	/^    std::vector<int> edge;$/;"	m	class:Rectangle
elt	include/gfx/symmat2.h	/^    double elt[3];$/;"	m	class:gfx::SymMat2
elt	include/gfx/symmat3.h	/^    double elt[6];$/;"	m	class:gfx::SymMat3
elt	include/gfx/symmat4.h	/^    double elt[10];$/;"	m	class:gfx::SymMat4
elt	include/gfx/vec2.h	/^    T elt[2];$/;"	m	class:gfx::TVec2
elt	include/gfx/vec3.h	/^    T elt[3];$/;"	m	class:gfx::TVec3
elt	include/gfx/vec4.h	/^    T elt[4];$/;"	m	class:gfx::TVec4
emptyBody	Rectangle.cpp	/^void Rectangle::emptyBody(VectorField *newField, VectorField *oldField) {$/;"	f	class:Rectangle
enable	particles/MouseForce.cpp	/^void MouseForce::enable(float x, float y)$/;"	f	class:MouseForce
enabled	particles/MouseForce.h	/^	bool enabled;$/;"	m	class:MouseForce
end_fn	include/png.h	/^   png_progressive_end_ptr end_fn;   \/* called after image is complete *\/$/;"	m	struct:png_struct_def
entries	include/png.h	/^   png_sPLT_entryp entries;  \/* palette entries *\/$/;"	m	struct:png_sPLT_struct
error_fn	include/png.h	/^   png_error_ptr error_fn;    \/* function for printing errors and aborting *\/$/;"	m	struct:png_struct_def
error_ptr	include/png.h	/^   png_voidp error_ptr;       \/* user supplied struct for error functions *\/$/;"	m	struct:png_struct_def
extra	include/zlib.h	/^    Bytef   *extra;     \/* pointer to extra field or Z_NULL if none *\/$/;"	m	struct:gz_header_s
extra_len	include/zlib.h	/^    uInt    extra_len;  \/* extra field length (valid if extra != Z_NULL) *\/$/;"	m	struct:gz_header_s
extra_max	include/zlib.h	/^    uInt    extra_max;  \/* space at extra (only when reading header) *\/$/;"	m	struct:gz_header_s
fConstraint	StableFluids.cpp	/^static std::vector< Constraint * > fConstraint;$/;"	v	file:
fConstraint	particles/TinkerToy.cpp	/^static std::vector< Constraint * > fConstraint;$/;"	v	file:
fVector	StableFluids.cpp	/^static std::vector< Force * > fVector;$/;"	v	file:
fVector	particles/TinkerToy.cpp	/^static std::vector< Force * > fVector;$/;"	v	file:
false	include/gfx/gfx.h	/^const bool false = 0;$/;"	v
filler	include/png.h	/^   png_byte filler;           \/* filler byte for pixel expansion *\/$/;"	m	struct:png_struct_def
filler	include/png.h	/^   png_uint_16 filler;           \/* filler bytes for pixel expansion *\/$/;"	m	struct:png_struct_def
filter	include/png.h	/^   png_byte filter;           \/* file filter type (always 0) *\/$/;"	m	struct:png_struct_def
filter_costs	include/png.h	/^   png_uint_16p filter_costs;        \/* relative filter calculation cost *\/$/;"	m	struct:png_struct_def
filter_type	include/png.h	/^   png_byte filter_type;    \/* must be PNG_FILTER_TYPE_BASE (from IHDR) *\/$/;"	m	struct:png_info_struct
filter_type	include/png.h	/^   png_byte filter_type;$/;"	m	struct:png_struct_def
filter_weights	include/png.h	/^   png_uint_16p filter_weights;      \/* weight(s) for previous line(s) *\/$/;"	m	struct:png_struct_def
flags	include/png.h	/^   png_uint_32 flags;         \/* flags indicating various things to libpng *\/$/;"	m	struct:png_struct_def
flush_dist	include/png.h	/^   png_uint_32 flush_dist;    \/* how many rows apart to flush, 0 - no flush *\/$/;"	m	struct:png_struct_def
flush_rows	include/png.h	/^   png_uint_32 flush_rows;    \/* number of rows written since last flush *\/$/;"	m	struct:png_struct_def
force	StableFluids.cpp	/^static float force, source;$/;"	v	file:
frame_number	StableFluids.cpp	/^static int frame_number;$/;"	v	file:
frame_number	particles/TinkerToy.cpp	/^static int frame_number;$/;"	v	file:
free_data	StableFluids.cpp	/^static void free_data(void) {$/;"	f	file:
free_data	particles/TinkerToy.cpp	/^static void free_data(void) {$/;"	f	file:
free_fn	include/png.h	/^   png_free_ptr free_fn;             \/* function for freeing memory *\/$/;"	m	struct:png_struct_def
free_func	include/zconf.h	47;"	d
free_func	include/zlib.h	/^typedef void   (*free_func)  OF((voidpf opaque, voidpf address));$/;"	t
free_me	include/png.h	/^   png_uint_32 free_me;       \/* flags items libpng is responsible for freeing *\/$/;"	m	struct:png_struct_def
free_me	include/png.h	/^   png_uint_32 free_me;     \/* flags items libpng is responsible for freeing *\/$/;"	m	struct:png_info_struct
frequency	include/png.h	/^   png_uint_16 frequency;$/;"	m	struct:png_sPLT_entry_struct
g	particles/Gravity.h	/^  Vec2f g;$/;"	m	class:Gravity
gamma	include/png.h	/^   float gamma;          \/* file gamma value *\/$/;"	m	struct:png_struct_def
gamma	include/png.h	/^   float gamma; \/* gamma value of image, if (valid & PNG_INFO_gAMA) *\/$/;"	m	struct:png_info_struct
gamma_16_from_1	include/png.h	/^   png_uint_16pp gamma_16_from_1; \/* converts from 1.0 to screen *\/$/;"	m	struct:png_struct_def
gamma_16_table	include/png.h	/^   png_uint_16pp gamma_16_table; \/* gamma table for 16-bit depth files *\/$/;"	m	struct:png_struct_def
gamma_16_to_1	include/png.h	/^   png_uint_16pp gamma_16_to_1; \/* converts from file to 1.0 *\/$/;"	m	struct:png_struct_def
gamma_from_1	include/png.h	/^   png_bytep gamma_from_1;    \/* converts from 1.0 to screen *\/$/;"	m	struct:png_struct_def
gamma_shift	include/png.h	/^   int gamma_shift;      \/* number of "insignificant" bits 16-bit gamma *\/$/;"	m	struct:png_struct_def
gamma_table	include/png.h	/^   png_bytep gamma_table;     \/* gamma table for 8-bit depth files *\/$/;"	m	struct:png_struct_def
gamma_to_1	include/png.h	/^   png_bytep gamma_to_1;      \/* converts from file to 1.0 *\/$/;"	m	struct:png_struct_def
getParticleIDs	particles/CircularWireConstraint.cpp	/^std::vector< int > CircularWireConstraint::getParticleIDs() {$/;"	f	class:CircularWireConstraint
getParticleIDs	particles/RodConstraint.cpp	/^std::vector< int > RodConstraint::getParticleIDs() {$/;"	f	class:RodConstraint
get_crc_table	include/zconf.h	43;"	d
get_from_UI	StableFluids.cpp	/^static void get_from_UI(ScalarField *d, VectorField *u_v) {$/;"	f	file:
get_from_UI	particles/TinkerToy.cpp	/^static void get_from_UI() {$/;"	f	file:
gfx	include/gfx/geom3d.h	/^namespace gfx$/;"	n
gfx	include/gfx/geom4d.h	/^namespace gfx$/;"	n
gfx	include/gfx/gfx.h	/^namespace gfx$/;"	n
gfx	include/gfx/mat2.h	/^namespace gfx$/;"	n
gfx	include/gfx/mat3.h	/^namespace gfx$/;"	n
gfx	include/gfx/mat4.h	/^namespace gfx$/;"	n
gfx	include/gfx/quat.h	/^namespace gfx$/;"	n
gfx	include/gfx/symmat2.h	/^namespace gfx$/;"	n
gfx	include/gfx/symmat3.h	/^namespace gfx$/;"	n
gfx	include/gfx/symmat4.h	/^namespace gfx$/;"	n
gfx	include/gfx/vec2.h	/^namespace gfx$/;"	n
gfx	include/gfx/vec3.h	/^namespace gfx$/;"	n
gfx	include/gfx/vec4.h	/^namespace gfx$/;"	n
glActiveStencilFaceEXT	include/GL/glprocs.h	2002;"	d
glActiveTexture	include/GL/glprocs.h	1154;"	d
glActiveTextureARB	include/GL/glprocs.h	1264;"	d
glAddSwapHintRectWIN	include/GL/glprocs.h	2089;"	d
glAlphaFragmentOp1ATI	include/GL/glprocs.h	1884;"	d
glAlphaFragmentOp2ATI	include/GL/glprocs.h	1885;"	d
glAlphaFragmentOp3ATI	include/GL/glprocs.h	1886;"	d
glApplyTextureEXT	include/GL/glprocs.h	1608;"	d
glAreProgramsResidentNV	include/GL/glprocs.h	1806;"	d
glAreTexturesResidentEXT	include/GL/glprocs.h	1518;"	d
glArrayElementEXT	include/GL/glprocs.h	1530;"	d
glArrayObjectATI	include/GL/glprocs.h	1896;"	d
glAsyncMarkerSGIX	include/GL/glprocs.h	1611;"	d
glAttachObjectARB	include/GL/glprocs.h	1431;"	d
glBeginFragmentShaderATI	include/GL/glprocs.h	1877;"	d
glBeginOcclusionQueryNV	include/GL/glprocs.h	1996;"	d
glBeginQuery	include/GL/glprocs.h	1248;"	d
glBeginQueryARB	include/GL/glprocs.h	1419;"	d
glBeginVertexShaderEXT	include/GL/glprocs.h	1902;"	d
glBindAttribLocationARB	include/GL/glprocs.h	1463;"	d
glBindBuffer	include/GL/glprocs.h	1253;"	d
glBindBufferARB	include/GL/glprocs.h	1405;"	d
glBindFragmentShaderATI	include/GL/glprocs.h	1875;"	d
glBindLightParameterEXT	include/GL/glprocs.h	1928;"	d
glBindMaterialParameterEXT	include/GL/glprocs.h	1929;"	d
glBindParameterEXT	include/GL/glprocs.h	1932;"	d
glBindProgramARB	include/GL/glprocs.h	1383;"	d
glBindProgramNV	include/GL/glprocs.h	1807;"	d
glBindTexGenParameterEXT	include/GL/glprocs.h	1930;"	d
glBindTextureEXT	include/GL/glprocs.h	1519;"	d
glBindTextureUnitParameterEXT	include/GL/glprocs.h	1931;"	d
glBindVertexArrayAPPLE	include/GL/glprocs.h	2016;"	d
glBindVertexShaderEXT	include/GL/glprocs.h	1904;"	d
glBinormal3bEXT	include/GL/glprocs.h	1660;"	d
glBinormal3bvEXT	include/GL/glprocs.h	1661;"	d
glBinormal3dEXT	include/GL/glprocs.h	1662;"	d
glBinormal3dvEXT	include/GL/glprocs.h	1663;"	d
glBinormal3fEXT	include/GL/glprocs.h	1664;"	d
glBinormal3fvEXT	include/GL/glprocs.h	1665;"	d
glBinormal3iEXT	include/GL/glprocs.h	1666;"	d
glBinormal3ivEXT	include/GL/glprocs.h	1667;"	d
glBinormal3sEXT	include/GL/glprocs.h	1668;"	d
glBinormal3svEXT	include/GL/glprocs.h	1669;"	d
glBinormalPointerEXT	include/GL/glprocs.h	1671;"	d
glBlendColor	include/GL/glprocs.h	1116;"	d
glBlendColorEXT	include/GL/glprocs.h	1466;"	d
glBlendEquation	include/GL/glprocs.h	1117;"	d
glBlendEquationEXT	include/GL/glprocs.h	1539;"	d
glBlendEquationSeparateEXT	include/GL/glprocs.h	2088;"	d
glBlendFuncSeparate	include/GL/glprocs.h	1200;"	d
glBlendFuncSeparateEXT	include/GL/glprocs.h	1728;"	d
glBlendFuncSeparateINGR	include/GL/glprocs.h	1729;"	d
glBufferData	include/GL/glprocs.h	1257;"	d
glBufferDataARB	include/GL/glprocs.h	1409;"	d
glBufferSubData	include/GL/glprocs.h	1258;"	d
glBufferSubDataARB	include/GL/glprocs.h	1410;"	d
glClientActiveTexture	include/GL/glprocs.h	1155;"	d
glClientActiveTextureARB	include/GL/glprocs.h	1265;"	d
glClientActiveVertexStreamATI	include/GL/glprocs.h	1986;"	d
glColor3fVertex3fSUN	include/GL/glprocs.h	1692;"	d
glColor3fVertex3fvSUN	include/GL/glprocs.h	1693;"	d
glColor3hNV	include/GL/glprocs.h	2038;"	d
glColor3hvNV	include/GL/glprocs.h	2039;"	d
glColor4fNormal3fVertex3fSUN	include/GL/glprocs.h	1696;"	d
glColor4fNormal3fVertex3fvSUN	include/GL/glprocs.h	1697;"	d
glColor4hNV	include/GL/glprocs.h	2040;"	d
glColor4hvNV	include/GL/glprocs.h	2041;"	d
glColor4ubVertex2fSUN	include/GL/glprocs.h	1688;"	d
glColor4ubVertex2fvSUN	include/GL/glprocs.h	1689;"	d
glColor4ubVertex3fSUN	include/GL/glprocs.h	1690;"	d
glColor4ubVertex3fvSUN	include/GL/glprocs.h	1691;"	d
glColorFragmentOp1ATI	include/GL/glprocs.h	1881;"	d
glColorFragmentOp2ATI	include/GL/glprocs.h	1882;"	d
glColorFragmentOp3ATI	include/GL/glprocs.h	1883;"	d
glColorPointerEXT	include/GL/glprocs.h	1531;"	d
glColorPointerListIBM	include/GL/glprocs.h	1775;"	d
glColorPointervINTEL	include/GL/glprocs.h	1619;"	d
glColorSubTable	include/GL/glprocs.h	1126;"	d
glColorSubTableEXT	include/GL/glprocs.h	1570;"	d
glColorTable	include/GL/glprocs.h	1119;"	d
glColorTableEXT	include/GL/glprocs.h	1573;"	d
glColorTableParameterfv	include/GL/glprocs.h	1120;"	d
glColorTableParameterfvSGI	include/GL/glprocs.h	1503;"	d
glColorTableParameteriv	include/GL/glprocs.h	1121;"	d
glColorTableParameterivSGI	include/GL/glprocs.h	1504;"	d
glColorTableSGI	include/GL/glprocs.h	1502;"	d
glCombinerInputNV	include/GL/glprocs.h	1739;"	d
glCombinerOutputNV	include/GL/glprocs.h	1740;"	d
glCombinerParameterfNV	include/GL/glprocs.h	1736;"	d
glCombinerParameterfvNV	include/GL/glprocs.h	1735;"	d
glCombinerParameteriNV	include/GL/glprocs.h	1738;"	d
glCombinerParameterivNV	include/GL/glprocs.h	1737;"	d
glCombinerStageParameterfvNV	include/GL/glprocs.h	1804;"	d
glCompileShaderARB	include/GL/glprocs.h	1429;"	d
glCompressedTexImage1D	include/GL/glprocs.h	1195;"	d
glCompressedTexImage1DARB	include/GL/glprocs.h	1305;"	d
glCompressedTexImage2D	include/GL/glprocs.h	1194;"	d
glCompressedTexImage2DARB	include/GL/glprocs.h	1304;"	d
glCompressedTexImage3D	include/GL/glprocs.h	1193;"	d
glCompressedTexImage3DARB	include/GL/glprocs.h	1303;"	d
glCompressedTexSubImage1D	include/GL/glprocs.h	1198;"	d
glCompressedTexSubImage1DARB	include/GL/glprocs.h	1308;"	d
glCompressedTexSubImage2D	include/GL/glprocs.h	1197;"	d
glCompressedTexSubImage2DARB	include/GL/glprocs.h	1307;"	d
glCompressedTexSubImage3D	include/GL/glprocs.h	1196;"	d
glCompressedTexSubImage3DARB	include/GL/glprocs.h	1306;"	d
glConvolutionFilter1D	include/GL/glprocs.h	1128;"	d
glConvolutionFilter1DEXT	include/GL/glprocs.h	1489;"	d
glConvolutionFilter2D	include/GL/glprocs.h	1129;"	d
glConvolutionFilter2DEXT	include/GL/glprocs.h	1490;"	d
glConvolutionParameterf	include/GL/glprocs.h	1130;"	d
glConvolutionParameterfEXT	include/GL/glprocs.h	1491;"	d
glConvolutionParameterfv	include/GL/glprocs.h	1131;"	d
glConvolutionParameterfvEXT	include/GL/glprocs.h	1492;"	d
glConvolutionParameteri	include/GL/glprocs.h	1132;"	d
glConvolutionParameteriEXT	include/GL/glprocs.h	1493;"	d
glConvolutionParameteriv	include/GL/glprocs.h	1133;"	d
glConvolutionParameterivEXT	include/GL/glprocs.h	1494;"	d
glCopyColorSubTable	include/GL/glprocs.h	1127;"	d
glCopyColorSubTableEXT	include/GL/glprocs.h	1571;"	d
glCopyColorTable	include/GL/glprocs.h	1122;"	d
glCopyColorTableSGI	include/GL/glprocs.h	1505;"	d
glCopyConvolutionFilter1D	include/GL/glprocs.h	1134;"	d
glCopyConvolutionFilter1DEXT	include/GL/glprocs.h	1495;"	d
glCopyConvolutionFilter2D	include/GL/glprocs.h	1135;"	d
glCopyConvolutionFilter2DEXT	include/GL/glprocs.h	1496;"	d
glCopyTexImage1DEXT	include/GL/glprocs.h	1474;"	d
glCopyTexImage2DEXT	include/GL/glprocs.h	1475;"	d
glCopyTexSubImage1DEXT	include/GL/glprocs.h	1476;"	d
glCopyTexSubImage2DEXT	include/GL/glprocs.h	1477;"	d
glCopyTexSubImage3D	include/GL/glprocs.h	1153;"	d
glCopyTexSubImage3DEXT	include/GL/glprocs.h	1478;"	d
glCreateProgramObjectARB	include/GL/glprocs.h	1430;"	d
glCreateShaderObjectARB	include/GL/glprocs.h	1427;"	d
glCullParameterdvEXT	include/GL/glprocs.h	1587;"	d
glCullParameterfvEXT	include/GL/glprocs.h	1588;"	d
glCurrentPaletteMatrixARB	include/GL/glprocs.h	1322;"	d
glDeformSGIX	include/GL/glprocs.h	1558;"	d
glDeformationMap3dSGIX	include/GL/glprocs.h	1556;"	d
glDeformationMap3fSGIX	include/GL/glprocs.h	1557;"	d
glDeleteAsyncMarkersSGIX	include/GL/glprocs.h	1615;"	d
glDeleteBuffers	include/GL/glprocs.h	1254;"	d
glDeleteBuffersARB	include/GL/glprocs.h	1406;"	d
glDeleteFencesAPPLE	include/GL/glprocs.h	2009;"	d
glDeleteFencesNV	include/GL/glprocs.h	1788;"	d
glDeleteFragmentShaderATI	include/GL/glprocs.h	1876;"	d
glDeleteObjectARB	include/GL/glprocs.h	1424;"	d
glDeleteOcclusionQueriesNV	include/GL/glprocs.h	1994;"	d
glDeleteProgramsARB	include/GL/glprocs.h	1384;"	d
glDeleteProgramsNV	include/GL/glprocs.h	1808;"	d
glDeleteQueries	include/GL/glprocs.h	1246;"	d
glDeleteQueriesARB	include/GL/glprocs.h	1417;"	d
glDeleteTexturesEXT	include/GL/glprocs.h	1520;"	d
glDeleteVertexArraysAPPLE	include/GL/glprocs.h	2017;"	d
glDeleteVertexShaderEXT	include/GL/glprocs.h	1906;"	d
glDepthBoundsEXT	include/GL/glprocs.h	2087;"	d
glDetachObjectARB	include/GL/glprocs.h	1426;"	d
glDetailTexFuncSGIS	include/GL/glprocs.h	1524;"	d
glDisableVariantClientStateEXT	include/GL/glprocs.h	1927;"	d
glDisableVertexAttribArrayARB	include/GL/glprocs.h	1381;"	d
glDrawArraysEXT	include/GL/glprocs.h	1532;"	d
glDrawBuffersATI	include/GL/glprocs.h	2023;"	d
glDrawElementArrayAPPLE	include/GL/glprocs.h	2004;"	d
glDrawElementArrayATI	include/GL/glprocs.h	1990;"	d
glDrawMeshArraysSUN	include/GL/glprocs.h	1992;"	d
glDrawRangeElementArrayAPPLE	include/GL/glprocs.h	2005;"	d
glDrawRangeElementArrayATI	include/GL/glprocs.h	1991;"	d
glDrawRangeElements	include/GL/glprocs.h	1118;"	d
glDrawRangeElementsEXT	include/GL/glprocs.h	1607;"	d
glEdgeFlagPointerEXT	include/GL/glprocs.h	1533;"	d
glEdgeFlagPointerListIBM	include/GL/glprocs.h	1777;"	d
glElementPointerAPPLE	include/GL/glprocs.h	2003;"	d
glElementPointerATI	include/GL/glprocs.h	1989;"	d
glEnableVariantClientStateEXT	include/GL/glprocs.h	1926;"	d
glEnableVertexAttribArrayARB	include/GL/glprocs.h	1380;"	d
glEndFragmentShaderATI	include/GL/glprocs.h	1878;"	d
glEndOcclusionQueryNV	include/GL/glprocs.h	1997;"	d
glEndQuery	include/GL/glprocs.h	1249;"	d
glEndQueryARB	include/GL/glprocs.h	1420;"	d
glEndVertexShaderEXT	include/GL/glprocs.h	1903;"	d
glEvalMapsNV	include/GL/glprocs.h	1803;"	d
glExecuteProgramNV	include/GL/glprocs.h	1809;"	d
glExtractComponentEXT	include/GL/glprocs.h	1913;"	d
glFinalCombinerInputNV	include/GL/glprocs.h	1741;"	d
glFinishAsyncSGIX	include/GL/glprocs.h	1612;"	d
glFinishFenceAPPLE	include/GL/glprocs.h	2013;"	d
glFinishFenceNV	include/GL/glprocs.h	1793;"	d
glFinishObjectAPPLE	include/GL/glprocs.h	2015;"	d
glFinishTextureSUNX	include/GL/glprocs.h	1672;"	d
glFlushPixelDataRangeNV	include/GL/glprocs.h	2077;"	d
glFlushRasterSGIX	include/GL/glprocs.h	1561;"	d
glFlushVertexArrayRangeAPPLE	include/GL/glprocs.h	2021;"	d
glFlushVertexArrayRangeNV	include/GL/glprocs.h	1733;"	d
glFogCoordPointer	include/GL/glprocs.h	1205;"	d
glFogCoordPointerEXT	include/GL/glprocs.h	1649;"	d
glFogCoordPointerListIBM	include/GL/glprocs.h	1778;"	d
glFogCoordd	include/GL/glprocs.h	1203;"	d
glFogCoorddEXT	include/GL/glprocs.h	1647;"	d
glFogCoorddv	include/GL/glprocs.h	1204;"	d
glFogCoorddvEXT	include/GL/glprocs.h	1648;"	d
glFogCoordf	include/GL/glprocs.h	1201;"	d
glFogCoordfEXT	include/GL/glprocs.h	1645;"	d
glFogCoordfv	include/GL/glprocs.h	1202;"	d
glFogCoordfvEXT	include/GL/glprocs.h	1646;"	d
glFogCoordhNV	include/GL/glprocs.h	2058;"	d
glFogCoordhvNV	include/GL/glprocs.h	2059;"	d
glFogFuncSGIS	include/GL/glprocs.h	1562;"	d
glFragmentColorMaterialSGIX	include/GL/glprocs.h	1589;"	d
glFragmentLightModelfSGIX	include/GL/glprocs.h	1594;"	d
glFragmentLightModelfvSGIX	include/GL/glprocs.h	1595;"	d
glFragmentLightModeliSGIX	include/GL/glprocs.h	1596;"	d
glFragmentLightModelivSGIX	include/GL/glprocs.h	1597;"	d
glFragmentLightfSGIX	include/GL/glprocs.h	1590;"	d
glFragmentLightfvSGIX	include/GL/glprocs.h	1591;"	d
glFragmentLightiSGIX	include/GL/glprocs.h	1592;"	d
glFragmentLightivSGIX	include/GL/glprocs.h	1593;"	d
glFragmentMaterialfSGIX	include/GL/glprocs.h	1598;"	d
glFragmentMaterialfvSGIX	include/GL/glprocs.h	1599;"	d
glFragmentMaterialiSGIX	include/GL/glprocs.h	1600;"	d
glFragmentMaterialivSGIX	include/GL/glprocs.h	1601;"	d
glFrameZoomSGIX	include/GL/glprocs.h	1554;"	d
glFreeObjectBufferATI	include/GL/glprocs.h	1895;"	d
glGenAsyncMarkersSGIX	include/GL/glprocs.h	1614;"	d
glGenBuffers	include/GL/glprocs.h	1255;"	d
glGenBuffersARB	include/GL/glprocs.h	1407;"	d
glGenFencesAPPLE	include/GL/glprocs.h	2008;"	d
glGenFencesNV	include/GL/glprocs.h	1789;"	d
glGenFragmentShadersATI	include/GL/glprocs.h	1874;"	d
glGenOcclusionQueriesNV	include/GL/glprocs.h	1993;"	d
glGenProgramsARB	include/GL/glprocs.h	1385;"	d
glGenProgramsNV	include/GL/glprocs.h	1810;"	d
glGenQueries	include/GL/glprocs.h	1245;"	d
glGenQueriesARB	include/GL/glprocs.h	1416;"	d
glGenSymbolsEXT	include/GL/glprocs.h	1914;"	d
glGenTexturesEXT	include/GL/glprocs.h	1521;"	d
glGenVertexArraysAPPLE	include/GL/glprocs.h	2018;"	d
glGenVertexShadersEXT	include/GL/glprocs.h	1905;"	d
glGetActiveAttribARB	include/GL/glprocs.h	1464;"	d
glGetActiveUniformARB	include/GL/glprocs.h	1459;"	d
glGetArrayObjectfvATI	include/GL/glprocs.h	1897;"	d
glGetArrayObjectivATI	include/GL/glprocs.h	1898;"	d
glGetAttachedObjectsARB	include/GL/glprocs.h	1457;"	d
glGetAttribLocationARB	include/GL/glprocs.h	1465;"	d
glGetBufferParameteriv	include/GL/glprocs.h	1262;"	d
glGetBufferParameterivARB	include/GL/glprocs.h	1414;"	d
glGetBufferPointerv	include/GL/glprocs.h	1263;"	d
glGetBufferPointervARB	include/GL/glprocs.h	1415;"	d
glGetBufferSubData	include/GL/glprocs.h	1259;"	d
glGetBufferSubDataARB	include/GL/glprocs.h	1411;"	d
glGetColorTable	include/GL/glprocs.h	1123;"	d
glGetColorTableEXT	include/GL/glprocs.h	1574;"	d
glGetColorTableParameterfv	include/GL/glprocs.h	1124;"	d
glGetColorTableParameterfvEXT	include/GL/glprocs.h	1576;"	d
glGetColorTableParameterfvSGI	include/GL/glprocs.h	1507;"	d
glGetColorTableParameteriv	include/GL/glprocs.h	1125;"	d
glGetColorTableParameterivEXT	include/GL/glprocs.h	1575;"	d
glGetColorTableParameterivSGI	include/GL/glprocs.h	1508;"	d
glGetColorTableSGI	include/GL/glprocs.h	1506;"	d
glGetCombinerInputParameterfvNV	include/GL/glprocs.h	1742;"	d
glGetCombinerInputParameterivNV	include/GL/glprocs.h	1743;"	d
glGetCombinerOutputParameterfvNV	include/GL/glprocs.h	1744;"	d
glGetCombinerOutputParameterivNV	include/GL/glprocs.h	1745;"	d
glGetCombinerStageParameterfvNV	include/GL/glprocs.h	1805;"	d
glGetCompressedTexImage	include/GL/glprocs.h	1199;"	d
glGetCompressedTexImageARB	include/GL/glprocs.h	1309;"	d
glGetConvolutionFilter	include/GL/glprocs.h	1136;"	d
glGetConvolutionFilterEXT	include/GL/glprocs.h	1497;"	d
glGetConvolutionParameterfv	include/GL/glprocs.h	1137;"	d
glGetConvolutionParameterfvEXT	include/GL/glprocs.h	1498;"	d
glGetConvolutionParameteriv	include/GL/glprocs.h	1138;"	d
glGetConvolutionParameterivEXT	include/GL/glprocs.h	1499;"	d
glGetDetailTexFuncSGIS	include/GL/glprocs.h	1525;"	d
glGetFenceivNV	include/GL/glprocs.h	1792;"	d
glGetFinalCombinerInputParameterfvNV	include/GL/glprocs.h	1746;"	d
glGetFinalCombinerInputParameterivNV	include/GL/glprocs.h	1747;"	d
glGetFogFuncSGIS	include/GL/glprocs.h	1563;"	d
glGetFragmentLightfvSGIX	include/GL/glprocs.h	1602;"	d
glGetFragmentLightivSGIX	include/GL/glprocs.h	1603;"	d
glGetFragmentMaterialfvSGIX	include/GL/glprocs.h	1604;"	d
glGetFragmentMaterialivSGIX	include/GL/glprocs.h	1605;"	d
glGetHandleARB	include/GL/glprocs.h	1425;"	d
glGetHistogram	include/GL/glprocs.h	1141;"	d
glGetHistogramEXT	include/GL/glprocs.h	1479;"	d
glGetHistogramParameterfv	include/GL/glprocs.h	1142;"	d
glGetHistogramParameterfvEXT	include/GL/glprocs.h	1480;"	d
glGetHistogramParameteriv	include/GL/glprocs.h	1143;"	d
glGetHistogramParameterivEXT	include/GL/glprocs.h	1481;"	d
glGetImageTransformParameterfvHP	include/GL/glprocs.h	1569;"	d
glGetImageTransformParameterivHP	include/GL/glprocs.h	1568;"	d
glGetInfoLogARB	include/GL/glprocs.h	1456;"	d
glGetInstrumentsSGIX	include/GL/glprocs.h	1548;"	d
glGetInvariantBooleanvEXT	include/GL/glprocs.h	1938;"	d
glGetInvariantFloatvEXT	include/GL/glprocs.h	1940;"	d
glGetInvariantIntegervEXT	include/GL/glprocs.h	1939;"	d
glGetListParameterfvSGIX	include/GL/glprocs.h	1577;"	d
glGetListParameterivSGIX	include/GL/glprocs.h	1578;"	d
glGetLocalConstantBooleanvEXT	include/GL/glprocs.h	1941;"	d
glGetLocalConstantFloatvEXT	include/GL/glprocs.h	1943;"	d
glGetLocalConstantIntegervEXT	include/GL/glprocs.h	1942;"	d
glGetMapAttribParameterfvNV	include/GL/glprocs.h	1802;"	d
glGetMapAttribParameterivNV	include/GL/glprocs.h	1801;"	d
glGetMapControlPointsNV	include/GL/glprocs.h	1798;"	d
glGetMapParameterfvNV	include/GL/glprocs.h	1800;"	d
glGetMapParameterivNV	include/GL/glprocs.h	1799;"	d
glGetMinmax	include/GL/glprocs.h	1144;"	d
glGetMinmaxEXT	include/GL/glprocs.h	1482;"	d
glGetMinmaxParameterfv	include/GL/glprocs.h	1145;"	d
glGetMinmaxParameterfvEXT	include/GL/glprocs.h	1483;"	d
glGetMinmaxParameteriv	include/GL/glprocs.h	1146;"	d
glGetMinmaxParameterivEXT	include/GL/glprocs.h	1484;"	d
glGetObjectBufferfvATI	include/GL/glprocs.h	1893;"	d
glGetObjectBufferivATI	include/GL/glprocs.h	1894;"	d
glGetObjectParameterfvARB	include/GL/glprocs.h	1454;"	d
glGetObjectParameterivARB	include/GL/glprocs.h	1455;"	d
glGetOcclusionQueryivNV	include/GL/glprocs.h	1998;"	d
glGetOcclusionQueryuivNV	include/GL/glprocs.h	1999;"	d
glGetPixelTexGenParameterfvSGIS	include/GL/glprocs.h	1515;"	d
glGetPixelTexGenParameterivSGIS	include/GL/glprocs.h	1514;"	d
glGetPointervEXT	include/GL/glprocs.h	1534;"	d
glGetProgramEnvParameterdvARB	include/GL/glprocs.h	1394;"	d
glGetProgramEnvParameterfvARB	include/GL/glprocs.h	1395;"	d
glGetProgramLocalParameterdvARB	include/GL/glprocs.h	1396;"	d
glGetProgramLocalParameterfvARB	include/GL/glprocs.h	1397;"	d
glGetProgramNamedParameterdvNV	include/GL/glprocs.h	2029;"	d
glGetProgramNamedParameterfvNV	include/GL/glprocs.h	2028;"	d
glGetProgramParameterdvNV	include/GL/glprocs.h	1811;"	d
glGetProgramParameterfvNV	include/GL/glprocs.h	1812;"	d
glGetProgramStringARB	include/GL/glprocs.h	1399;"	d
glGetProgramStringNV	include/GL/glprocs.h	1814;"	d
glGetProgramivARB	include/GL/glprocs.h	1398;"	d
glGetProgramivNV	include/GL/glprocs.h	1813;"	d
glGetQueryObjectiv	include/GL/glprocs.h	1251;"	d
glGetQueryObjectivARB	include/GL/glprocs.h	1422;"	d
glGetQueryObjectuiv	include/GL/glprocs.h	1252;"	d
glGetQueryObjectuivARB	include/GL/glprocs.h	1423;"	d
glGetQueryiv	include/GL/glprocs.h	1250;"	d
glGetQueryivARB	include/GL/glprocs.h	1421;"	d
glGetSeparableFilter	include/GL/glprocs.h	1139;"	d
glGetSeparableFilterEXT	include/GL/glprocs.h	1500;"	d
glGetShaderSourceARB	include/GL/glprocs.h	1462;"	d
glGetSharpenTexFuncSGIS	include/GL/glprocs.h	1527;"	d
glGetTexBumpParameterfvATI	include/GL/glprocs.h	1873;"	d
glGetTexBumpParameterivATI	include/GL/glprocs.h	1872;"	d
glGetTexFilterFuncSGIS	include/GL/glprocs.h	1470;"	d
glGetTrackMatrixivNV	include/GL/glprocs.h	1815;"	d
glGetUniformLocationARB	include/GL/glprocs.h	1458;"	d
glGetUniformfvARB	include/GL/glprocs.h	1460;"	d
glGetUniformivARB	include/GL/glprocs.h	1461;"	d
glGetVariantArrayObjectfvATI	include/GL/glprocs.h	1900;"	d
glGetVariantArrayObjectivATI	include/GL/glprocs.h	1901;"	d
glGetVariantBooleanvEXT	include/GL/glprocs.h	1934;"	d
glGetVariantFloatvEXT	include/GL/glprocs.h	1936;"	d
glGetVariantIntegervEXT	include/GL/glprocs.h	1935;"	d
glGetVariantPointervEXT	include/GL/glprocs.h	1937;"	d
glGetVertexAttribArrayObjectfvATI	include/GL/glprocs.h	2085;"	d
glGetVertexAttribArrayObjectivATI	include/GL/glprocs.h	2086;"	d
glGetVertexAttribPointervARB	include/GL/glprocs.h	1403;"	d
glGetVertexAttribPointervNV	include/GL/glprocs.h	1819;"	d
glGetVertexAttribdvARB	include/GL/glprocs.h	1400;"	d
glGetVertexAttribdvNV	include/GL/glprocs.h	1816;"	d
glGetVertexAttribfvARB	include/GL/glprocs.h	1401;"	d
glGetVertexAttribfvNV	include/GL/glprocs.h	1817;"	d
glGetVertexAttribivARB	include/GL/glprocs.h	1402;"	d
glGetVertexAttribivNV	include/GL/glprocs.h	1818;"	d
glGlobalAlphaFactorbSUN	include/GL/glprocs.h	1673;"	d
glGlobalAlphaFactordSUN	include/GL/glprocs.h	1677;"	d
glGlobalAlphaFactorfSUN	include/GL/glprocs.h	1676;"	d
glGlobalAlphaFactoriSUN	include/GL/glprocs.h	1675;"	d
glGlobalAlphaFactorsSUN	include/GL/glprocs.h	1674;"	d
glGlobalAlphaFactorubSUN	include/GL/glprocs.h	1678;"	d
glGlobalAlphaFactoruiSUN	include/GL/glprocs.h	1680;"	d
glGlobalAlphaFactorusSUN	include/GL/glprocs.h	1679;"	d
glHintPGI	include/GL/glprocs.h	1572;"	d
glHistogram	include/GL/glprocs.h	1147;"	d
glHistogramEXT	include/GL/glprocs.h	1485;"	d
glIglooInterfaceSGIX	include/GL/glprocs.h	1787;"	d
glImageTransformParameterfHP	include/GL/glprocs.h	1565;"	d
glImageTransformParameterfvHP	include/GL/glprocs.h	1567;"	d
glImageTransformParameteriHP	include/GL/glprocs.h	1564;"	d
glImageTransformParameterivHP	include/GL/glprocs.h	1566;"	d
glIndexFuncEXT	include/GL/glprocs.h	1584;"	d
glIndexMaterialEXT	include/GL/glprocs.h	1583;"	d
glIndexPointerEXT	include/GL/glprocs.h	1535;"	d
glIndexPointerListIBM	include/GL/glprocs.h	1779;"	d
glInsertComponentEXT	include/GL/glprocs.h	1912;"	d
glInstrumentsBufferSGIX	include/GL/glprocs.h	1549;"	d
glIsAsyncMarkerSGIX	include/GL/glprocs.h	1616;"	d
glIsBuffer	include/GL/glprocs.h	1256;"	d
glIsBufferARB	include/GL/glprocs.h	1408;"	d
glIsFenceAPPLE	include/GL/glprocs.h	2011;"	d
glIsFenceNV	include/GL/glprocs.h	1790;"	d
glIsObjectBufferATI	include/GL/glprocs.h	1891;"	d
glIsOcclusionQueryNV	include/GL/glprocs.h	1995;"	d
glIsProgramARB	include/GL/glprocs.h	1404;"	d
glIsProgramNV	include/GL/glprocs.h	1820;"	d
glIsQuery	include/GL/glprocs.h	1247;"	d
glIsQueryARB	include/GL/glprocs.h	1418;"	d
glIsTextureEXT	include/GL/glprocs.h	1522;"	d
glIsVariantEnabledEXT	include/GL/glprocs.h	1933;"	d
glIsVertexArrayAPPLE	include/GL/glprocs.h	2019;"	d
glLightEnviSGIX	include/GL/glprocs.h	1606;"	d
glLinkProgramARB	include/GL/glprocs.h	1432;"	d
glListParameterfSGIX	include/GL/glprocs.h	1579;"	d
glListParameterfvSGIX	include/GL/glprocs.h	1580;"	d
glListParameteriSGIX	include/GL/glprocs.h	1581;"	d
glListParameterivSGIX	include/GL/glprocs.h	1582;"	d
glLoadIdentityDeformationMapSGIX	include/GL/glprocs.h	1559;"	d
glLoadProgramNV	include/GL/glprocs.h	1821;"	d
glLoadTransposeMatrixd	include/GL/glprocs.h	1189;"	d
glLoadTransposeMatrixdARB	include/GL/glprocs.h	1299;"	d
glLoadTransposeMatrixf	include/GL/glprocs.h	1188;"	d
glLoadTransposeMatrixfARB	include/GL/glprocs.h	1298;"	d
glLockArraysEXT	include/GL/glprocs.h	1585;"	d
glMapBuffer	include/GL/glprocs.h	1260;"	d
glMapBufferARB	include/GL/glprocs.h	1412;"	d
glMapControlPointsNV	include/GL/glprocs.h	1795;"	d
glMapObjectBufferATI	include/GL/glprocs.h	2080;"	d
glMapParameterfvNV	include/GL/glprocs.h	1797;"	d
glMapParameterivNV	include/GL/glprocs.h	1796;"	d
glMatrixIndexPointerARB	include/GL/glprocs.h	1326;"	d
glMatrixIndexubvARB	include/GL/glprocs.h	1323;"	d
glMatrixIndexuivARB	include/GL/glprocs.h	1325;"	d
glMatrixIndexusvARB	include/GL/glprocs.h	1324;"	d
glMinmax	include/GL/glprocs.h	1148;"	d
glMinmaxEXT	include/GL/glprocs.h	1486;"	d
glMultTransposeMatrixd	include/GL/glprocs.h	1191;"	d
glMultTransposeMatrixdARB	include/GL/glprocs.h	1301;"	d
glMultTransposeMatrixf	include/GL/glprocs.h	1190;"	d
glMultTransposeMatrixfARB	include/GL/glprocs.h	1300;"	d
glMultiDrawArrays	include/GL/glprocs.h	1206;"	d
glMultiDrawArraysEXT	include/GL/glprocs.h	1643;"	d
glMultiDrawElementArrayAPPLE	include/GL/glprocs.h	2006;"	d
glMultiDrawElements	include/GL/glprocs.h	1207;"	d
glMultiDrawElementsEXT	include/GL/glprocs.h	1644;"	d
glMultiDrawRangeElementArrayAPPLE	include/GL/glprocs.h	2007;"	d
glMultiModeDrawArraysIBM	include/GL/glprocs.h	1773;"	d
glMultiModeDrawElementsIBM	include/GL/glprocs.h	1774;"	d
glMultiTexCoord1d	include/GL/glprocs.h	1156;"	d
glMultiTexCoord1dARB	include/GL/glprocs.h	1266;"	d
glMultiTexCoord1dv	include/GL/glprocs.h	1157;"	d
glMultiTexCoord1dvARB	include/GL/glprocs.h	1267;"	d
glMultiTexCoord1f	include/GL/glprocs.h	1158;"	d
glMultiTexCoord1fARB	include/GL/glprocs.h	1268;"	d
glMultiTexCoord1fv	include/GL/glprocs.h	1159;"	d
glMultiTexCoord1fvARB	include/GL/glprocs.h	1269;"	d
glMultiTexCoord1hNV	include/GL/glprocs.h	2050;"	d
glMultiTexCoord1hvNV	include/GL/glprocs.h	2051;"	d
glMultiTexCoord1i	include/GL/glprocs.h	1160;"	d
glMultiTexCoord1iARB	include/GL/glprocs.h	1270;"	d
glMultiTexCoord1iv	include/GL/glprocs.h	1161;"	d
glMultiTexCoord1ivARB	include/GL/glprocs.h	1271;"	d
glMultiTexCoord1s	include/GL/glprocs.h	1162;"	d
glMultiTexCoord1sARB	include/GL/glprocs.h	1272;"	d
glMultiTexCoord1sv	include/GL/glprocs.h	1163;"	d
glMultiTexCoord1svARB	include/GL/glprocs.h	1273;"	d
glMultiTexCoord2d	include/GL/glprocs.h	1164;"	d
glMultiTexCoord2dARB	include/GL/glprocs.h	1274;"	d
glMultiTexCoord2dv	include/GL/glprocs.h	1165;"	d
glMultiTexCoord2dvARB	include/GL/glprocs.h	1275;"	d
glMultiTexCoord2f	include/GL/glprocs.h	1166;"	d
glMultiTexCoord2fARB	include/GL/glprocs.h	1276;"	d
glMultiTexCoord2fv	include/GL/glprocs.h	1167;"	d
glMultiTexCoord2fvARB	include/GL/glprocs.h	1277;"	d
glMultiTexCoord2hNV	include/GL/glprocs.h	2052;"	d
glMultiTexCoord2hvNV	include/GL/glprocs.h	2053;"	d
glMultiTexCoord2i	include/GL/glprocs.h	1168;"	d
glMultiTexCoord2iARB	include/GL/glprocs.h	1278;"	d
glMultiTexCoord2iv	include/GL/glprocs.h	1169;"	d
glMultiTexCoord2ivARB	include/GL/glprocs.h	1279;"	d
glMultiTexCoord2s	include/GL/glprocs.h	1170;"	d
glMultiTexCoord2sARB	include/GL/glprocs.h	1280;"	d
glMultiTexCoord2sv	include/GL/glprocs.h	1171;"	d
glMultiTexCoord2svARB	include/GL/glprocs.h	1281;"	d
glMultiTexCoord3d	include/GL/glprocs.h	1172;"	d
glMultiTexCoord3dARB	include/GL/glprocs.h	1282;"	d
glMultiTexCoord3dv	include/GL/glprocs.h	1173;"	d
glMultiTexCoord3dvARB	include/GL/glprocs.h	1283;"	d
glMultiTexCoord3f	include/GL/glprocs.h	1174;"	d
glMultiTexCoord3fARB	include/GL/glprocs.h	1284;"	d
glMultiTexCoord3fv	include/GL/glprocs.h	1175;"	d
glMultiTexCoord3fvARB	include/GL/glprocs.h	1285;"	d
glMultiTexCoord3hNV	include/GL/glprocs.h	2054;"	d
glMultiTexCoord3hvNV	include/GL/glprocs.h	2055;"	d
glMultiTexCoord3i	include/GL/glprocs.h	1176;"	d
glMultiTexCoord3iARB	include/GL/glprocs.h	1286;"	d
glMultiTexCoord3iv	include/GL/glprocs.h	1177;"	d
glMultiTexCoord3ivARB	include/GL/glprocs.h	1287;"	d
glMultiTexCoord3s	include/GL/glprocs.h	1178;"	d
glMultiTexCoord3sARB	include/GL/glprocs.h	1288;"	d
glMultiTexCoord3sv	include/GL/glprocs.h	1179;"	d
glMultiTexCoord3svARB	include/GL/glprocs.h	1289;"	d
glMultiTexCoord4d	include/GL/glprocs.h	1180;"	d
glMultiTexCoord4dARB	include/GL/glprocs.h	1290;"	d
glMultiTexCoord4dv	include/GL/glprocs.h	1181;"	d
glMultiTexCoord4dvARB	include/GL/glprocs.h	1291;"	d
glMultiTexCoord4f	include/GL/glprocs.h	1182;"	d
glMultiTexCoord4fARB	include/GL/glprocs.h	1292;"	d
glMultiTexCoord4fv	include/GL/glprocs.h	1183;"	d
glMultiTexCoord4fvARB	include/GL/glprocs.h	1293;"	d
glMultiTexCoord4hNV	include/GL/glprocs.h	2056;"	d
glMultiTexCoord4hvNV	include/GL/glprocs.h	2057;"	d
glMultiTexCoord4i	include/GL/glprocs.h	1184;"	d
glMultiTexCoord4iARB	include/GL/glprocs.h	1294;"	d
glMultiTexCoord4iv	include/GL/glprocs.h	1185;"	d
glMultiTexCoord4ivARB	include/GL/glprocs.h	1295;"	d
glMultiTexCoord4s	include/GL/glprocs.h	1186;"	d
glMultiTexCoord4sARB	include/GL/glprocs.h	1296;"	d
glMultiTexCoord4sv	include/GL/glprocs.h	1187;"	d
glMultiTexCoord4svARB	include/GL/glprocs.h	1297;"	d
glNewObjectBufferATI	include/GL/glprocs.h	1890;"	d
glNormal3fVertex3fSUN	include/GL/glprocs.h	1694;"	d
glNormal3fVertex3fvSUN	include/GL/glprocs.h	1695;"	d
glNormal3hNV	include/GL/glprocs.h	2036;"	d
glNormal3hvNV	include/GL/glprocs.h	2037;"	d
glNormalPointerEXT	include/GL/glprocs.h	1536;"	d
glNormalPointerListIBM	include/GL/glprocs.h	1780;"	d
glNormalPointervINTEL	include/GL/glprocs.h	1618;"	d
glNormalStream3bATI	include/GL/glprocs.h	1976;"	d
glNormalStream3bvATI	include/GL/glprocs.h	1977;"	d
glNormalStream3dATI	include/GL/glprocs.h	1984;"	d
glNormalStream3dvATI	include/GL/glprocs.h	1985;"	d
glNormalStream3fATI	include/GL/glprocs.h	1982;"	d
glNormalStream3fvATI	include/GL/glprocs.h	1983;"	d
glNormalStream3iATI	include/GL/glprocs.h	1980;"	d
glNormalStream3ivATI	include/GL/glprocs.h	1981;"	d
glNormalStream3sATI	include/GL/glprocs.h	1978;"	d
glNormalStream3svATI	include/GL/glprocs.h	1979;"	d
glPNTrianglesfATI	include/GL/glprocs.h	1889;"	d
glPNTrianglesiATI	include/GL/glprocs.h	1888;"	d
glPassTexCoordATI	include/GL/glprocs.h	1879;"	d
glPixelDataRangeNV	include/GL/glprocs.h	2076;"	d
glPixelTexGenParameterfSGIS	include/GL/glprocs.h	1512;"	d
glPixelTexGenParameterfvSGIS	include/GL/glprocs.h	1513;"	d
glPixelTexGenParameteriSGIS	include/GL/glprocs.h	1510;"	d
glPixelTexGenParameterivSGIS	include/GL/glprocs.h	1511;"	d
glPixelTexGenSGIX	include/GL/glprocs.h	1509;"	d
glPixelTransformParameterfEXT	include/GL/glprocs.h	1622;"	d
glPixelTransformParameterfvEXT	include/GL/glprocs.h	1624;"	d
glPixelTransformParameteriEXT	include/GL/glprocs.h	1621;"	d
glPixelTransformParameterivEXT	include/GL/glprocs.h	1623;"	d
glPointParameterf	include/GL/glprocs.h	1208;"	d
glPointParameterfARB	include/GL/glprocs.h	1310;"	d
glPointParameterfEXT	include/GL/glprocs.h	1544;"	d
glPointParameterfSGIS	include/GL/glprocs.h	1546;"	d
glPointParameterfv	include/GL/glprocs.h	1209;"	d
glPointParameterfvARB	include/GL/glprocs.h	1311;"	d
glPointParameterfvEXT	include/GL/glprocs.h	1545;"	d
glPointParameterfvSGIS	include/GL/glprocs.h	1547;"	d
glPointParameteri	include/GL/glprocs.h	1210;"	d
glPointParameteriNV	include/GL/glprocs.h	2000;"	d
glPointParameteriv	include/GL/glprocs.h	1211;"	d
glPointParameterivNV	include/GL/glprocs.h	2001;"	d
glPollAsyncSGIX	include/GL/glprocs.h	1613;"	d
glPollInstrumentsSGIX	include/GL/glprocs.h	1550;"	d
glPolygonOffsetEXT	include/GL/glprocs.h	1467;"	d
glPrimitiveRestartIndexNV	include/GL/glprocs.h	2079;"	d
glPrimitiveRestartNV	include/GL/glprocs.h	2078;"	d
glPrioritizeTexturesEXT	include/GL/glprocs.h	1523;"	d
glProgramEnvParameter4dARB	include/GL/glprocs.h	1386;"	d
glProgramEnvParameter4dvARB	include/GL/glprocs.h	1387;"	d
glProgramEnvParameter4fARB	include/GL/glprocs.h	1388;"	d
glProgramEnvParameter4fvARB	include/GL/glprocs.h	1389;"	d
glProgramLocalParameter4dARB	include/GL/glprocs.h	1390;"	d
glProgramLocalParameter4dvARB	include/GL/glprocs.h	1391;"	d
glProgramLocalParameter4fARB	include/GL/glprocs.h	1392;"	d
glProgramLocalParameter4fvARB	include/GL/glprocs.h	1393;"	d
glProgramNamedParameter4dNV	include/GL/glprocs.h	2025;"	d
glProgramNamedParameter4dvNV	include/GL/glprocs.h	2027;"	d
glProgramNamedParameter4fNV	include/GL/glprocs.h	2024;"	d
glProgramNamedParameter4fvNV	include/GL/glprocs.h	2026;"	d
glProgramParameter4dNV	include/GL/glprocs.h	1822;"	d
glProgramParameter4dvNV	include/GL/glprocs.h	1823;"	d
glProgramParameter4fNV	include/GL/glprocs.h	1824;"	d
glProgramParameter4fvNV	include/GL/glprocs.h	1825;"	d
glProgramParameters4dvNV	include/GL/glprocs.h	1826;"	d
glProgramParameters4fvNV	include/GL/glprocs.h	1827;"	d
glProgramStringARB	include/GL/glprocs.h	1382;"	d
glReadInstrumentsSGIX	include/GL/glprocs.h	1551;"	d
glReferencePlaneSGIX	include/GL/glprocs.h	1560;"	d
glReplacementCodePointerSUN	include/GL/glprocs.h	1687;"	d
glReplacementCodeubSUN	include/GL/glprocs.h	1683;"	d
glReplacementCodeubvSUN	include/GL/glprocs.h	1686;"	d
glReplacementCodeuiColor3fVertex3fSUN	include/GL/glprocs.h	1716;"	d
glReplacementCodeuiColor3fVertex3fvSUN	include/GL/glprocs.h	1717;"	d
glReplacementCodeuiColor4fNormal3fVertex3fSUN	include/GL/glprocs.h	1720;"	d
glReplacementCodeuiColor4fNormal3fVertex3fvSUN	include/GL/glprocs.h	1721;"	d
glReplacementCodeuiColor4ubVertex3fSUN	include/GL/glprocs.h	1714;"	d
glReplacementCodeuiColor4ubVertex3fvSUN	include/GL/glprocs.h	1715;"	d
glReplacementCodeuiNormal3fVertex3fSUN	include/GL/glprocs.h	1718;"	d
glReplacementCodeuiNormal3fVertex3fvSUN	include/GL/glprocs.h	1719;"	d
glReplacementCodeuiSUN	include/GL/glprocs.h	1681;"	d
glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN	include/GL/glprocs.h	1726;"	d
glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN	include/GL/glprocs.h	1727;"	d
glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN	include/GL/glprocs.h	1724;"	d
glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN	include/GL/glprocs.h	1725;"	d
glReplacementCodeuiTexCoord2fVertex3fSUN	include/GL/glprocs.h	1722;"	d
glReplacementCodeuiTexCoord2fVertex3fvSUN	include/GL/glprocs.h	1723;"	d
glReplacementCodeuiVertex3fSUN	include/GL/glprocs.h	1712;"	d
glReplacementCodeuiVertex3fvSUN	include/GL/glprocs.h	1713;"	d
glReplacementCodeuivSUN	include/GL/glprocs.h	1684;"	d
glReplacementCodeusSUN	include/GL/glprocs.h	1682;"	d
glReplacementCodeusvSUN	include/GL/glprocs.h	1685;"	d
glRequestResidentProgramsNV	include/GL/glprocs.h	1828;"	d
glResetHistogram	include/GL/glprocs.h	1149;"	d
glResetHistogramEXT	include/GL/glprocs.h	1487;"	d
glResetMinmax	include/GL/glprocs.h	1150;"	d
glResetMinmaxEXT	include/GL/glprocs.h	1488;"	d
glResizeBuffersMESA	include/GL/glprocs.h	1748;"	d
glSampleCoverage	include/GL/glprocs.h	1192;"	d
glSampleCoverageARB	include/GL/glprocs.h	1302;"	d
glSampleMapATI	include/GL/glprocs.h	1880;"	d
glSampleMaskEXT	include/GL/glprocs.h	1784;"	d
glSampleMaskSGIS	include/GL/glprocs.h	1528;"	d
glSamplePatternEXT	include/GL/glprocs.h	1785;"	d
glSamplePatternSGIS	include/GL/glprocs.h	1529;"	d
glSecondaryColor3b	include/GL/glprocs.h	1212;"	d
glSecondaryColor3bEXT	include/GL/glprocs.h	1625;"	d
glSecondaryColor3bv	include/GL/glprocs.h	1213;"	d
glSecondaryColor3bvEXT	include/GL/glprocs.h	1626;"	d
glSecondaryColor3d	include/GL/glprocs.h	1214;"	d
glSecondaryColor3dEXT	include/GL/glprocs.h	1627;"	d
glSecondaryColor3dv	include/GL/glprocs.h	1215;"	d
glSecondaryColor3dvEXT	include/GL/glprocs.h	1628;"	d
glSecondaryColor3f	include/GL/glprocs.h	1216;"	d
glSecondaryColor3fEXT	include/GL/glprocs.h	1629;"	d
glSecondaryColor3fv	include/GL/glprocs.h	1217;"	d
glSecondaryColor3fvEXT	include/GL/glprocs.h	1630;"	d
glSecondaryColor3hNV	include/GL/glprocs.h	2060;"	d
glSecondaryColor3hvNV	include/GL/glprocs.h	2061;"	d
glSecondaryColor3i	include/GL/glprocs.h	1218;"	d
glSecondaryColor3iEXT	include/GL/glprocs.h	1631;"	d
glSecondaryColor3iv	include/GL/glprocs.h	1219;"	d
glSecondaryColor3ivEXT	include/GL/glprocs.h	1632;"	d
glSecondaryColor3s	include/GL/glprocs.h	1220;"	d
glSecondaryColor3sEXT	include/GL/glprocs.h	1633;"	d
glSecondaryColor3sv	include/GL/glprocs.h	1221;"	d
glSecondaryColor3svEXT	include/GL/glprocs.h	1634;"	d
glSecondaryColor3ub	include/GL/glprocs.h	1222;"	d
glSecondaryColor3ubEXT	include/GL/glprocs.h	1635;"	d
glSecondaryColor3ubv	include/GL/glprocs.h	1223;"	d
glSecondaryColor3ubvEXT	include/GL/glprocs.h	1636;"	d
glSecondaryColor3ui	include/GL/glprocs.h	1224;"	d
glSecondaryColor3uiEXT	include/GL/glprocs.h	1637;"	d
glSecondaryColor3uiv	include/GL/glprocs.h	1225;"	d
glSecondaryColor3uivEXT	include/GL/glprocs.h	1638;"	d
glSecondaryColor3us	include/GL/glprocs.h	1226;"	d
glSecondaryColor3usEXT	include/GL/glprocs.h	1639;"	d
glSecondaryColor3usv	include/GL/glprocs.h	1227;"	d
glSecondaryColor3usvEXT	include/GL/glprocs.h	1640;"	d
glSecondaryColorPointer	include/GL/glprocs.h	1228;"	d
glSecondaryColorPointerEXT	include/GL/glprocs.h	1641;"	d
glSecondaryColorPointerListIBM	include/GL/glprocs.h	1776;"	d
glSeparableFilter2D	include/GL/glprocs.h	1140;"	d
glSeparableFilter2DEXT	include/GL/glprocs.h	1501;"	d
glSetFenceAPPLE	include/GL/glprocs.h	2010;"	d
glSetFenceNV	include/GL/glprocs.h	1794;"	d
glSetFragmentShaderConstantATI	include/GL/glprocs.h	1887;"	d
glSetInvariantEXT	include/GL/glprocs.h	1915;"	d
glSetLocalConstantEXT	include/GL/glprocs.h	1916;"	d
glShaderOp1EXT	include/GL/glprocs.h	1907;"	d
glShaderOp2EXT	include/GL/glprocs.h	1908;"	d
glShaderOp3EXT	include/GL/glprocs.h	1909;"	d
glShaderSourceARB	include/GL/glprocs.h	1428;"	d
glSharpenTexFuncSGIS	include/GL/glprocs.h	1526;"	d
glSpriteParameterfSGIX	include/GL/glprocs.h	1540;"	d
glSpriteParameterfvSGIX	include/GL/glprocs.h	1541;"	d
glSpriteParameteriSGIX	include/GL/glprocs.h	1542;"	d
glSpriteParameterivSGIX	include/GL/glprocs.h	1543;"	d
glStartInstrumentsSGIX	include/GL/glprocs.h	1552;"	d
glStencilFuncSeparateATI	include/GL/glprocs.h	2083;"	d
glStencilOpSeparateATI	include/GL/glprocs.h	2082;"	d
glStopInstrumentsSGIX	include/GL/glprocs.h	1553;"	d
glSwizzleEXT	include/GL/glprocs.h	1910;"	d
glTagSampleBufferSGIX	include/GL/glprocs.h	1555;"	d
glTangent3bEXT	include/GL/glprocs.h	1650;"	d
glTangent3bvEXT	include/GL/glprocs.h	1651;"	d
glTangent3dEXT	include/GL/glprocs.h	1652;"	d
glTangent3dvEXT	include/GL/glprocs.h	1653;"	d
glTangent3fEXT	include/GL/glprocs.h	1654;"	d
glTangent3fvEXT	include/GL/glprocs.h	1655;"	d
glTangent3iEXT	include/GL/glprocs.h	1656;"	d
glTangent3ivEXT	include/GL/glprocs.h	1657;"	d
glTangent3sEXT	include/GL/glprocs.h	1658;"	d
glTangent3svEXT	include/GL/glprocs.h	1659;"	d
glTangentPointerEXT	include/GL/glprocs.h	1670;"	d
glTbufferMask3DFX	include/GL/glprocs.h	1783;"	d
glTestFenceAPPLE	include/GL/glprocs.h	2012;"	d
glTestFenceNV	include/GL/glprocs.h	1791;"	d
glTestObjectAPPLE	include/GL/glprocs.h	2014;"	d
glTexBumpParameterfvATI	include/GL/glprocs.h	1871;"	d
glTexBumpParameterivATI	include/GL/glprocs.h	1870;"	d
glTexCoord1hNV	include/GL/glprocs.h	2042;"	d
glTexCoord1hvNV	include/GL/glprocs.h	2043;"	d
glTexCoord2fColor3fVertex3fSUN	include/GL/glprocs.h	1704;"	d
glTexCoord2fColor3fVertex3fvSUN	include/GL/glprocs.h	1705;"	d
glTexCoord2fColor4fNormal3fVertex3fSUN	include/GL/glprocs.h	1708;"	d
glTexCoord2fColor4fNormal3fVertex3fvSUN	include/GL/glprocs.h	1709;"	d
glTexCoord2fColor4ubVertex3fSUN	include/GL/glprocs.h	1702;"	d
glTexCoord2fColor4ubVertex3fvSUN	include/GL/glprocs.h	1703;"	d
glTexCoord2fNormal3fVertex3fSUN	include/GL/glprocs.h	1706;"	d
glTexCoord2fNormal3fVertex3fvSUN	include/GL/glprocs.h	1707;"	d
glTexCoord2fVertex3fSUN	include/GL/glprocs.h	1698;"	d
glTexCoord2fVertex3fvSUN	include/GL/glprocs.h	1699;"	d
glTexCoord2hNV	include/GL/glprocs.h	2044;"	d
glTexCoord2hvNV	include/GL/glprocs.h	2045;"	d
glTexCoord3hNV	include/GL/glprocs.h	2046;"	d
glTexCoord3hvNV	include/GL/glprocs.h	2047;"	d
glTexCoord4fColor4fNormal3fVertex4fSUN	include/GL/glprocs.h	1710;"	d
glTexCoord4fColor4fNormal3fVertex4fvSUN	include/GL/glprocs.h	1711;"	d
glTexCoord4fVertex4fSUN	include/GL/glprocs.h	1700;"	d
glTexCoord4fVertex4fvSUN	include/GL/glprocs.h	1701;"	d
glTexCoord4hNV	include/GL/glprocs.h	2048;"	d
glTexCoord4hvNV	include/GL/glprocs.h	2049;"	d
glTexCoordPointerEXT	include/GL/glprocs.h	1537;"	d
glTexCoordPointerListIBM	include/GL/glprocs.h	1781;"	d
glTexCoordPointervINTEL	include/GL/glprocs.h	1620;"	d
glTexFilterFuncSGIS	include/GL/glprocs.h	1471;"	d
glTexImage3D	include/GL/glprocs.h	1151;"	d
glTexImage3DEXT	include/GL/glprocs.h	1468;"	d
glTexImage4DSGIS	include/GL/glprocs.h	1516;"	d
glTexSubImage1DEXT	include/GL/glprocs.h	1472;"	d
glTexSubImage2DEXT	include/GL/glprocs.h	1473;"	d
glTexSubImage3D	include/GL/glprocs.h	1152;"	d
glTexSubImage3DEXT	include/GL/glprocs.h	1469;"	d
glTexSubImage4DSGIS	include/GL/glprocs.h	1517;"	d
glTextureColorMaskSGIS	include/GL/glprocs.h	1786;"	d
glTextureLightEXT	include/GL/glprocs.h	1609;"	d
glTextureMaterialEXT	include/GL/glprocs.h	1610;"	d
glTextureNormalEXT	include/GL/glprocs.h	1642;"	d
glTrackMatrixNV	include/GL/glprocs.h	1829;"	d
glUniform1fARB	include/GL/glprocs.h	1435;"	d
glUniform1fvARB	include/GL/glprocs.h	1443;"	d
glUniform1iARB	include/GL/glprocs.h	1439;"	d
glUniform1ivARB	include/GL/glprocs.h	1447;"	d
glUniform2fARB	include/GL/glprocs.h	1436;"	d
glUniform2fvARB	include/GL/glprocs.h	1444;"	d
glUniform2iARB	include/GL/glprocs.h	1440;"	d
glUniform2ivARB	include/GL/glprocs.h	1448;"	d
glUniform3fARB	include/GL/glprocs.h	1437;"	d
glUniform3fvARB	include/GL/glprocs.h	1445;"	d
glUniform3iARB	include/GL/glprocs.h	1441;"	d
glUniform3ivARB	include/GL/glprocs.h	1449;"	d
glUniform4fARB	include/GL/glprocs.h	1438;"	d
glUniform4fvARB	include/GL/glprocs.h	1446;"	d
glUniform4iARB	include/GL/glprocs.h	1442;"	d
glUniform4ivARB	include/GL/glprocs.h	1450;"	d
glUniformMatrix2fvARB	include/GL/glprocs.h	1451;"	d
glUniformMatrix3fvARB	include/GL/glprocs.h	1452;"	d
glUniformMatrix4fvARB	include/GL/glprocs.h	1453;"	d
glUnlockArraysEXT	include/GL/glprocs.h	1586;"	d
glUnmapBuffer	include/GL/glprocs.h	1261;"	d
glUnmapBufferARB	include/GL/glprocs.h	1413;"	d
glUnmapObjectBufferATI	include/GL/glprocs.h	2081;"	d
glUpdateObjectBufferATI	include/GL/glprocs.h	1892;"	d
glUseProgramObjectARB	include/GL/glprocs.h	1433;"	d
glValidateProgramARB	include/GL/glprocs.h	1434;"	d
glVariantArrayObjectATI	include/GL/glprocs.h	1899;"	d
glVariantPointerEXT	include/GL/glprocs.h	1925;"	d
glVariantbvEXT	include/GL/glprocs.h	1917;"	d
glVariantdvEXT	include/GL/glprocs.h	1921;"	d
glVariantfvEXT	include/GL/glprocs.h	1920;"	d
glVariantivEXT	include/GL/glprocs.h	1919;"	d
glVariantsvEXT	include/GL/glprocs.h	1918;"	d
glVariantubvEXT	include/GL/glprocs.h	1922;"	d
glVariantuivEXT	include/GL/glprocs.h	1924;"	d
glVariantusvEXT	include/GL/glprocs.h	1923;"	d
glVertex2hNV	include/GL/glprocs.h	2030;"	d
glVertex2hvNV	include/GL/glprocs.h	2031;"	d
glVertex3hNV	include/GL/glprocs.h	2032;"	d
glVertex3hvNV	include/GL/glprocs.h	2033;"	d
glVertex4hNV	include/GL/glprocs.h	2034;"	d
glVertex4hvNV	include/GL/glprocs.h	2035;"	d
glVertexArrayParameteriAPPLE	include/GL/glprocs.h	2022;"	d
glVertexArrayRangeAPPLE	include/GL/glprocs.h	2020;"	d
glVertexArrayRangeNV	include/GL/glprocs.h	1734;"	d
glVertexAttrib1dARB	include/GL/glprocs.h	1343;"	d
glVertexAttrib1dNV	include/GL/glprocs.h	1831;"	d
glVertexAttrib1dvARB	include/GL/glprocs.h	1344;"	d
glVertexAttrib1dvNV	include/GL/glprocs.h	1832;"	d
glVertexAttrib1fARB	include/GL/glprocs.h	1345;"	d
glVertexAttrib1fNV	include/GL/glprocs.h	1833;"	d
glVertexAttrib1fvARB	include/GL/glprocs.h	1346;"	d
glVertexAttrib1fvNV	include/GL/glprocs.h	1834;"	d
glVertexAttrib1hNV	include/GL/glprocs.h	2064;"	d
glVertexAttrib1hvNV	include/GL/glprocs.h	2065;"	d
glVertexAttrib1sARB	include/GL/glprocs.h	1347;"	d
glVertexAttrib1sNV	include/GL/glprocs.h	1835;"	d
glVertexAttrib1svARB	include/GL/glprocs.h	1348;"	d
glVertexAttrib1svNV	include/GL/glprocs.h	1836;"	d
glVertexAttrib2dARB	include/GL/glprocs.h	1349;"	d
glVertexAttrib2dNV	include/GL/glprocs.h	1837;"	d
glVertexAttrib2dvARB	include/GL/glprocs.h	1350;"	d
glVertexAttrib2dvNV	include/GL/glprocs.h	1838;"	d
glVertexAttrib2fARB	include/GL/glprocs.h	1351;"	d
glVertexAttrib2fNV	include/GL/glprocs.h	1839;"	d
glVertexAttrib2fvARB	include/GL/glprocs.h	1352;"	d
glVertexAttrib2fvNV	include/GL/glprocs.h	1840;"	d
glVertexAttrib2hNV	include/GL/glprocs.h	2066;"	d
glVertexAttrib2hvNV	include/GL/glprocs.h	2067;"	d
glVertexAttrib2sARB	include/GL/glprocs.h	1353;"	d
glVertexAttrib2sNV	include/GL/glprocs.h	1841;"	d
glVertexAttrib2svARB	include/GL/glprocs.h	1354;"	d
glVertexAttrib2svNV	include/GL/glprocs.h	1842;"	d
glVertexAttrib3dARB	include/GL/glprocs.h	1355;"	d
glVertexAttrib3dNV	include/GL/glprocs.h	1843;"	d
glVertexAttrib3dvARB	include/GL/glprocs.h	1356;"	d
glVertexAttrib3dvNV	include/GL/glprocs.h	1844;"	d
glVertexAttrib3fARB	include/GL/glprocs.h	1357;"	d
glVertexAttrib3fNV	include/GL/glprocs.h	1845;"	d
glVertexAttrib3fvARB	include/GL/glprocs.h	1358;"	d
glVertexAttrib3fvNV	include/GL/glprocs.h	1846;"	d
glVertexAttrib3hNV	include/GL/glprocs.h	2068;"	d
glVertexAttrib3hvNV	include/GL/glprocs.h	2069;"	d
glVertexAttrib3sARB	include/GL/glprocs.h	1359;"	d
glVertexAttrib3sNV	include/GL/glprocs.h	1847;"	d
glVertexAttrib3svARB	include/GL/glprocs.h	1360;"	d
glVertexAttrib3svNV	include/GL/glprocs.h	1848;"	d
glVertexAttrib4NbvARB	include/GL/glprocs.h	1361;"	d
glVertexAttrib4NivARB	include/GL/glprocs.h	1362;"	d
glVertexAttrib4NsvARB	include/GL/glprocs.h	1363;"	d
glVertexAttrib4NubARB	include/GL/glprocs.h	1364;"	d
glVertexAttrib4NubvARB	include/GL/glprocs.h	1365;"	d
glVertexAttrib4NuivARB	include/GL/glprocs.h	1366;"	d
glVertexAttrib4NusvARB	include/GL/glprocs.h	1367;"	d
glVertexAttrib4bvARB	include/GL/glprocs.h	1368;"	d
glVertexAttrib4dARB	include/GL/glprocs.h	1369;"	d
glVertexAttrib4dNV	include/GL/glprocs.h	1849;"	d
glVertexAttrib4dvARB	include/GL/glprocs.h	1370;"	d
glVertexAttrib4dvNV	include/GL/glprocs.h	1850;"	d
glVertexAttrib4fARB	include/GL/glprocs.h	1371;"	d
glVertexAttrib4fNV	include/GL/glprocs.h	1851;"	d
glVertexAttrib4fvARB	include/GL/glprocs.h	1372;"	d
glVertexAttrib4fvNV	include/GL/glprocs.h	1852;"	d
glVertexAttrib4hNV	include/GL/glprocs.h	2070;"	d
glVertexAttrib4hvNV	include/GL/glprocs.h	2071;"	d
glVertexAttrib4ivARB	include/GL/glprocs.h	1373;"	d
glVertexAttrib4sARB	include/GL/glprocs.h	1374;"	d
glVertexAttrib4sNV	include/GL/glprocs.h	1853;"	d
glVertexAttrib4svARB	include/GL/glprocs.h	1375;"	d
glVertexAttrib4svNV	include/GL/glprocs.h	1854;"	d
glVertexAttrib4ubNV	include/GL/glprocs.h	1855;"	d
glVertexAttrib4ubvARB	include/GL/glprocs.h	1376;"	d
glVertexAttrib4ubvNV	include/GL/glprocs.h	1856;"	d
glVertexAttrib4uivARB	include/GL/glprocs.h	1377;"	d
glVertexAttrib4usvARB	include/GL/glprocs.h	1378;"	d
glVertexAttribArrayObjectATI	include/GL/glprocs.h	2084;"	d
glVertexAttribPointerARB	include/GL/glprocs.h	1379;"	d
glVertexAttribPointerNV	include/GL/glprocs.h	1830;"	d
glVertexAttribs1dvNV	include/GL/glprocs.h	1857;"	d
glVertexAttribs1fvNV	include/GL/glprocs.h	1858;"	d
glVertexAttribs1hvNV	include/GL/glprocs.h	2072;"	d
glVertexAttribs1svNV	include/GL/glprocs.h	1859;"	d
glVertexAttribs2dvNV	include/GL/glprocs.h	1860;"	d
glVertexAttribs2fvNV	include/GL/glprocs.h	1861;"	d
glVertexAttribs2hvNV	include/GL/glprocs.h	2073;"	d
glVertexAttribs2svNV	include/GL/glprocs.h	1862;"	d
glVertexAttribs3dvNV	include/GL/glprocs.h	1863;"	d
glVertexAttribs3fvNV	include/GL/glprocs.h	1864;"	d
glVertexAttribs3hvNV	include/GL/glprocs.h	2074;"	d
glVertexAttribs3svNV	include/GL/glprocs.h	1865;"	d
glVertexAttribs4dvNV	include/GL/glprocs.h	1866;"	d
glVertexAttribs4fvNV	include/GL/glprocs.h	1867;"	d
glVertexAttribs4hvNV	include/GL/glprocs.h	2075;"	d
glVertexAttribs4svNV	include/GL/glprocs.h	1868;"	d
glVertexAttribs4ubvNV	include/GL/glprocs.h	1869;"	d
glVertexBlendARB	include/GL/glprocs.h	1321;"	d
glVertexBlendEnvfATI	include/GL/glprocs.h	1988;"	d
glVertexBlendEnviATI	include/GL/glprocs.h	1987;"	d
glVertexPointerEXT	include/GL/glprocs.h	1538;"	d
glVertexPointerListIBM	include/GL/glprocs.h	1782;"	d
glVertexPointervINTEL	include/GL/glprocs.h	1617;"	d
glVertexStream1dATI	include/GL/glprocs.h	1950;"	d
glVertexStream1dvATI	include/GL/glprocs.h	1951;"	d
glVertexStream1fATI	include/GL/glprocs.h	1948;"	d
glVertexStream1fvATI	include/GL/glprocs.h	1949;"	d
glVertexStream1iATI	include/GL/glprocs.h	1946;"	d
glVertexStream1ivATI	include/GL/glprocs.h	1947;"	d
glVertexStream1sATI	include/GL/glprocs.h	1944;"	d
glVertexStream1svATI	include/GL/glprocs.h	1945;"	d
glVertexStream2dATI	include/GL/glprocs.h	1958;"	d
glVertexStream2dvATI	include/GL/glprocs.h	1959;"	d
glVertexStream2fATI	include/GL/glprocs.h	1956;"	d
glVertexStream2fvATI	include/GL/glprocs.h	1957;"	d
glVertexStream2iATI	include/GL/glprocs.h	1954;"	d
glVertexStream2ivATI	include/GL/glprocs.h	1955;"	d
glVertexStream2sATI	include/GL/glprocs.h	1952;"	d
glVertexStream2svATI	include/GL/glprocs.h	1953;"	d
glVertexStream3dATI	include/GL/glprocs.h	1966;"	d
glVertexStream3dvATI	include/GL/glprocs.h	1967;"	d
glVertexStream3fATI	include/GL/glprocs.h	1964;"	d
glVertexStream3fvATI	include/GL/glprocs.h	1965;"	d
glVertexStream3iATI	include/GL/glprocs.h	1962;"	d
glVertexStream3ivATI	include/GL/glprocs.h	1963;"	d
glVertexStream3sATI	include/GL/glprocs.h	1960;"	d
glVertexStream3svATI	include/GL/glprocs.h	1961;"	d
glVertexStream4dATI	include/GL/glprocs.h	1974;"	d
glVertexStream4dvATI	include/GL/glprocs.h	1975;"	d
glVertexStream4fATI	include/GL/glprocs.h	1972;"	d
glVertexStream4fvATI	include/GL/glprocs.h	1973;"	d
glVertexStream4iATI	include/GL/glprocs.h	1970;"	d
glVertexStream4ivATI	include/GL/glprocs.h	1971;"	d
glVertexStream4sATI	include/GL/glprocs.h	1968;"	d
glVertexStream4svATI	include/GL/glprocs.h	1969;"	d
glVertexWeightPointerEXT	include/GL/glprocs.h	1732;"	d
glVertexWeightfEXT	include/GL/glprocs.h	1730;"	d
glVertexWeightfvEXT	include/GL/glprocs.h	1731;"	d
glVertexWeighthNV	include/GL/glprocs.h	2062;"	d
glVertexWeighthvNV	include/GL/glprocs.h	2063;"	d
glWeightPointerARB	include/GL/glprocs.h	1320;"	d
glWeightbvARB	include/GL/glprocs.h	1312;"	d
glWeightdvARB	include/GL/glprocs.h	1316;"	d
glWeightfvARB	include/GL/glprocs.h	1315;"	d
glWeightivARB	include/GL/glprocs.h	1314;"	d
glWeightsvARB	include/GL/glprocs.h	1313;"	d
glWeightubvARB	include/GL/glprocs.h	1317;"	d
glWeightuivARB	include/GL/glprocs.h	1319;"	d
glWeightusvARB	include/GL/glprocs.h	1318;"	d
glWindowPos2d	include/GL/glprocs.h	1229;"	d
glWindowPos2dARB	include/GL/glprocs.h	1327;"	d
glWindowPos2dMESA	include/GL/glprocs.h	1749;"	d
glWindowPos2dv	include/GL/glprocs.h	1230;"	d
glWindowPos2dvARB	include/GL/glprocs.h	1328;"	d
glWindowPos2dvMESA	include/GL/glprocs.h	1750;"	d
glWindowPos2f	include/GL/glprocs.h	1231;"	d
glWindowPos2fARB	include/GL/glprocs.h	1329;"	d
glWindowPos2fMESA	include/GL/glprocs.h	1751;"	d
glWindowPos2fv	include/GL/glprocs.h	1232;"	d
glWindowPos2fvARB	include/GL/glprocs.h	1330;"	d
glWindowPos2fvMESA	include/GL/glprocs.h	1752;"	d
glWindowPos2i	include/GL/glprocs.h	1233;"	d
glWindowPos2iARB	include/GL/glprocs.h	1331;"	d
glWindowPos2iMESA	include/GL/glprocs.h	1753;"	d
glWindowPos2iv	include/GL/glprocs.h	1234;"	d
glWindowPos2ivARB	include/GL/glprocs.h	1332;"	d
glWindowPos2ivMESA	include/GL/glprocs.h	1754;"	d
glWindowPos2s	include/GL/glprocs.h	1235;"	d
glWindowPos2sARB	include/GL/glprocs.h	1333;"	d
glWindowPos2sMESA	include/GL/glprocs.h	1755;"	d
glWindowPos2sv	include/GL/glprocs.h	1236;"	d
glWindowPos2svARB	include/GL/glprocs.h	1334;"	d
glWindowPos2svMESA	include/GL/glprocs.h	1756;"	d
glWindowPos3d	include/GL/glprocs.h	1237;"	d
glWindowPos3dARB	include/GL/glprocs.h	1335;"	d
glWindowPos3dMESA	include/GL/glprocs.h	1757;"	d
glWindowPos3dv	include/GL/glprocs.h	1238;"	d
glWindowPos3dvARB	include/GL/glprocs.h	1336;"	d
glWindowPos3dvMESA	include/GL/glprocs.h	1758;"	d
glWindowPos3f	include/GL/glprocs.h	1239;"	d
glWindowPos3fARB	include/GL/glprocs.h	1337;"	d
glWindowPos3fMESA	include/GL/glprocs.h	1759;"	d
glWindowPos3fv	include/GL/glprocs.h	1240;"	d
glWindowPos3fvARB	include/GL/glprocs.h	1338;"	d
glWindowPos3fvMESA	include/GL/glprocs.h	1760;"	d
glWindowPos3i	include/GL/glprocs.h	1241;"	d
glWindowPos3iARB	include/GL/glprocs.h	1339;"	d
glWindowPos3iMESA	include/GL/glprocs.h	1761;"	d
glWindowPos3iv	include/GL/glprocs.h	1242;"	d
glWindowPos3ivARB	include/GL/glprocs.h	1340;"	d
glWindowPos3ivMESA	include/GL/glprocs.h	1762;"	d
glWindowPos3s	include/GL/glprocs.h	1243;"	d
glWindowPos3sARB	include/GL/glprocs.h	1341;"	d
glWindowPos3sMESA	include/GL/glprocs.h	1763;"	d
glWindowPos3sv	include/GL/glprocs.h	1244;"	d
glWindowPos3svARB	include/GL/glprocs.h	1342;"	d
glWindowPos3svMESA	include/GL/glprocs.h	1764;"	d
glWindowPos4dMESA	include/GL/glprocs.h	1765;"	d
glWindowPos4dvMESA	include/GL/glprocs.h	1766;"	d
glWindowPos4fMESA	include/GL/glprocs.h	1767;"	d
glWindowPos4fvMESA	include/GL/glprocs.h	1768;"	d
glWindowPos4iMESA	include/GL/glprocs.h	1769;"	d
glWindowPos4ivMESA	include/GL/glprocs.h	1770;"	d
glWindowPos4sMESA	include/GL/glprocs.h	1771;"	d
glWindowPos4svMESA	include/GL/glprocs.h	1772;"	d
glWriteMaskEXT	include/GL/glprocs.h	1911;"	d
glutBitmap8By13	include/GL/glut.h	/^GLUTAPI void *glutBitmap8By13;$/;"	v
glutBitmap9By15	include/GL/glut.h	/^GLUTAPI void *glutBitmap9By15;$/;"	v
glutBitmapHelvetica10	include/GL/glut.h	/^GLUTAPI void *glutBitmapHelvetica10;$/;"	v
glutBitmapHelvetica12	include/GL/glut.h	/^GLUTAPI void *glutBitmapHelvetica12;$/;"	v
glutBitmapHelvetica18	include/GL/glut.h	/^GLUTAPI void *glutBitmapHelvetica18;$/;"	v
glutBitmapTimesRoman10	include/GL/glut.h	/^GLUTAPI void *glutBitmapTimesRoman10;$/;"	v
glutBitmapTimesRoman24	include/GL/glut.h	/^GLUTAPI void *glutBitmapTimesRoman24;$/;"	v
glutCreateMenu	include/GL/glut.h	550;"	d
glutCreateMenu_ATEXIT_HACK	include/GL/glut.h	/^static int APIENTRY glutCreateMenu_ATEXIT_HACK(void (GLUTCALLBACK *func)(int)) { return __glutCreateMenuWithExit(func, exit); }$/;"	f
glutCreateWindow	include/GL/glut.h	504;"	d
glutCreateWindow_ATEXIT_HACK	include/GL/glut.h	/^static int APIENTRY glutCreateWindow_ATEXIT_HACK(const char *title) { return __glutCreateWindowWithExit(title, exit); }$/;"	f
glutInit	include/GL/glut.h	487;"	d
glutInit_ATEXIT_HACK	include/GL/glut.h	/^static void APIENTRY glutInit_ATEXIT_HACK(int *argcp, char **argv) { __glutInitWithExit(argcp, argv, exit); }$/;"	f
glutStrokeMonoRoman	include/GL/glut.h	/^GLUTAPI void *glutStrokeMonoRoman;$/;"	v
glutStrokeRoman	include/GL/glut.h	/^GLUTAPI void *glutStrokeRoman;$/;"	v
gray	include/png.h	/^   png_byte gray;  \/* for use in grayscale files *\/$/;"	m	struct:png_color_8_struct
gray	include/png.h	/^   png_uint_16 gray;  \/* for use in grayscale files *\/$/;"	m	struct:png_color_16_struct
green	include/png.h	/^   png_byte green;$/;"	m	struct:png_color_8_struct
green	include/png.h	/^   png_byte green;$/;"	m	struct:png_color_struct
green	include/png.h	/^   png_uint_16 green;$/;"	m	struct:png_color_16_struct
green	include/png.h	/^   png_uint_16 green;$/;"	m	struct:png_sPLT_entry_struct
gzFile	include/zlib.h	/^typedef voidp gzFile;$/;"	t
gz_header	include/zlib.h	/^} gz_header;$/;"	t	typeref:struct:gz_header_s
gz_header_s	include/zlib.h	/^typedef struct gz_header_s {$/;"	s
gz_headerp	include/zlib.h	/^typedef gz_header FAR *gz_headerp;$/;"	t
hcrc	include/zlib.h	/^    int     hcrc;       \/* true if there was or will be a header crc *\/$/;"	m	struct:gz_header_s
height	Rectangle.h	/^    float height;$/;"	m	class:Rectangle
height	include/png.h	/^   png_uint_32 height;        \/* height of image in pixels *\/$/;"	m	struct:png_struct_def
height	include/png.h	/^   png_uint_32 height;      \/* height of image in pixels (from IHDR) *\/$/;"	m	struct:png_info_struct
heuristic_method	include/png.h	/^   png_byte heuristic_method;        \/* heuristic for row filter selection *\/$/;"	m	struct:png_struct_def
hist	include/png.h	/^   png_uint_16p hist;                \/* histogram *\/$/;"	m	struct:png_struct_def
hist	include/png.h	/^   png_uint_16p hist;$/;"	m	struct:png_info_struct
hmx	particles/TinkerToy.cpp	/^static int hmx, hmy;$/;"	v	file:
hmy	particles/TinkerToy.cpp	/^static int hmx, hmy;$/;"	v	file:
hour	include/png.h	/^   png_byte hour;    \/* hour of day, 0 - 23 *\/$/;"	m	struct:png_time_struct
iVector	particles/CircularWireConstraint.cpp	4;"	d	file:
iVector	particles/Constraint.h	4;"	d
iVector	particles/ConstraintSolver.cpp	6;"	d	file:
iVector	particles/RodConstraint.h	7;"	d
iccp_compression	include/png.h	/^   png_byte iccp_compression; \/* Always zero *\/$/;"	m	struct:png_info_struct
iccp_name	include/png.h	/^   png_charp iccp_name;     \/* profile name *\/$/;"	m	struct:png_info_struct
iccp_profile	include/png.h	/^   png_charp iccp_profile;  \/* International Color Consortium profile data *\/$/;"	m	struct:png_info_struct
iccp_proflen	include/png.h	/^   png_uint_32 iccp_proflen;  \/* ICC profile data length *\/$/;"	m	struct:png_info_struct
idat_size	include/png.h	/^   png_uint_32 idat_size;     \/* current IDAT size for read *\/$/;"	m	struct:png_struct_def
ident	include/gfx/mat2.h	/^    Mat2 &ident() { return diag(1.0); }$/;"	f	class:gfx::Mat2
ident	include/gfx/mat3.h	/^    Mat3 &ident() { return diag(1.0); }$/;"	f	class:gfx::Mat3
ident	include/gfx/quat.h	/^inline Quat Quat::ident() { return Quat(0, 0, 0, 1); }$/;"	f	class:gfx::Quat
idle_func	StableFluids.cpp	/^static void idle_func ( void )$/;"	f	file:
idle_func	particles/TinkerToy.cpp	/^static void idle_func(void) {$/;"	f	file:
implicitMatrix	particles/linearSolver.h	/^    implicitMatrix(std::vector<std::vector<float> > *matrix) {$/;"	f	class:implicitMatrix
implicitMatrix	particles/linearSolver.h	/^class implicitMatrix {$/;"	c
implicitMatrixWithTrans	particles/linearSolver.h	/^class implicitMatrixWithTrans : public implicitMatrix {$/;"	c
in_func	include/zconf.h	48;"	d
in_func	include/zlib.h	/^typedef unsigned (*in_func) OF((void FAR *, unsigned char FAR * FAR *));$/;"	t
index	include/gfx/symmat2.h	/^    inline int index(int i, int j) const$/;"	f	class:gfx::SymMat2
index	include/gfx/symmat3.h	/^    inline int index(int i, int j) const$/;"	f	class:gfx::SymMat3
index	include/gfx/symmat4.h	/^    inline int index(int i, int j) const$/;"	f	class:gfx::SymMat4
index	include/png.h	/^   png_byte index;    \/* used for palette files *\/$/;"	m	struct:png_color_16_struct
index_to_palette	include/png.h	/^   png_bytep index_to_palette;       \/* where the original index currently is *\/$/;"	m	struct:png_struct_def
indxRGBA	imageio.h	25;"	d
indxRGBA	particles/imageio.h	25;"	d
inertia	Rectangle.h	/^    float inertia;$/;"	m	class:Rectangle
inflate	include/zconf.h	20;"	d
inflateBack	include/zconf.h	35;"	d
inflateBackEnd	include/zconf.h	36;"	d
inflateBackInit	include/zlib.h	1340;"	d
inflateCopy	include/zconf.h	33;"	d
inflateEnd	include/zconf.h	21;"	d
inflateInit	include/zlib.h	1333;"	d
inflateInit2	include/zlib.h	1338;"	d
inflateInit2_	include/zconf.h	29;"	d
inflateInit_	include/zconf.h	19;"	d
inflateReset	include/zconf.h	34;"	d
inflateSetDictionary	include/zconf.h	30;"	d
inflateSync	include/zconf.h	31;"	d
inflateSyncPoint	include/zconf.h	32;"	d
info_fn	include/png.h	/^   png_progressive_info_ptr info_fn; \/* called after header data fully read *\/$/;"	m	struct:png_struct_def
init_system	particles/TinkerToy.cpp	/^static void init_system(void) {$/;"	f	file:
inner	Rectangle.h	/^    std::vector<int> inner;$/;"	m	class:Rectangle
int_gamma	include/png.h	/^   png_fixed_point int_gamma; \/* gamma of image, if (valid & PNG_INFO_gAMA) *\/$/;"	m	struct:png_info_struct
int_gamma	include/png.h	/^   png_fixed_point int_gamma;$/;"	m	struct:png_struct_def
int_p_NULL	include/png.h	495;"	d
int_p_NULL	include/png.h	511;"	d
int_x_blue	include/png.h	/^   png_fixed_point int_x_blue;$/;"	m	struct:png_info_struct
int_x_green	include/png.h	/^   png_fixed_point int_x_green;$/;"	m	struct:png_info_struct
int_x_red	include/png.h	/^   png_fixed_point int_x_red;$/;"	m	struct:png_info_struct
int_x_white	include/png.h	/^   png_fixed_point int_x_white;$/;"	m	struct:png_info_struct
int_y_blue	include/png.h	/^   png_fixed_point int_y_blue;$/;"	m	struct:png_info_struct
int_y_green	include/png.h	/^   png_fixed_point int_y_green;$/;"	m	struct:png_info_struct
int_y_red	include/png.h	/^   png_fixed_point int_y_red;$/;"	m	struct:png_info_struct
int_y_white	include/png.h	/^   png_fixed_point int_y_white;$/;"	m	struct:png_info_struct
interlace_type	include/png.h	/^   png_byte interlace_type; \/* One of PNG_INTERLACE_NONE, PNG_INTERLACE_ADAM7 *\/$/;"	m	struct:png_info_struct
interlaced	include/png.h	/^   png_byte interlaced;       \/* PNG_INTERLACE_NONE, PNG_INTERLACE_ADAM7 *\/$/;"	m	struct:png_struct_def
internal_state	include/zlib.h	/^    struct internal_state {int dummy;}; \/* hack for buggy compilers *\/$/;"	s
intf	include/zconf.h	/^typedef int   FAR intf;$/;"	t
intf	include/zconf.h	55;"	d
inv_filter_costs	include/png.h	/^   png_uint_16p inv_filter_costs;    \/* 1\/relative filter calculation cost *\/$/;"	m	struct:png_struct_def
inv_filter_weights	include/png.h	/^   png_uint_16p inv_filter_weights;  \/* 1\/weight(s) for previous line(s) *\/$/;"	m	struct:png_struct_def
inverse	include/gfx/quat.h	/^inline Quat inverse(const Quat& q) { return conjugate(q)\/norm(q); }$/;"	f	namespace:gfx
inverse_type	include/gfx/mat2.h	/^    typedef Mat2 inverse_type;$/;"	t	class:gfx::Mat2
inverse_type	include/gfx/mat3.h	/^    typedef Mat3 inverse_type;$/;"	t	class:gfx::Mat3
inverse_type	include/gfx/mat4.h	/^    typedef Mat4 inverse_type;$/;"	t	class:gfx::Mat4
inverse_type	include/gfx/symmat2.h	/^    typedef Mat2 inverse_type;$/;"	t	class:gfx::SymMat2
inverse_type	include/gfx/symmat3.h	/^    typedef Mat3 inverse_type;$/;"	t	class:gfx::SymMat3
inverse_type	include/gfx/symmat4.h	/^    typedef Mat4 inverse_type;$/;"	t	class:gfx::SymMat4
io_ptr	include/png.h	/^   png_voidp io_ptr;          \/* ptr to application struct for I\/O functions *\/$/;"	m	struct:png_struct_def
irowbytes	include/png.h	/^   png_uint_32 irowbytes;     \/* size of current interlaced row in bytes *\/$/;"	m	struct:png_struct_def
is_inside_bbox	include/gfx/geom3d.h	/^bool is_inside_bbox(const Vec& p, const Vec& min, Vec& max)$/;"	f	namespace:gfx
itxt_length	include/png.h	/^   png_size_t itxt_length; \/* length of the itxt string *\/$/;"	m	struct:png_text_struct
iwidth	include/png.h	/^   png_uint_32 iwidth;        \/* width of current interlaced row in pixels *\/$/;"	m	struct:png_struct_def
j	particles/CircularWireConstraint.cpp	/^std::vector< iVector > CircularWireConstraint::j() {$/;"	f	class:CircularWireConstraint
j	particles/RodConstraint.cpp	/^std::vector< iVector > RodConstraint::j() {$/;"	f	class:RodConstraint
jD	particles/CircularWireConstraint.cpp	/^std::vector< iVector > CircularWireConstraint::jD() {$/;"	f	class:CircularWireConstraint
jD	particles/RodConstraint.cpp	/^std::vector< iVector > RodConstraint::jD() {$/;"	f	class:RodConstraint
jmpbuf	include/png.h	/^   jmp_buf jmpbuf;            \/* used in png_error *\/$/;"	m	struct:png_struct_def
key	include/png.h	/^   png_charp key;          \/* keyword, 1-79 character description of "text" *\/$/;"	m	struct:png_text_struct
key_func	StableFluids.cpp	/^static void key_func(unsigned char key, int x, int y) {$/;"	f	file:
key_func	particles/TinkerToy.cpp	/^static void key_func(unsigned char key, int x, int y) {$/;"	f	file:
lang	include/png.h	/^   png_charp lang;         \/* language code, 0-79 characters$/;"	m	struct:png_text_struct
lang_key	include/png.h	/^   png_charp lang_key;     \/* keyword translated UTF-8 string, 0 or more$/;"	m	struct:png_text_struct
lin_solve	ScalarField.cpp	/^void lin_solve(int b, ScalarField *x, ScalarField *x0, float a, float c) {$/;"	f
lin_solve	VectorField.cpp	/^void lin_solve(int b, VectorField *x, VectorField *x0, int lr, int lrx, float a, float c) {$/;"	f
loadImageRGBA	imageio.cpp	/^unsigned char *loadImageRGBA(char *fileName, int *width, int *height) {$/;"	f
loadImageRGBA	particles/imageio.cpp	/^unsigned char *loadImageRGBA(char *fileName, int *width, int *height) {$/;"	f
location	include/png.h	/^    png_byte location; \/* mode of operation at read time *\/$/;"	m	struct:png_unknown_chunk_t
m	particles/linearSolver.h	/^    std::vector<std::vector<float> > *m;$/;"	m	class:implicitMatrix
m_ConstructPos	particles/Particle.h	/^	Vec2f m_ConstructPos;$/;"	m	class:Particle
m_Dt	ScalarField.h	/^	float	m_Dt;$/;"	m	class:ScalarField
m_Dt	VectorField.h	/^    float m_Dt;$/;"	m	class:VectorField
m_Field	ScalarField.h	/^	float	*m_Field;$/;"	m	class:ScalarField
m_Field	VectorField.h	/^    Vec2f *m_Field;$/;"	m	class:VectorField
m_Fixed	particles/Particle.h	/^	bool m_Fixed;$/;"	m	class:Particle
m_ForceVector	particles/Particle.h	/^	Vec2f m_ForceVector;$/;"	m	class:Particle
m_Mass	particles/Particle.h	/^	float m_Mass;$/;"	m	class:Particle
m_NumCells	ScalarField.h	/^	int		m_NumCells;$/;"	m	class:ScalarField
m_NumCells	VectorField.h	/^    int m_NumCells;$/;"	m	class:VectorField
m_Position	particles/Particle.h	/^	Vec2f m_Position;$/;"	m	class:Particle
m_Velocity	particles/Particle.h	/^	Vec2f m_Velocity;$/;"	m	class:Particle
m_Viscosity	ScalarField.h	/^	float	m_Viscosity;$/;"	m	class:ScalarField
m_Viscosity	VectorField.h	/^    float m_Viscosity;$/;"	m	class:VectorField
m_angle	particles/AngularForce.h	/^    double const m_angle;    \/\/ rest angle in degrees$/;"	m	class:AngularForce
m_center	particles/CircularWireConstraint.h	/^    Vec2f const m_center;$/;"	m	class:CircularWireConstraint
m_dist	particles/MouseForce.h	/^	double const m_dist;     \/\/ rest length$/;"	m	class:MouseForce
m_dist	particles/RodConstraint.h	/^    double const m_dist;$/;"	m	class:RodConstraint
m_dist	particles/SpringForce.h	/^  double const m_dist;     \/\/ rest length$/;"	m	class:SpringForce
m_ids	particles/CircularWireConstraint.h	/^    std::vector<int> m_ids;$/;"	m	class:CircularWireConstraint
m_ids	particles/RodConstraint.h	/^    std::vector<int> m_ids;$/;"	m	class:RodConstraint
m_kd	particles/AngularForce.h	/^    double const m_ks, m_kd; \/\/ spring strength constants$/;"	m	class:AngularForce
m_kd	particles/Gravity.h	/^  float m_kd;$/;"	m	class:Drag
m_kd	particles/MouseForce.h	/^	double const m_ks, m_kd; \/\/ spring strength constants$/;"	m	class:MouseForce
m_kd	particles/SpringForce.h	/^  double const m_ks, m_kd; \/\/ spring strength constants$/;"	m	class:SpringForce
m_ks	particles/AngularForce.h	/^    double const m_ks, m_kd; \/\/ spring strength constants$/;"	m	class:AngularForce
m_ks	particles/MouseForce.h	/^	double const m_ks, m_kd; \/\/ spring strength constants$/;"	m	class:MouseForce
m_ks	particles/SpringForce.h	/^  double const m_ks, m_kd; \/\/ spring strength constants$/;"	m	class:SpringForce
m_p	particles/CircularWireConstraint.h	/^    Particle *const m_p;$/;"	m	class:CircularWireConstraint
m_p	particles/Gravity.h	/^  Particle * const m_p;$/;"	m	class:Drag
m_p	particles/Gravity.h	/^  Particle * const m_p;$/;"	m	class:Gravity
m_p1	particles/AngularForce.h	/^    Particle * const m_p1;   \/\/ particle 1$/;"	m	class:AngularForce
m_p1	particles/RodConstraint.h	/^    Particle *const m_p1;$/;"	m	class:RodConstraint
m_p1	particles/SpringForce.h	/^  Particle * const m_p1;   \/\/ particle 1$/;"	m	class:SpringForce
m_p2	particles/AngularForce.h	/^    Particle * const m_p2;   \/\/ particle 2$/;"	m	class:AngularForce
m_p2	particles/RodConstraint.h	/^    Particle *const m_p2;$/;"	m	class:RodConstraint
m_p2	particles/SpringForce.h	/^  Particle * const m_p2;   \/\/ particle 2 $/;"	m	class:SpringForce
m_p3	particles/AngularForce.h	/^    Particle * const m_p3;   \/\/ particle 3$/;"	m	class:AngularForce
m_radius	particles/CircularWireConstraint.h	/^    double const m_radius;$/;"	m	class:CircularWireConstraint
m_radius	particles/MouseForce.h	/^	double m_radius;$/;"	m	class:MouseForce
main	StableFluids.cpp	/^int main(int argc, char **argv) {$/;"	f
main	particles/TinkerToy.cpp	/^int main(int argc, char **argv) {$/;"	f
malloc_fn	include/png.h	/^   png_malloc_ptr malloc_fn;         \/* function for allocating memory *\/$/;"	m	struct:png_struct_def
matVecMult	particles/linearSolver.h	/^    virtual void matVecMult(double x[], double r[]) {$/;"	f	class:implicitMatrix
max_text	include/png.h	/^   int max_text; \/* current size of text array *\/$/;"	m	struct:png_info_struct
mem_ptr	include/png.h	/^   png_voidp mem_ptr;                \/* user supplied struct for mem functions *\/$/;"	m	struct:png_struct_def
minute	include/png.h	/^   png_byte minute;  \/* minute of hour, 0 - 59 *\/$/;"	m	struct:png_time_struct
mmx_bitdepth_threshold	include/png.h	/^   png_byte     mmx_bitdepth_threshold;$/;"	m	struct:png_struct_def
mmx_rowbytes_threshold	include/png.h	/^   png_uint_32  mmx_rowbytes_threshold;$/;"	m	struct:png_struct_def
mng_features_permitted	include/png.h	/^   png_byte mng_features_permitted;$/;"	m	struct:png_struct_def
mng_features_permitted	include/png.h	/^   png_uint_32 mng_features_permitted;$/;"	m	struct:png_struct_def
mod_time	include/png.h	/^   png_time mod_time;$/;"	m	struct:png_info_struct
mode	include/png.h	/^   png_uint_32 mode;          \/* tells us where we are in the PNG file *\/$/;"	m	struct:png_struct_def
month	include/png.h	/^   png_byte month;   \/* month of year, 1 - 12 *\/$/;"	m	struct:png_time_struct
motion_func	StableFluids.cpp	/^static void motion_func(int x, int y) {$/;"	f	file:
motion_func	particles/TinkerToy.cpp	/^static void motion_func(int x, int y) {$/;"	f	file:
mousePos	particles/MouseForce.h	/^	Vec2f mousePos;$/;"	m	class:MouseForce
mouse_down	StableFluids.cpp	/^static int mouse_down[3];$/;"	v	file:
mouse_down	particles/TinkerToy.cpp	/^static int mouse_down[3];$/;"	v	file:
mouse_force	particles/TinkerToy.cpp	/^static MouseForce *mouse_force = NULL;$/;"	v	file:
mouse_func	StableFluids.cpp	/^static void mouse_func(int button, int state, int x, int y) {$/;"	f	file:
mouse_func	particles/TinkerToy.cpp	/^static void mouse_func(int button, int state, int x, int y) {$/;"	f	file:
mouse_release	particles/TinkerToy.cpp	/^static int mouse_release[3];$/;"	v	file:
mouse_shiftclick	particles/TinkerToy.cpp	/^static int mouse_shiftclick[3];$/;"	v	file:
msg	include/zlib.h	/^    char     *msg;      \/* last error message, NULL if no error *\/$/;"	m	struct:z_stream_s
multiply	particles/ConstraintSolver.cpp	/^std::vector< float > multiply(std::vector< float > A, float b) {$/;"	f
multiply	particles/ConstraintSolver.cpp	/^std::vector< float > multiply(std::vector< float > A, int b) {$/;"	f
multiply	particles/ConstraintSolver.cpp	/^std::vector< float > multiply(std::vector< std::vector< float > > A, std::vector< float > B) {$/;"	f
multiply	particles/ConstraintSolver.cpp	/^std::vector< std::vector< float > > multiply(std::vector< std::vector< float > > A,$/;"	f
multiply	particles/Multiply.h	/^    std::vector<float> multiply(std::vector<float> A, float b){$/;"	f	class:Multiply
multiply	particles/Multiply.h	/^    std::vector<float> multiply(std::vector<std::vector<float>> A, std::vector<float> B){$/;"	f	class:Multiply
multiply	particles/Multiply.h	/^    std::vector<std::vector<float>> multiply (std::vector<std::vector<float>> A, std::vector<std::vector<float>> B){$/;"	f	class:Multiply
mx	StableFluids.cpp	/^static int omx, omy, mx, my;$/;"	v	file:
mx	particles/TinkerToy.cpp	/^static int omx, omy, mx, my;$/;"	v	file:
my	StableFluids.cpp	/^static int omx, omy, mx, my;$/;"	v	file:
my	particles/TinkerToy.cpp	/^static int omx, omy, mx, my;$/;"	v	file:
name	include/png.h	/^    png_byte name[PNG_CHUNK_NAME_LENGTH];$/;"	m	struct:png_unknown_chunk_t
name	include/png.h	/^   png_charp name;           \/* palette name *\/$/;"	m	struct:png_sPLT_struct
name	include/zlib.h	/^    Bytef   *name;      \/* pointer to zero-terminated file name or Z_NULL *\/$/;"	m	struct:gz_header_s
name_max	include/zlib.h	/^    uInt    name_max;   \/* space at name (only when reading header) *\/$/;"	m	struct:gz_header_s
nentries	include/png.h	/^   png_int_32 nentries;      \/* number of palette entries *\/$/;"	m	struct:png_sPLT_struct
next_in	include/zlib.h	/^    Bytef    *next_in;  \/* next input byte *\/$/;"	m	struct:z_stream_s
next_out	include/zlib.h	/^    Bytef    *next_out; \/* next output byte should be put there *\/$/;"	m	struct:z_stream_s
norm	include/gfx/quat.h	/^inline double norm(const Quat& q)$/;"	f	namespace:gfx
norm	include/gfx/vec2.h	/^template<class T> inline T norm(const TVec2<T>& v)   { return sqrt(norm2(v)); }$/;"	f	namespace:gfx
norm	include/gfx/vec3.h	/^template<class T> inline T norm(const TVec3<T>& v)   { return sqrt(norm2(v)); }$/;"	f	namespace:gfx
norm	include/gfx/vec4.h	/^template<class T> inline T norm(const TVec4<T>& v)  { return sqrt(norm2(v)); }$/;"	f	namespace:gfx
norm2	include/gfx/vec2.h	/^template<class T> inline T norm2(const TVec2<T>& v)  { return v*v; }$/;"	f	namespace:gfx
norm2	include/gfx/vec3.h	/^template<class T> inline T norm2(const TVec3<T>& v)  { return v*v; }$/;"	f	namespace:gfx
norm2	include/gfx/vec4.h	/^template<class T> inline T norm2(const TVec4<T>& v) { return v*v; }$/;"	f	namespace:gfx
num_chunk_list	include/png.h	/^   int num_chunk_list;$/;"	m	struct:png_struct_def
num_palette	include/png.h	/^   png_uint_16 num_palette;   \/* number of color entries in palette *\/$/;"	m	struct:png_struct_def
num_palette	include/png.h	/^   png_uint_16 num_palette; \/* number of color entries in "palette" (PLTE) *\/$/;"	m	struct:png_info_struct
num_prev_filters	include/png.h	/^   png_byte num_prev_filters;        \/* number of weights for previous rows *\/$/;"	m	struct:png_struct_def
num_rows	include/png.h	/^   png_uint_32 num_rows;      \/* number of rows in current pass *\/$/;"	m	struct:png_struct_def
num_text	include/png.h	/^   int num_text; \/* number of comments read\/to write *\/$/;"	m	struct:png_info_struct
num_trans	include/png.h	/^   png_uint_16 num_trans;     \/* number of transparency values *\/$/;"	m	struct:png_struct_def
num_trans	include/png.h	/^   png_uint_16 num_trans;   \/* number of transparent palette color (tRNS) *\/$/;"	m	struct:png_info_struct
offset_table	include/png.h	/^   png_bytep offset_table;$/;"	m	struct:png_struct_def
offset_table_count	include/png.h	/^   png_uint_16 offset_table_count;$/;"	m	struct:png_struct_def
offset_table_count_free	include/png.h	/^   png_uint_16 offset_table_count_free;$/;"	m	struct:png_struct_def
offset_table_number	include/png.h	/^   png_uint_16 offset_table_number;$/;"	m	struct:png_struct_def
offset_table_ptr	include/png.h	/^   png_bytepp offset_table_ptr;$/;"	m	struct:png_struct_def
offset_unit_type	include/png.h	/^   png_byte offset_unit_type; \/* offset units type *\/$/;"	m	struct:png_info_struct
old_big_row_buf_size	include/png.h	/^  png_uint_32 old_big_row_buf_size, old_prev_row_size;$/;"	m	struct:png_struct_def
old_prev_row_size	include/png.h	/^  png_uint_32 old_big_row_buf_size, old_prev_row_size;$/;"	m	struct:png_struct_def
omx	StableFluids.cpp	/^static int omx, omy, mx, my;$/;"	v	file:
omx	particles/TinkerToy.cpp	/^static int omx, omy, mx, my;$/;"	v	file:
omy	StableFluids.cpp	/^static int omx, omy, mx, my;$/;"	v	file:
omy	particles/TinkerToy.cpp	/^static int omx, omy, mx, my;$/;"	v	file:
opaque	include/zlib.h	/^    voidpf     opaque;  \/* private data object passed to zalloc and zfree *\/$/;"	m	struct:z_stream_s
open_glut_window	StableFluids.cpp	/^static void open_glut_window(void) {$/;"	f	file:
open_glut_window	particles/TinkerToy.cpp	/^static void open_glut_window(void) {$/;"	f	file:
operator ()	include/gfx/mat2.h	/^    double  operator()(int i, int j) const { return row[i][j]; }$/;"	f	class:gfx::Mat2
operator ()	include/gfx/mat2.h	/^    double& operator()(int i, int j)       { return row[i][j]; }$/;"	f	class:gfx::Mat2
operator ()	include/gfx/mat3.h	/^    double  operator()(int i, int j) const { return row[i][j]; }$/;"	f	class:gfx::Mat3
operator ()	include/gfx/mat3.h	/^    double& operator()(int i, int j)       { return row[i][j]; }$/;"	f	class:gfx::Mat3
operator ()	include/gfx/mat4.h	/^    double  operator()(int i, int j) const { return row[i][j]; }$/;"	f	class:gfx::Mat4
operator ()	include/gfx/mat4.h	/^    double& operator()(int i, int j)       { return row[i][j]; }$/;"	f	class:gfx::Mat4
operator ()	include/gfx/symmat2.h	/^    double  operator()(int i, int j) const { return elt[index(i,j)]; }$/;"	f	class:gfx::SymMat2
operator ()	include/gfx/symmat2.h	/^    double& operator()(int i, int j)       { return elt[index(i,j)]; }$/;"	f	class:gfx::SymMat2
operator ()	include/gfx/symmat3.h	/^    double  operator()(int i, int j) const { return elt[index(i,j)]; }$/;"	f	class:gfx::SymMat3
operator ()	include/gfx/symmat3.h	/^    double& operator()(int i, int j)       { return elt[index(i,j)]; }$/;"	f	class:gfx::SymMat3
operator ()	include/gfx/symmat4.h	/^    double  operator()(int i, int j) const { return elt[index(i,j)]; }$/;"	f	class:gfx::SymMat4
operator ()	include/gfx/symmat4.h	/^    double& operator()(int i, int j)       { return elt[index(i,j)]; }$/;"	f	class:gfx::SymMat4
operator *	include/gfx/mat2.h	/^inline Mat2 operator*(const Mat2 &m, double s)$/;"	f	namespace:gfx
operator *	include/gfx/mat2.h	/^inline Mat2 operator*(double s, const Mat2 &m)$/;"	f	namespace:gfx
operator *	include/gfx/mat2.h	/^inline Vec2 operator*(const Mat2 &m, const Vec2 &v)$/;"	f	namespace:gfx
operator *	include/gfx/mat3.h	/^inline Mat3 operator*(const Mat3& m, double s)$/;"	f	namespace:gfx
operator *	include/gfx/mat3.h	/^inline Mat3 operator*(double s, const Mat3& m)$/;"	f	namespace:gfx
operator *	include/gfx/mat3.h	/^inline Vec3 operator*(const Mat3& m, const Vec3& v)$/;"	f	namespace:gfx
operator *	include/gfx/mat4.h	/^inline Mat4 operator*(const Mat4& m, double s)$/;"	f	namespace:gfx
operator *	include/gfx/mat4.h	/^inline Mat4 operator*(double s, const Mat4& m)$/;"	f	namespace:gfx
operator *	include/gfx/mat4.h	/^inline Vec3 operator*(const Mat4& m, const Vec3& v)$/;"	f	namespace:gfx
operator *	include/gfx/mat4.h	/^inline Vec4 operator*(const Mat4& m, const Vec4& v)$/;"	f	namespace:gfx
operator *	include/gfx/quat.h	/^inline Quat operator*(const Quat& q, const Quat& r)$/;"	f	namespace:gfx
operator *	include/gfx/quat.h	/^inline Quat operator*(const Quat& q, double s)$/;"	f	namespace:gfx
operator *	include/gfx/quat.h	/^inline Quat operator*(double s, const Quat& q)$/;"	f	namespace:gfx
operator *	include/gfx/symmat2.h	/^inline SymMat2 operator*(SymMat2 m, double s) { m*=s; return m; }$/;"	f	namespace:gfx
operator *	include/gfx/symmat2.h	/^inline SymMat2 operator*(double s, SymMat2 m) { m*=s; return m; }$/;"	f	namespace:gfx
operator *	include/gfx/symmat2.h	/^inline Vec2 operator*(const SymMat2& m, const Vec2& v)$/;"	f	namespace:gfx
operator *	include/gfx/symmat3.h	/^inline SymMat3 operator*(SymMat3 m, double s) { m*=s; return m; }$/;"	f	namespace:gfx
operator *	include/gfx/symmat3.h	/^inline SymMat3 operator*(double s, SymMat3 m) { m*=s; return m; }$/;"	f	namespace:gfx
operator *	include/gfx/symmat3.h	/^inline Vec3 operator*(const SymMat3& m, const Vec3& v)$/;"	f	namespace:gfx
operator *	include/gfx/symmat4.h	/^inline SymMat4 operator*(SymMat4 m, double s) { m*=s; return m; }$/;"	f	namespace:gfx
operator *	include/gfx/symmat4.h	/^inline SymMat4 operator*(double s, SymMat4 m) { m*=s; return m; }$/;"	f	namespace:gfx
operator *	include/gfx/symmat4.h	/^inline Vec4 operator*(const SymMat4& m, const Vec4& v)$/;"	f	namespace:gfx
operator *	include/gfx/vec2.h	/^  template<class T, class N> inline TVec2<T> operator*(N s, const TVec2<T> &v)$/;"	f	namespace:gfx
operator *	include/gfx/vec2.h	/^  template<class T, class N> inline TVec2<T> operator*(const TVec2<T> &v, N s)$/;"	f	namespace:gfx
operator *	include/gfx/vec2.h	/^  template<class T> inline TVec2<T> operator*(T s, const TVec2<T> &v)$/;"	f	namespace:gfx
operator *	include/gfx/vec2.h	/^  template<class T> inline TVec2<T> operator*(const TVec2<T> &v, T s)$/;"	f	namespace:gfx
operator *	include/gfx/vec2.h	/^template<class T> inline T operator*(const TVec2<T> &u, const TVec2<T>& v)$/;"	f	namespace:gfx
operator *	include/gfx/vec3.h	/^  template<class T, class N> inline TVec3<T> operator*(N s, const TVec3<T> &v)$/;"	f	namespace:gfx
operator *	include/gfx/vec3.h	/^  template<class T, class N> inline TVec3<T> operator*(const TVec3<T> &v, N s)$/;"	f	namespace:gfx
operator *	include/gfx/vec3.h	/^  template<class T> inline TVec3<T> operator*(T s, const TVec3<T> &v)$/;"	f	namespace:gfx
operator *	include/gfx/vec3.h	/^  template<class T> inline TVec3<T> operator*(const TVec3<T> &v, T s)$/;"	f	namespace:gfx
operator *	include/gfx/vec3.h	/^template<class T> inline T operator*(const TVec3<T> &u, const TVec3<T>& v)$/;"	f	namespace:gfx
operator *	include/gfx/vec4.h	/^  template<class T, class N> inline TVec4<T> operator*(N s, const TVec4<T> &v)$/;"	f	namespace:gfx
operator *	include/gfx/vec4.h	/^  template<class T, class N> inline TVec4<T> operator*(const TVec4<T> &v, N s)$/;"	f	namespace:gfx
operator *	include/gfx/vec4.h	/^  template<class T> inline TVec4<T> operator*(T s, const TVec4<T> &v)$/;"	f	namespace:gfx
operator *	include/gfx/vec4.h	/^  template<class T> inline TVec4<T> operator*(const TVec4<T> &v, T s)$/;"	f	namespace:gfx
operator *	include/gfx/vec4.h	/^template<class T> inline T operator*(const TVec4<T> &u, const TVec4<T> &v)$/;"	f	namespace:gfx
operator *=	include/gfx/mat2.h	/^inline Mat2& Mat2::operator*=(double s)$/;"	f	class:gfx::Mat2
operator *=	include/gfx/mat3.h	/^inline Mat3& Mat3::operator*=(double s)$/;"	f	class:gfx::Mat3
operator *=	include/gfx/mat4.h	/^inline Mat4& Mat4::operator*=(double s)$/;"	f	class:gfx::Mat4
operator *=	include/gfx/quat.h	/^inline Quat& Quat::operator*=(double d) { v*=d; s*=d; return *this; }$/;"	f	class:gfx::Quat
operator *=	include/gfx/symmat2.h	/^inline SymMat2& SymMat2::operator*=(double s)$/;"	f	class:gfx::SymMat2
operator *=	include/gfx/symmat3.h	/^inline SymMat3& SymMat3::operator*=(double s)$/;"	f	class:gfx::SymMat3
operator *=	include/gfx/symmat4.h	/^inline SymMat4& SymMat4::operator*=(double s)$/;"	f	class:gfx::SymMat4
operator *=	include/gfx/vec2.h	/^template<class T> inline TVec2<T>& TVec2<T>::operator*=(T s)$/;"	f	class:gfx::TVec2
operator *=	include/gfx/vec3.h	/^template<class T> inline TVec3<T>& TVec3<T>::operator*=(T s)$/;"	f	class:gfx::TVec3
operator *=	include/gfx/vec4.h	/^template<class T> inline TVec4<T>& TVec4<T>::operator*=(T s)$/;"	f	class:gfx::TVec4
operator +	include/gfx/mat2.h	/^inline Mat2 operator+(const Mat2 &n, const Mat2 &m)$/;"	f	namespace:gfx
operator +	include/gfx/mat3.h	/^inline Mat3 operator+(const Mat3& n, const Mat3& m)$/;"	f	namespace:gfx
operator +	include/gfx/mat4.h	/^inline Mat4 operator+(const Mat4& n, const Mat4& m)$/;"	f	namespace:gfx
operator +	include/gfx/quat.h	/^inline Quat operator+(const Quat& q, const Quat& r)$/;"	f	namespace:gfx
operator +	include/gfx/symmat2.h	/^inline SymMat2 operator+(SymMat2 n, const SymMat2& m) { n += m; return n; }$/;"	f	namespace:gfx
operator +	include/gfx/symmat3.h	/^inline SymMat3 operator+(SymMat3 n, const SymMat3& m) { n += m; return n; }$/;"	f	namespace:gfx
operator +	include/gfx/symmat4.h	/^inline SymMat4 operator+(SymMat4 n, const SymMat4& m) { n += m; return n; }$/;"	f	namespace:gfx
operator +	include/gfx/vec2.h	/^inline TVec2<T> operator+(const TVec2<T> &u, const TVec2<T> &v)$/;"	f	namespace:gfx
operator +	include/gfx/vec3.h	/^inline TVec3<T> operator+(const TVec3<T> &u, const TVec3<T>& v)$/;"	f	namespace:gfx
operator +	include/gfx/vec4.h	/^inline TVec4<T> operator+(const TVec4<T> &u, const TVec4<T> &v)$/;"	f	namespace:gfx
operator +=	include/gfx/mat2.h	/^inline Mat2& Mat2::operator+=(const Mat2& m)$/;"	f	class:gfx::Mat2
operator +=	include/gfx/mat3.h	/^inline Mat3& Mat3::operator+=(const Mat3& m)$/;"	f	class:gfx::Mat3
operator +=	include/gfx/mat4.h	/^inline Mat4& Mat4::operator+=(const Mat4& m)$/;"	f	class:gfx::Mat4
operator +=	include/gfx/quat.h	/^inline Quat& Quat::operator+=(const Quat& q) { v+=q.v; s+=q.s; return *this; }$/;"	f	class:gfx::Quat
operator +=	include/gfx/symmat2.h	/^inline SymMat2& SymMat2::operator+=(const SymMat2& m)$/;"	f	class:gfx::SymMat2
operator +=	include/gfx/symmat3.h	/^inline SymMat3& SymMat3::operator+=(const SymMat3& m)$/;"	f	class:gfx::SymMat3
operator +=	include/gfx/symmat4.h	/^inline SymMat4& SymMat4::operator+=(const SymMat4& m)$/;"	f	class:gfx::SymMat4
operator +=	include/gfx/vec2.h	/^template<class T> inline TVec2<T>& TVec2<T>::operator+=(const TVec2<T>& v)$/;"	f	class:gfx::TVec2
operator +=	include/gfx/vec3.h	/^template<class T> inline TVec3<T>& TVec3<T>::operator+=(const TVec3<T>& v)$/;"	f	class:gfx::TVec3
operator +=	include/gfx/vec4.h	/^template<class T> inline TVec4<T>& TVec4<T>::operator+=(const TVec4<T>& v)$/;"	f	class:gfx::TVec4
operator -	include/gfx/mat2.h	/^inline Mat2 operator-(const Mat2 &m)$/;"	f	namespace:gfx
operator -	include/gfx/mat2.h	/^inline Mat2 operator-(const Mat2 &n, const Mat2 &m)$/;"	f	namespace:gfx
operator -	include/gfx/mat3.h	/^inline Mat3 operator-(const Mat3& m)$/;"	f	namespace:gfx
operator -	include/gfx/mat3.h	/^inline Mat3 operator-(const Mat3& n, const Mat3& m)$/;"	f	namespace:gfx
operator -	include/gfx/mat4.h	/^inline Mat4 operator-(const Mat4& n)$/;"	f	namespace:gfx
operator -	include/gfx/mat4.h	/^inline Mat4 operator-(const Mat4& n, const Mat4& m)$/;"	f	namespace:gfx
operator -	include/gfx/symmat2.h	/^inline SymMat2 operator-(SymMat2 n, const SymMat2& m) { n -= m; return n; }$/;"	f	namespace:gfx
operator -	include/gfx/symmat3.h	/^inline SymMat3 operator-(SymMat3 n, const SymMat3& m) { n -= m; return n; }$/;"	f	namespace:gfx
operator -	include/gfx/symmat4.h	/^inline SymMat4 operator-(SymMat4 n, const SymMat4& m) { n -= m; return n; }$/;"	f	namespace:gfx
operator -	include/gfx/symmat4.h	/^inline SymMat4 operator-(const SymMat4& m)$/;"	f	namespace:gfx
operator -	include/gfx/vec2.h	/^inline TVec2<T> operator-(const TVec2<T> &u, const TVec2<T> &v)$/;"	f	namespace:gfx
operator -	include/gfx/vec2.h	/^template<class T> inline TVec2<T> operator-(const TVec2<T> &v)$/;"	f	namespace:gfx
operator -	include/gfx/vec3.h	/^inline TVec3<T> operator-(const TVec3<T> &u, const TVec3<T>& v)$/;"	f	namespace:gfx
operator -	include/gfx/vec3.h	/^template<class T> inline TVec3<T> operator-(const TVec3<T> &v)$/;"	f	namespace:gfx
operator -	include/gfx/vec4.h	/^inline TVec4<T> operator-(const TVec4<T> &u, const TVec4<T>& v)$/;"	f	namespace:gfx
operator -	include/gfx/vec4.h	/^template<class T> inline TVec4<T> operator-(const TVec4<T> &u)$/;"	f	namespace:gfx
operator -=	include/gfx/mat2.h	/^inline Mat2& Mat2::operator-=(const Mat2& m)$/;"	f	class:gfx::Mat2
operator -=	include/gfx/mat3.h	/^inline Mat3& Mat3::operator-=(const Mat3& m)$/;"	f	class:gfx::Mat3
operator -=	include/gfx/mat4.h	/^inline Mat4& Mat4::operator-=(const Mat4& m)$/;"	f	class:gfx::Mat4
operator -=	include/gfx/quat.h	/^inline Quat& Quat::operator-=(const Quat& q) { v-=q.v; s-=q.s; return *this; }$/;"	f	class:gfx::Quat
operator -=	include/gfx/symmat2.h	/^inline SymMat2& SymMat2::operator-=(const SymMat2& m)$/;"	f	class:gfx::SymMat2
operator -=	include/gfx/symmat3.h	/^inline SymMat3& SymMat3::operator-=(const SymMat3& m)$/;"	f	class:gfx::SymMat3
operator -=	include/gfx/symmat4.h	/^inline SymMat4& SymMat4::operator-=(const SymMat4& m)$/;"	f	class:gfx::SymMat4
operator -=	include/gfx/vec2.h	/^template<class T> inline TVec2<T>& TVec2<T>::operator-=(const TVec2<T>& v)$/;"	f	class:gfx::TVec2
operator -=	include/gfx/vec3.h	/^template<class T> inline TVec3<T>& TVec3<T>::operator-=(const TVec3<T>& v)$/;"	f	class:gfx::TVec3
operator -=	include/gfx/vec4.h	/^template<class T> inline TVec4<T>& TVec4<T>::operator-=(const TVec4<T>& v)$/;"	f	class:gfx::TVec4
operator /	include/gfx/mat2.h	/^inline Mat2 operator\/(const Mat2 &m, double s)$/;"	f	namespace:gfx
operator /	include/gfx/mat3.h	/^inline Mat3 operator\/(const Mat3& m, double s)$/;"	f	namespace:gfx
operator /	include/gfx/mat4.h	/^inline Mat4 operator\/(const Mat4& m, double s)$/;"	f	namespace:gfx
operator /	include/gfx/quat.h	/^inline Quat operator\/(const Quat& q, double s)$/;"	f	namespace:gfx
operator /	include/gfx/symmat2.h	/^inline SymMat2 operator\/(SymMat2 m, double s) { m\/=s; return m; }$/;"	f	namespace:gfx
operator /	include/gfx/symmat3.h	/^inline SymMat3 operator\/(SymMat3 m, double s) { m\/=s; return m; }$/;"	f	namespace:gfx
operator /	include/gfx/symmat4.h	/^inline SymMat4 operator\/(SymMat4 m, double s) { m\/=s; return m; }$/;"	f	namespace:gfx
operator /	include/gfx/vec2.h	/^  template<class T, class N> inline TVec2<T> operator\/(const TVec2<T> &v, N s)$/;"	f	namespace:gfx
operator /	include/gfx/vec2.h	/^  template<class T> inline TVec2<T> operator\/(const TVec2<T> &v, T s)$/;"	f	namespace:gfx
operator /	include/gfx/vec3.h	/^  template<class T, class N> inline TVec3<T> operator\/(const TVec3<T> &v, N s)$/;"	f	namespace:gfx
operator /	include/gfx/vec3.h	/^  template<class T> inline TVec3<T> operator\/(const TVec3<T> &v, T s)$/;"	f	namespace:gfx
operator /	include/gfx/vec4.h	/^  template<class T, class N> inline TVec4<T> operator\/(const TVec4<T> &v, N s)$/;"	f	namespace:gfx
operator /	include/gfx/vec4.h	/^  template<class T> inline TVec4<T> operator\/(const TVec4<T> &v, T s)$/;"	f	namespace:gfx
operator /=	include/gfx/mat2.h	/^inline Mat2& Mat2::operator\/=(double s)$/;"	f	class:gfx::Mat2
operator /=	include/gfx/mat3.h	/^inline Mat3& Mat3::operator\/=(double s)$/;"	f	class:gfx::Mat3
operator /=	include/gfx/mat4.h	/^inline Mat4& Mat4::operator\/=(double s)$/;"	f	class:gfx::Mat4
operator /=	include/gfx/quat.h	/^inline Quat& Quat::operator\/=(double d) { v\/=d; s\/=d; return *this; }$/;"	f	class:gfx::Quat
operator /=	include/gfx/symmat2.h	/^inline SymMat2& SymMat2::operator\/=(double s)$/;"	f	class:gfx::SymMat2
operator /=	include/gfx/symmat3.h	/^inline SymMat3& SymMat3::operator\/=(double s)$/;"	f	class:gfx::SymMat3
operator /=	include/gfx/symmat4.h	/^inline SymMat4& SymMat4::operator\/=(double s)$/;"	f	class:gfx::SymMat4
operator /=	include/gfx/vec2.h	/^template<class T> inline TVec2<T>& TVec2<T>::operator\/=(T s)$/;"	f	class:gfx::TVec2
operator /=	include/gfx/vec3.h	/^template<class T> inline TVec3<T>& TVec3<T>::operator\/=(T s)$/;"	f	class:gfx::TVec3
operator /=	include/gfx/vec4.h	/^template<class T> inline TVec4<T>& TVec4<T>::operator\/=(T s)$/;"	f	class:gfx::TVec4
operator <<	include/gfx/mat2.h	/^inline std::ostream &operator<<(std::ostream &out, const Mat2& M)$/;"	f	namespace:gfx
operator <<	include/gfx/mat3.h	/^inline std::ostream &operator<<(std::ostream &out, const Mat3& M)$/;"	f	namespace:gfx
operator <<	include/gfx/mat4.h	/^inline std::ostream &operator<<(std::ostream &out, const Mat4& M)$/;"	f	namespace:gfx
operator <<	include/gfx/quat.h	/^inline std::ostream &operator<<(std::ostream &out, const Quat& q)$/;"	f	namespace:gfx
operator <<	include/gfx/vec2.h	/^inline std::ostream &operator<<(std::ostream &out, const TVec2<T> &v)$/;"	f	namespace:gfx
operator <<	include/gfx/vec3.h	/^inline std::ostream &operator<<(std::ostream &out, const TVec3<T>& v)$/;"	f	namespace:gfx
operator <<	include/gfx/vec4.h	/^inline std::ostream &operator<<(std::ostream &out, const TVec4<T>& v)$/;"	f	namespace:gfx
operator =	include/gfx/mat2.h	/^inline Mat2& Mat2::operator=(const Mat2& m)$/;"	f	class:gfx::Mat2
operator =	include/gfx/mat2.h	/^inline Mat2& Mat2::operator=(double s)$/;"	f	class:gfx::Mat2
operator =	include/gfx/mat3.h	/^inline Mat3& Mat3::operator=(const Mat3& m)$/;"	f	class:gfx::Mat3
operator =	include/gfx/mat3.h	/^inline Mat3& Mat3::operator=(double s)$/;"	f	class:gfx::Mat3
operator =	include/gfx/mat4.h	/^inline Mat4& Mat4::operator=(const Mat4& m)$/;"	f	class:gfx::Mat4
operator =	include/gfx/mat4.h	/^inline Mat4& Mat4::operator=(double s)$/;"	f	class:gfx::Mat4
operator =	include/gfx/quat.h	/^inline Quat& Quat::operator=(const Quat& q) { v=q.v; s=q.s; return *this; }$/;"	f	class:gfx::Quat
operator =	include/gfx/quat.h	/^inline Quat& Quat::operator=(double d)  { v=d;  s=d;  return *this; }$/;"	f	class:gfx::Quat
operator =	include/gfx/symmat2.h	/^inline SymMat2& SymMat2::operator=(const SymMat2& m)$/;"	f	class:gfx::SymMat2
operator =	include/gfx/symmat2.h	/^inline SymMat2& SymMat2::operator=(double s)$/;"	f	class:gfx::SymMat2
operator =	include/gfx/symmat3.h	/^inline SymMat3& SymMat3::operator=(const SymMat3& m)$/;"	f	class:gfx::SymMat3
operator =	include/gfx/symmat3.h	/^inline SymMat3& SymMat3::operator=(double s)$/;"	f	class:gfx::SymMat3
operator =	include/gfx/symmat4.h	/^inline SymMat4& SymMat4::operator=(const SymMat4& m)$/;"	f	class:gfx::SymMat4
operator =	include/gfx/symmat4.h	/^inline SymMat4& SymMat4::operator=(double s)$/;"	f	class:gfx::SymMat4
operator =	include/gfx/vec2.h	/^    TVec2& operator=(T s) { elt[0]=elt[1]=s; return *this; }$/;"	f	class:gfx::TVec2
operator =	include/gfx/vec2.h	/^    template<class U> TVec2& operator=(const TVec2<U>& v)$/;"	f	class:gfx::TVec2
operator =	include/gfx/vec3.h	/^    TVec3& operator=(T s) { elt[0]=elt[1]=elt[2]=s; return *this; }$/;"	f	class:gfx::TVec3
operator =	include/gfx/vec3.h	/^    template<class U> TVec3& operator=(const TVec3<U>& v)$/;"	f	class:gfx::TVec3
operator =	include/gfx/vec4.h	/^    TVec4& operator=(T s) { elt[0]=elt[1]=elt[2]=elt[3]=s; return *this; }$/;"	f	class:gfx::TVec4
operator =	include/gfx/vec4.h	/^    template<class U> TVec4& operator=(const TVec4<U>& v)$/;"	f	class:gfx::TVec4
operator >>	include/gfx/mat2.h	/^inline std::istream &operator>>(std::istream &in, Mat2& M)$/;"	f	namespace:gfx
operator >>	include/gfx/mat3.h	/^inline std::istream &operator>>(std::istream &in, Mat3& M)$/;"	f	namespace:gfx
operator >>	include/gfx/mat4.h	/^inline std::istream &operator>>(std::istream &in, Mat4& M)$/;"	f	namespace:gfx
operator >>	include/gfx/quat.h	/^inline std::istream &operator>>(std::istream &in, Quat& q)$/;"	f	namespace:gfx
operator >>	include/gfx/vec2.h	/^inline std::istream &operator>>(std::istream &in, TVec2<T>& v)$/;"	f	namespace:gfx
operator >>	include/gfx/vec3.h	/^inline std::istream &operator>>(std::istream &in, TVec3<T>& v)$/;"	f	namespace:gfx
operator >>	include/gfx/vec4.h	/^inline std::istream &operator>>(std::istream &in, TVec4<T>& v)$/;"	f	namespace:gfx
operator T*	include/gfx/vec2.h	/^    operator       T*()       { return elt; }$/;"	f	class:gfx::TVec2
operator T*	include/gfx/vec3.h	/^    operator       T*()       { return elt; }$/;"	f	class:gfx::TVec3
operator T*	include/gfx/vec4.h	/^    operator       T*()       { return elt; }$/;"	f	class:gfx::TVec4
operator []	ScalarField.h	/^	float	&operator[](int i)       { return m_Field[i]; }$/;"	f	class:ScalarField
operator []	VectorField.h	/^    Vec2f &operator[](int i) { return m_Field[i]; }$/;"	f	class:VectorField
operator []	include/gfx/mat2.h	/^    Vec2&       operator[](int i)       { return row[i]; }$/;"	f	class:gfx::Mat2
operator []	include/gfx/mat2.h	/^    const Vec2& operator[](int i) const { return row[i]; }$/;"	f	class:gfx::Mat2
operator []	include/gfx/mat3.h	/^    Vec3&       operator[](int i)       { return row[i]; }$/;"	f	class:gfx::Mat3
operator []	include/gfx/mat3.h	/^    const Vec3& operator[](int i) const { return row[i]; }$/;"	f	class:gfx::Mat3
operator []	include/gfx/mat4.h	/^    Vec4&       operator[](int i)       { return row[i]; }$/;"	f	class:gfx::Mat4
operator []	include/gfx/mat4.h	/^    const Vec4& operator[](int i) const { return row[i]; }$/;"	f	class:gfx::Mat4
operator []	include/gfx/vec2.h	/^    T  operator[](int i) const { return elt[i]; }$/;"	f	class:gfx::TVec2
operator []	include/gfx/vec2.h	/^    T& operator[](int i)       { return elt[i]; }$/;"	f	class:gfx::TVec2
operator []	include/gfx/vec3.h	/^    T  operator[](int i) const { return elt[i]; }$/;"	f	class:gfx::TVec3
operator []	include/gfx/vec3.h	/^    T& operator[](int i)       { return elt[i]; }$/;"	f	class:gfx::TVec3
operator []	include/gfx/vec4.h	/^    T  operator[](int i) const { return elt[i]; }$/;"	f	class:gfx::TVec4
operator []	include/gfx/vec4.h	/^    T& operator[](int i)       { return elt[i]; }$/;"	f	class:gfx::TVec4
operator ^	include/gfx/vec3.h	/^inline TVec3<T> operator^(const TVec3<T>& u, const TVec3<T>& v)$/;"	f	namespace:gfx
operator const T*	include/gfx/vec2.h	/^    operator const T*()       { return elt; }$/;"	f	class:gfx::TVec2
operator const T*	include/gfx/vec2.h	/^    operator const T*() const { return elt; }$/;"	f	class:gfx::TVec2
operator const T*	include/gfx/vec3.h	/^    operator const T*()       { return elt; }$/;"	f	class:gfx::TVec3
operator const T*	include/gfx/vec3.h	/^    operator const T*() const { return elt; }$/;"	f	class:gfx::TVec3
operator const T*	include/gfx/vec4.h	/^    operator const T*()       { return elt; }$/;"	f	class:gfx::TVec4
operator const T*	include/gfx/vec4.h	/^    operator const T*() const { return elt; }$/;"	f	class:gfx::TVec4
operator const double*	include/gfx/mat2.h	/^    operator const double*()       { return row[0]; }$/;"	f	class:gfx::Mat2
operator const double*	include/gfx/mat2.h	/^    operator const double*() const { return row[0]; }$/;"	f	class:gfx::Mat2
operator const double*	include/gfx/mat3.h	/^    operator const double*()       { return row[0]; }$/;"	f	class:gfx::Mat3
operator const double*	include/gfx/mat3.h	/^    operator const double*() const { return row[0]; }$/;"	f	class:gfx::Mat3
operator const double*	include/gfx/mat4.h	/^    operator const double*()       { return row[0]; }$/;"	f	class:gfx::Mat4
operator const double*	include/gfx/mat4.h	/^    operator const double*() const { return row[0]; }$/;"	f	class:gfx::Mat4
operator const double*	include/gfx/symmat2.h	/^    operator const double*()       { return elt; }$/;"	f	class:gfx::SymMat2
operator const double*	include/gfx/symmat2.h	/^    operator const double*() const { return elt; }$/;"	f	class:gfx::SymMat2
operator const double*	include/gfx/symmat3.h	/^    operator const double*()       { return elt; }$/;"	f	class:gfx::SymMat3
operator const double*	include/gfx/symmat3.h	/^    operator const double*() const { return elt; }$/;"	f	class:gfx::SymMat3
operator const double*	include/gfx/symmat4.h	/^    operator const double*()       { return elt; }$/;"	f	class:gfx::SymMat4
operator const double*	include/gfx/symmat4.h	/^    operator const double*() const { return elt; }$/;"	f	class:gfx::SymMat4
operator double*	include/gfx/mat2.h	/^    operator       double*()       { return row[0]; }$/;"	f	class:gfx::Mat2
operator double*	include/gfx/mat3.h	/^    operator       double*()       { return row[0]; }$/;"	f	class:gfx::Mat3
operator double*	include/gfx/mat4.h	/^    operator       double*()       { return row[0]; }$/;"	f	class:gfx::Mat4
operator double*	include/gfx/symmat2.h	/^    operator       double*()       { return elt; }$/;"	f	class:gfx::SymMat2
operator double*	include/gfx/symmat3.h	/^    operator       double*()       { return elt; }$/;"	f	class:gfx::SymMat3
operator double*	include/gfx/symmat4.h	/^    operator       double*()       { return elt; }$/;"	f	class:gfx::SymMat4
os	include/zlib.h	/^    int     os;         \/* operating system *\/$/;"	m	struct:gz_header_s
out_func	include/zconf.h	49;"	d
out_func	include/zlib.h	/^typedef int (*out_func) OF((void FAR *, unsigned char FAR *, unsigned));$/;"	t
outer_product	include/gfx/mat2.h	/^    static Mat2 outer_product(const Vec2 &u) { return outer_product(u,u); }$/;"	f	class:gfx::Mat2
outer_product	include/gfx/mat2.h	/^    static Mat2 outer_product(const Vec2 &u, const Vec2 &v)$/;"	f	class:gfx::Mat2
output_flush_fn	include/png.h	/^   png_flush_ptr output_flush_fn;\/* Function for flushing output *\/$/;"	m	struct:png_struct_def
pInstance	include/Singleton.h	/^	static	T* pInstance;$/;"	m	class:Singleton
pInstance	include/Singleton.h	/^template <typename T> T* Singleton <T>::pInstance = 0;$/;"	m	class:Singleton
pVector	StableFluids.cpp	/^static std::vector< Particle * > pVector;$/;"	v	file:
pVector	particles/MouseForce.h	/^	std::vector<Particle*> pVector;$/;"	m	class:MouseForce
pVector	particles/TinkerToy.cpp	/^static std::vector< Particle * > pVector;$/;"	v	file:
paeth_row	include/png.h	/^   png_bytep paeth_row;       \/* buffer to save "Paeth" row when filtering *\/$/;"	m	struct:png_struct_def
palette	include/png.h	/^   png_colorp palette;        \/* palette from the input file *\/$/;"	m	struct:png_struct_def
palette	include/png.h	/^   png_colorp palette;      \/* array of color values (valid & PNG_INFO_PLTE) *\/$/;"	m	struct:png_info_struct
palette_lookup	include/png.h	/^   png_bytep palette_lookup;         \/* lookup table for dithering *\/$/;"	m	struct:png_struct_def
palette_to_index	include/png.h	/^   png_bytep palette_to_index;       \/* which original index points to this *\/$/;"	m	struct:png_struct_def
pass	include/png.h	/^   png_byte pass;             \/* current interlace pass (0 - 6) *\/$/;"	m	struct:png_struct_def
pcal_X0	include/png.h	/^   png_int_32 pcal_X0;      \/* minimum value *\/$/;"	m	struct:png_info_struct
pcal_X1	include/png.h	/^   png_int_32 pcal_X1;      \/* maximum value *\/$/;"	m	struct:png_info_struct
pcal_nparams	include/png.h	/^   png_byte pcal_nparams;   \/* number of parameters given in pcal_params *\/$/;"	m	struct:png_info_struct
pcal_params	include/png.h	/^   png_charpp pcal_params;  \/* ASCII strings containing parameter values *\/$/;"	m	struct:png_info_struct
pcal_purpose	include/png.h	/^   png_charp pcal_purpose;  \/* pCAL chunk description string *\/$/;"	m	struct:png_info_struct
pcal_type	include/png.h	/^   png_byte pcal_type;      \/* equation type (see PNG_EQUATION_ below) *\/$/;"	m	struct:png_info_struct
pcal_units	include/png.h	/^   png_charp pcal_units;    \/* Latin-1 string giving physical units *\/$/;"	m	struct:png_info_struct
perp	include/gfx/vec2.h	/^template<class T> inline TVec2<T> perp(const TVec2<T> &v)$/;"	f	namespace:gfx
phys_unit_type	include/png.h	/^   png_byte phys_unit_type; \/* resolution type (see PNG_RESOLUTION_ below) *\/$/;"	m	struct:png_info_struct
pixel_depth	include/png.h	/^   png_byte pixel_depth;      \/* number of bits per pixel *\/$/;"	m	struct:png_struct_def
pixel_depth	include/png.h	/^   png_byte pixel_depth;    \/* number of bits per pixel *\/$/;"	m	struct:png_info_struct
pixel_depth	include/png.h	/^   png_byte pixel_depth; \/* bits per pixel (depth * channels) *\/$/;"	m	struct:png_row_info_struct
png_FILE_p	include/pngconf.h	/^typedef FILE                * png_FILE_p;$/;"	t
png_FILE_p	include/pngconf.h	/^typedef HANDLE                png_FILE_p;$/;"	t
png_byte	include/pngconf.h	/^typedef unsigned char png_byte;$/;"	t
png_bytep	include/pngconf.h	/^typedef png_byte        FAR * png_bytep;$/;"	t
png_bytep_NULL	include/png.h	496;"	d
png_bytep_NULL	include/png.h	512;"	d
png_bytepp	include/pngconf.h	/^typedef png_byte        FAR * FAR * png_bytepp;$/;"	t
png_bytepp_NULL	include/png.h	497;"	d
png_bytepp_NULL	include/png.h	513;"	d
png_charp	include/pngconf.h	/^typedef char            FAR * png_charp;$/;"	t
png_charpp	include/pngconf.h	/^typedef char            FAR * FAR * png_charpp;$/;"	t
png_charppp	include/pngconf.h	/^typedef char            FAR * FAR * FAR * png_charppp;$/;"	t
png_color	include/png.h	/^} png_color;$/;"	t	typeref:struct:png_color_struct
png_color_16	include/png.h	/^} png_color_16;$/;"	t	typeref:struct:png_color_16_struct
png_color_16_struct	include/png.h	/^typedef struct png_color_16_struct$/;"	s
png_color_16p	include/png.h	/^typedef png_color_16 FAR * png_color_16p;$/;"	t
png_color_16pp	include/png.h	/^typedef png_color_16 FAR * FAR * png_color_16pp;$/;"	t
png_color_8	include/png.h	/^} png_color_8;$/;"	t	typeref:struct:png_color_8_struct
png_color_8_struct	include/png.h	/^typedef struct png_color_8_struct$/;"	s
png_color_8p	include/png.h	/^typedef png_color_8 FAR * png_color_8p;$/;"	t
png_color_8pp	include/png.h	/^typedef png_color_8 FAR * FAR * png_color_8pp;$/;"	t
png_color_struct	include/png.h	/^typedef struct png_color_struct$/;"	s
png_colorp	include/png.h	/^typedef png_color FAR * png_colorp;$/;"	t
png_colorpp	include/png.h	/^typedef png_color FAR * FAR * png_colorpp;$/;"	t
png_composite	include/png.h	2680;"	d
png_composite	include/png.h	2694;"	d
png_composite_16	include/png.h	2686;"	d
png_composite_16	include/png.h	2699;"	d
png_const_charp	include/pngconf.h	/^typedef PNG_CONST char  FAR * png_const_charp;$/;"	t
png_const_charpp	include/pngconf.h	/^typedef PNG_CONST char  FAR * FAR * png_const_charpp;$/;"	t
png_debug	include/png.h	2519;"	d
png_debug	include/png.h	2528;"	d
png_debug	include/png.h	2551;"	d
png_debug1	include/png.h	2520;"	d
png_debug1	include/png.h	2534;"	d
png_debug1	include/png.h	2554;"	d
png_debug2	include/png.h	2521;"	d
png_debug2	include/png.h	2540;"	d
png_debug2	include/png.h	2557;"	d
png_doublep	include/pngconf.h	/^typedef double          FAR * png_doublep;$/;"	t
png_doublep_NULL	include/png.h	498;"	d
png_doublep_NULL	include/png.h	514;"	d
png_doublepp	include/pngconf.h	/^typedef double          FAR * FAR * png_doublepp;$/;"	t
png_error_ptr	include/png.h	/^typedef void (PNGAPI *png_error_ptr) PNGARG((png_structp, png_const_charp));$/;"	t
png_error_ptr_NULL	include/png.h	499;"	d
png_error_ptr_NULL	include/png.h	515;"	d
png_fixed_point	include/pngconf.h	/^typedef png_int_32 png_fixed_point;$/;"	t
png_fixed_point_p	include/pngconf.h	/^typedef png_fixed_point FAR * png_fixed_point_p;$/;"	t
png_fixed_point_pp	include/pngconf.h	/^typedef png_fixed_point FAR * FAR * png_fixed_point_pp;$/;"	t
png_flush_ptr	include/png.h	/^typedef void (PNGAPI *png_flush_ptr) PNGARG((png_structp));$/;"	t
png_flush_ptr_NULL	include/png.h	500;"	d
png_flush_ptr_NULL	include/png.h	516;"	d
png_free_ptr	include/png.h	/^typedef void (*png_free_ptr) PNGARG((png_structp, png_voidp));$/;"	t
png_free_ptr_NULL	include/png.h	501;"	d
png_free_ptr_NULL	include/png.h	517;"	d
png_get_int_32	include/png.h	2717;"	d
png_get_uint_16	include/png.h	2716;"	d
png_get_uint_32	include/png.h	2715;"	d
png_info	include/png.h	/^} png_info;$/;"	t	typeref:struct:png_info_struct
png_info_init	include/png.h	1556;"	d
png_info_init	include/png.h	1557;"	d
png_info_struct	include/png.h	/^typedef struct png_info_struct$/;"	s
png_infop	include/png.h	/^typedef png_info FAR * png_infop;$/;"	t
png_infopp	include/png.h	/^typedef png_info FAR * FAR * png_infopp;$/;"	t
png_infopp_NULL	include/png.h	502;"	d
png_infopp_NULL	include/png.h	518;"	d
png_int_16	include/pngconf.h	/^typedef short png_int_16;$/;"	t
png_int_16p	include/pngconf.h	/^typedef png_int_16      FAR * png_int_16p;$/;"	t
png_int_16pp	include/pngconf.h	/^typedef png_int_16      FAR * FAR * png_int_16pp;$/;"	t
png_int_32	include/pngconf.h	/^typedef long png_int_32;$/;"	t
png_int_32p	include/pngconf.h	/^typedef png_int_32      FAR * png_int_32p;$/;"	t
png_int_32pp	include/pngconf.h	/^typedef png_int_32      FAR * FAR * png_int_32pp;$/;"	t
png_jmpbuf	include/pngconf.h	1422;"	d
png_jmpbuf	include/pngconf.h	1424;"	d
png_libpng_ver	include/png.h	537;"	d
png_malloc_ptr	include/png.h	/^typedef png_voidp (*png_malloc_ptr) PNGARG((png_structp, png_size_t));$/;"	t
png_malloc_ptr_NULL	include/png.h	503;"	d
png_malloc_ptr_NULL	include/png.h	519;"	d
png_malloc_warn	include/png.h	2050;"	d
png_memcmp	include/pngconf.h	1436;"	d
png_memcmp	include/pngconf.h	1464;"	d
png_memcpy	include/pngconf.h	1437;"	d
png_memcpy	include/pngconf.h	1465;"	d
png_memset	include/pngconf.h	1438;"	d
png_memset	include/pngconf.h	1466;"	d
png_progressive_end_ptr	include/png.h	/^typedef void (PNGAPI *png_progressive_end_ptr) PNGARG((png_structp, png_infop));$/;"	t
png_progressive_info_ptr	include/png.h	/^typedef void (PNGAPI *png_progressive_info_ptr) PNGARG((png_structp, png_infop));$/;"	t
png_progressive_row_ptr	include/png.h	/^typedef void (PNGAPI *png_progressive_row_ptr) PNGARG((png_structp, png_bytep,$/;"	t
png_read_init	include/png.h	2944;"	d
png_read_init	include/png.h	2945;"	d
png_read_status_ptr	include/png.h	/^typedef void (PNGAPI *png_read_status_ptr) PNGARG((png_structp, png_uint_32,$/;"	t
png_read_status_ptr_NULL	include/png.h	504;"	d
png_read_status_ptr_NULL	include/png.h	520;"	d
png_row_info	include/png.h	/^} png_row_info;$/;"	t	typeref:struct:png_row_info_struct
png_row_info_struct	include/png.h	/^typedef struct png_row_info_struct$/;"	s
png_row_infop	include/png.h	/^typedef png_row_info FAR * png_row_infop;$/;"	t
png_row_infopp	include/png.h	/^typedef png_row_info FAR * FAR * png_row_infopp;$/;"	t
png_rw_ptr	include/png.h	/^typedef void (PNGAPI *png_rw_ptr) PNGARG((png_structp, png_bytep, png_size_t));$/;"	t
png_rw_ptr_NULL	include/png.h	505;"	d
png_rw_ptr_NULL	include/png.h	521;"	d
png_sPLT_entry	include/png.h	/^} png_sPLT_entry;$/;"	t	typeref:struct:png_sPLT_entry_struct
png_sPLT_entry_struct	include/png.h	/^typedef struct png_sPLT_entry_struct$/;"	s
png_sPLT_entryp	include/png.h	/^typedef png_sPLT_entry FAR * png_sPLT_entryp;$/;"	t
png_sPLT_entrypp	include/png.h	/^typedef png_sPLT_entry FAR * FAR * png_sPLT_entrypp;$/;"	t
png_sPLT_struct	include/png.h	/^typedef struct png_sPLT_struct$/;"	s
png_sPLT_t	include/png.h	/^} png_sPLT_t;$/;"	t	typeref:struct:png_sPLT_struct
png_sPLT_tp	include/png.h	/^typedef png_sPLT_t FAR * png_sPLT_tp;$/;"	t
png_sPLT_tpp	include/png.h	/^typedef png_sPLT_t FAR * FAR * png_sPLT_tpp;$/;"	t
png_size_t	include/pngconf.h	/^   typedef PNG_SIZE_T png_size_t;$/;"	t
png_size_t	include/pngconf.h	/^   typedef size_t png_size_t;$/;"	t
png_sizeof	include/pngconf.h	1126;"	d
png_sizeof	include/pngconf.h	1129;"	d
png_snprintf	include/pngconf.h	1434;"	d
png_snprintf	include/pngconf.h	1444;"	d
png_snprintf	include/pngconf.h	1448;"	d
png_snprintf	include/pngconf.h	1458;"	d
png_snprintf2	include/pngconf.h	1445;"	d
png_snprintf2	include/pngconf.h	1449;"	d
png_snprintf2	include/pngconf.h	1459;"	d
png_snprintf6	include/pngconf.h	1446;"	d
png_snprintf6	include/pngconf.h	1450;"	d
png_snprintf6	include/pngconf.h	1460;"	d
png_strlen	include/pngconf.h	1435;"	d
png_strlen	include/pngconf.h	1463;"	d
png_struct	include/png.h	/^typedef struct png_struct_def png_struct;$/;"	t	typeref:struct:png_struct_def
png_struct_def	include/png.h	/^struct png_struct_def$/;"	s
png_structp	include/png.h	/^typedef png_struct FAR * png_structp;$/;"	t
png_structp_NULL	include/png.h	506;"	d
png_structp_NULL	include/png.h	522;"	d
png_structpp	include/png.h	/^typedef png_struct FAR * FAR * png_structpp;$/;"	t
png_text	include/png.h	/^} png_text;$/;"	t	typeref:struct:png_text_struct
png_text_struct	include/png.h	/^typedef struct png_text_struct$/;"	s
png_textp	include/png.h	/^typedef png_text FAR * png_textp;$/;"	t
png_textpp	include/png.h	/^typedef png_text FAR * FAR * png_textpp;$/;"	t
png_time	include/png.h	/^} png_time;$/;"	t	typeref:struct:png_time_struct
png_time_struct	include/png.h	/^typedef struct png_time_struct$/;"	s
png_timep	include/png.h	/^typedef png_time FAR * png_timep;$/;"	t
png_timepp	include/png.h	/^typedef png_time FAR * FAR * png_timepp;$/;"	t
png_uint_16	include/pngconf.h	/^typedef unsigned short png_uint_16;$/;"	t
png_uint_16p	include/pngconf.h	/^typedef png_uint_16     FAR * png_uint_16p;$/;"	t
png_uint_16p_NULL	include/png.h	507;"	d
png_uint_16p_NULL	include/png.h	523;"	d
png_uint_16pp	include/pngconf.h	/^typedef png_uint_16     FAR * FAR * png_uint_16pp;$/;"	t
png_uint_32	include/pngconf.h	/^typedef unsigned long png_uint_32;$/;"	t
png_uint_32p	include/pngconf.h	/^typedef png_uint_32     FAR * png_uint_32p;$/;"	t
png_uint_32pp	include/pngconf.h	/^typedef png_uint_32     FAR * FAR * png_uint_32pp;$/;"	t
png_unknown_chunk	include/png.h	/^png_unknown_chunk;$/;"	t	typeref:struct:png_unknown_chunk_t
png_unknown_chunk_ptr	include/png.h	/^typedef void (PNGAPI *png_unknown_chunk_ptr) PNGARG((png_structp));$/;"	t
png_unknown_chunk_t	include/png.h	/^typedef struct png_unknown_chunk_t$/;"	s
png_unknown_chunkp	include/png.h	/^typedef png_unknown_chunk FAR * png_unknown_chunkp;$/;"	t
png_unknown_chunkpp	include/png.h	/^typedef png_unknown_chunk FAR * FAR * png_unknown_chunkpp;$/;"	t
png_user_chunk_ptr	include/png.h	/^typedef int (PNGAPI *png_user_chunk_ptr) PNGARG((png_structp, png_unknown_chunkp));$/;"	t
png_user_transform_ptr	include/png.h	/^typedef void (PNGAPI *png_user_transform_ptr) PNGARG((png_structp,$/;"	t
png_voidp	include/pngconf.h	/^typedef void            FAR * png_voidp;$/;"	t
png_voidp_NULL	include/png.h	508;"	d
png_voidp_NULL	include/png.h	524;"	d
png_write_init	include/png.h	2962;"	d
png_write_init	include/png.h	2963;"	d
png_write_status_ptr	include/png.h	/^typedef void (PNGAPI *png_write_status_ptr) PNGARG((png_structp, png_uint_32,$/;"	t
png_write_status_ptr_NULL	include/png.h	509;"	d
png_write_status_ptr_NULL	include/png.h	525;"	d
png_zcharp	include/pngconf.h	/^typedef charf *         png_zcharp;$/;"	t
png_zcharpp	include/pngconf.h	/^typedef charf * FAR *   png_zcharpp;$/;"	t
png_zstreamp	include/pngconf.h	/^typedef z_stream FAR *  png_zstreamp;$/;"	t
pnpoly	Rectangle.cpp	/^bool pnpoly(int nvert, Vec2f vertices[], float testx, float testy) {$/;"	f
post_display	StableFluids.cpp	/^static void post_display(void) {$/;"	f	file:
post_display	particles/TinkerToy.cpp	/^static void post_display(void) {$/;"	f	file:
pre_display	StableFluids.cpp	/^static void pre_display(void) {$/;"	f	file:
pre_display	particles/TinkerToy.cpp	/^static void pre_display(void) {$/;"	f	file:
prev_filters	include/png.h	/^   png_bytep prev_filters;           \/* filter type(s) of previous row(s) *\/$/;"	m	struct:png_struct_def
prev_row	include/png.h	/^   png_bytep prev_row;        \/* buffer to save previous (unfiltered) row *\/$/;"	m	struct:png_struct_def
process_mode	include/png.h	/^   int process_mode;                 \/* what push library is currently doing *\/$/;"	m	struct:png_struct_def
proj	include/gfx/vec3.h	/^template<class T> inline TVec2<T> proj(const TVec3<T>& v)$/;"	f	namespace:gfx
proj	include/gfx/vec4.h	/^template<class T> inline TVec3<T> proj(const TVec4<T>& v)$/;"	f	namespace:gfx
project	VectorField.cpp	/^void project(VectorField *a_SrcField, VectorField *VelocityField) {$/;"	f
push_length	include/png.h	/^   png_uint_32 push_length;          \/* size of current input chunk *\/$/;"	m	struct:png_struct_def
random1	include/gfx/gfx.h	/^  inline double random1() { return (double)random() \/ (double)LONG_MAX; }$/;"	f	namespace:gfx
random_byte	include/gfx/gfx.h	/^  inline char   random_byte() { return (char)(random() & 0xff); }$/;"	f	namespace:gfx
read_data_fn	include/png.h	/^   png_rw_ptr read_data_fn;   \/* function for reading input data *\/$/;"	m	struct:png_struct_def
read_row_fn	include/png.h	/^   png_read_status_ptr read_row_fn;   \/* called after each row is decoded *\/$/;"	m	struct:png_struct_def
read_user_chunk_fn	include/png.h	/^   png_user_chunk_ptr read_user_chunk_fn; \/* user read chunk handler *\/$/;"	m	struct:png_struct_def
read_user_transform_fn	include/png.h	/^   png_user_transform_ptr read_user_transform_fn; \/* user read transform *\/$/;"	m	struct:png_struct_def
red	include/png.h	/^   png_byte red;   \/* for use in red green blue files *\/$/;"	m	struct:png_color_8_struct
red	include/png.h	/^   png_byte red;$/;"	m	struct:png_color_struct
red	include/png.h	/^   png_uint_16 red;   \/* for use in red green blue files *\/$/;"	m	struct:png_color_16_struct
red	include/png.h	/^   png_uint_16 red;$/;"	m	struct:png_sPLT_entry_struct
remap_GUI	particles/TinkerToy.cpp	/^static void remap_GUI() {$/;"	f	file:
reserved	include/zlib.h	/^    uLong   reserved;   \/* reserved for future use *\/$/;"	m	struct:z_stream_s
reset	particles/Particle.cpp	/^void Particle::reset()$/;"	f	class:Particle
reshape_func	StableFluids.cpp	/^static void reshape_func(int width, int height) {$/;"	f	file:
reshape_func	particles/TinkerToy.cpp	/^static void reshape_func(int width, int height) {$/;"	f	file:
rgb_to_gray_blue_coeff	include/png.h	/^   png_uint_16 rgb_to_gray_blue_coeff;$/;"	m	struct:png_struct_def
rgb_to_gray_green_coeff	include/png.h	/^   png_uint_16 rgb_to_gray_green_coeff;$/;"	m	struct:png_struct_def
rgb_to_gray_red_coeff	include/png.h	/^   png_uint_16 rgb_to_gray_red_coeff;$/;"	m	struct:png_struct_def
rgb_to_gray_status	include/png.h	/^   png_byte rgb_to_gray_status;$/;"	m	struct:png_struct_def
rint	include/gfx/gfx.h	/^inline double rint(double x) { return floor(x + 0.5); }$/;"	f
rotation_matrix_deg	include/gfx/mat4.h	/^inline Mat4 rotation_matrix_deg(double theta, const Vec3& axis)$/;"	f	namespace:gfx
row	include/gfx/mat2.h	/^    Vec2 row[2];$/;"	m	class:gfx::Mat2
row	include/gfx/mat3.h	/^    Vec3 row[3];$/;"	m	class:gfx::Mat3
row	include/gfx/mat4.h	/^    Vec4 row[4];$/;"	m	class:gfx::Mat4
row	include/gfx/symmat2.h	/^inline Vec2 SymMat2::row(int i) const$/;"	f	class:gfx::SymMat2
row	include/gfx/symmat3.h	/^inline Vec3 SymMat3::row(int i) const$/;"	f	class:gfx::SymMat3
row	include/gfx/symmat4.h	/^inline Vec4 SymMat4::row(int i) const$/;"	f	class:gfx::SymMat4
row_buf	include/png.h	/^   png_bytep row_buf;         \/* buffer to save current (unfiltered) row *\/$/;"	m	struct:png_struct_def
row_buf_size	include/png.h	/^   png_uint_32 row_buf_size;$/;"	m	struct:png_struct_def
row_extend	include/gfx/mat3.h	/^inline Mat3 row_extend(const Vec3& v) { return Mat3(v, v, v); }$/;"	f	namespace:gfx
row_fn	include/png.h	/^   png_progressive_row_ptr row_fn;   \/* called after each prog. row is decoded *\/$/;"	m	struct:png_struct_def
row_info	include/png.h	/^   png_row_info row_info;     \/* used for transformation routines *\/$/;"	m	struct:png_struct_def
row_number	include/png.h	/^   png_uint_32 row_number;    \/* current row in interlace pass *\/$/;"	m	struct:png_struct_def
row_pointers	include/png.h	/^   png_bytepp row_pointers;        \/* the image bits *\/$/;"	m	struct:png_info_struct
rowbytes	include/png.h	/^   png_uint_32 rowbytes;      \/* size of row in bytes *\/$/;"	m	struct:png_struct_def
rowbytes	include/png.h	/^   png_uint_32 rowbytes;    \/* bytes needed to hold an untransformed row *\/$/;"	m	struct:png_info_struct
rowbytes	include/png.h	/^   png_uint_32 rowbytes; \/* number of bytes in row *\/$/;"	m	struct:png_row_info_struct
s	include/gfx/quat.h	/^    double s;			\/\/ Scalar component$/;"	m	class:gfx::Quat
saveImageRGBA	imageio.cpp	/^bool saveImageRGBA(char *fileName, unsigned char *buffer, int width, int height) {$/;"	f
saveImageRGBA	particles/imageio.cpp	/^bool saveImageRGBA(char *fileName, unsigned char *buffer, int width, int height) {$/;"	f
save_buffer	include/png.h	/^   png_bytep save_buffer;            \/* buffer for previously read data *\/$/;"	m	struct:png_struct_def
save_buffer_max	include/png.h	/^   png_size_t save_buffer_max;       \/* total size of save_buffer *\/$/;"	m	struct:png_struct_def
save_buffer_ptr	include/png.h	/^   png_bytep save_buffer_ptr;        \/* current location in save_buffer *\/$/;"	m	struct:png_struct_def
save_buffer_size	include/png.h	/^   png_size_t save_buffer_size;      \/* amount of data now in save_buffer *\/$/;"	m	struct:png_struct_def
scal_pixel_height	include/png.h	/^   double scal_pixel_height;   \/* height of one pixel *\/$/;"	m	struct:png_info_struct
scal_pixel_width	include/png.h	/^   double scal_pixel_width;    \/* width of one pixel *\/$/;"	m	struct:png_info_struct
scal_s_height	include/png.h	/^   png_charp scal_s_height;    \/* string containing width *\/$/;"	m	struct:png_info_struct
scal_s_width	include/png.h	/^   png_charp scal_s_width;     \/* string containing height *\/$/;"	m	struct:png_info_struct
scal_unit	include/png.h	/^   png_byte scal_unit;         \/* unit of physical scale *\/$/;"	m	struct:png_info_struct
scalar	include/gfx/quat.h	/^    double      scalar() const { return s; }$/;"	f	class:gfx::Quat
scalar	include/gfx/quat.h	/^    double&     scalar()       { return s; }$/;"	f	class:gfx::Quat
screen_gamma	include/png.h	/^   float screen_gamma;   \/* screen gamma value (display_exponent) *\/$/;"	m	struct:png_struct_def
second	include/png.h	/^   png_byte second;  \/* second of minute, 0 - 60 (for leap seconds) *\/$/;"	m	struct:png_time_struct
set_bnd	ScalarField.cpp	/^void set_bnd(int b, ScalarField *vect) {$/;"	f
set_bnd	VectorField.cpp	/^void set_bnd(int b, VectorField *vect, int lr) {$/;"	f
shift	include/png.h	/^   png_color_8 shift;         \/* shift for significant bit tranformation *\/$/;"	m	struct:png_struct_def
sig_bit	include/png.h	/^   png_color_8 sig_bit;       \/* significant bits in each available channel *\/$/;"	m	struct:png_struct_def
sig_bit	include/png.h	/^   png_color_8 sig_bit; \/* significant bits in color channels *\/$/;"	m	struct:png_info_struct
sig_bytes	include/png.h	/^   png_byte sig_bytes;        \/* magic bytes read\/written from start of file *\/$/;"	m	struct:png_struct_def
signature	include/png.h	/^   png_byte signature[8];   \/* magic bytes read by libpng from start of file *\/$/;"	m	struct:png_info_struct
simulation_step	particles/Solver.cpp	/^void simulation_step(std::vector< Particle * > pVector, std::vector< Force * > fVector, float dt, std::vector< Constraint * > constraints, VectorField *VelocityField) {$/;"	f
size	include/gfx/symmat2.h	/^    static int size() { return 3; }$/;"	f	class:gfx::SymMat2
size	include/gfx/symmat3.h	/^    static int size() { return 6; }$/;"	f	class:gfx::SymMat3
size	include/gfx/symmat4.h	/^    static int size() {return 10;} $/;"	f	class:gfx::SymMat4
size	include/png.h	/^    png_size_t size;$/;"	m	struct:png_unknown_chunk_t
skip_length	include/png.h	/^   png_uint_32 skip_length;          \/* bytes to skip in input data *\/$/;"	m	struct:png_struct_def
solve	particles/ConstraintSolver.cpp	/^void solve(std::vector< Particle * > particles, std::vector< Constraint * > constraints, float Ks, float Kd) {$/;"	f
solver	particles/TinkerToy.cpp	/^int solver = 3; \/\/ The solver to use: 1: Euler, 2: Midpoint, 3: Runge-Kutta$/;"	v
source	StableFluids.cpp	/^static float force, source;$/;"	v	file:
spare_byte	include/png.h	/^   png_byte spare_byte;     \/* to align the data, and for future use *\/$/;"	m	struct:png_info_struct
splt_palettes	include/png.h	/^   png_sPLT_tp splt_palettes;$/;"	m	struct:png_info_struct
splt_palettes_num	include/png.h	/^   png_uint_32 splt_palettes_num;$/;"	m	struct:png_info_struct
srgb_intent	include/png.h	/^   png_byte srgb_intent; \/* sRGB rendering intent [0, 1, 2, or 3] *\/$/;"	m	struct:png_info_struct
state	include/zlib.h	/^    struct internal_state FAR *state; \/* not visible by applications *\/$/;"	m	struct:z_stream_s	typeref:struct:z_stream_s::FAR
sub_row	include/png.h	/^   png_bytep sub_row;         \/* buffer to save "sub" row when filtering *\/$/;"	m	struct:png_struct_def
subtract	particles/ConstraintSolver.cpp	/^std::vector< float > subtract(std::vector< float > A, std::vector< float > B) {$/;"	f
tet_normal	include/gfx/geom4d.h	/^inline Vec tet_normal(const Vec& v1, const Vec& v2, const Vec& v3, const Vec& v4)$/;"	f	namespace:gfx
tet_raw_normal	include/gfx/geom4d.h	/^inline Vec tet_raw_normal(const Vec& v1, const Vec& v2, const Vec& v3, const Vec& v4)$/;"	f	namespace:gfx
text	include/png.h	/^   png_charp text;         \/* comment, may be an empty string (ie "")$/;"	m	struct:png_text_struct
text	include/png.h	/^   png_textp text; \/* array of comments read\/to write *\/$/;"	m	struct:png_info_struct
text	include/zlib.h	/^    int     text;       \/* true if compressed data believed to be text *\/$/;"	m	struct:gz_header_s
text_length	include/png.h	/^   png_size_t text_length; \/* length of the text string *\/$/;"	m	struct:png_text_struct
time	include/zlib.h	/^    uLong   time;       \/* modification time *\/$/;"	m	struct:gz_header_s
time_buffer	include/png.h	/^   png_charp time_buffer;            \/* String to hold RFC 1123 time text *\/$/;"	m	struct:png_struct_def
total_in	include/zlib.h	/^    uLong    total_in;  \/* total nb of input bytes read so far *\/$/;"	m	struct:z_stream_s
total_out	include/zlib.h	/^    uLong    total_out; \/* total nb of bytes output so far *\/$/;"	m	struct:z_stream_s
trace	include/gfx/mat2.h	/^inline double trace(const Mat2 &m)$/;"	f	namespace:gfx
trace	include/gfx/mat3.h	/^inline double trace(const Mat3& m) { return m(0,0) + m(1,1) + m(2,2); }$/;"	f	namespace:gfx
trace	include/gfx/mat4.h	/^inline double trace(const Mat4& m) { return m(0,0)+m(1,1)+m(2,2)+m(3,3); }$/;"	f	namespace:gfx
trace	include/gfx/symmat2.h	/^inline double trace(const SymMat2& m) { return m(0,0) + m(1,1); }$/;"	f	namespace:gfx
trace	include/gfx/symmat3.h	/^inline double trace(const SymMat3& m) { return m(0,0) + m(1,1) + m(2,2); }$/;"	f	namespace:gfx
trace	include/gfx/symmat4.h	/^inline double trace(const SymMat4& m) { return m(0,0)+m(1,1)+m(2,2)+m(3,3); }$/;"	f	namespace:gfx
trans	include/png.h	/^   png_bytep trans;           \/* transparency values for paletted files *\/$/;"	m	struct:png_struct_def
trans	include/png.h	/^   png_bytep trans; \/* transparent values for paletted image *\/$/;"	m	struct:png_info_struct
trans_values	include/png.h	/^   png_color_16 trans_values; \/* transparency values for non-paletted files *\/$/;"	m	struct:png_struct_def
trans_values	include/png.h	/^   png_color_16 trans_values; \/* transparent color for non-palette image *\/$/;"	m	struct:png_info_struct
transformations	include/png.h	/^   png_uint_32 transformations; \/* which transformations to perform *\/$/;"	m	struct:png_struct_def
transpose	include/gfx/mat2.h	/^inline Mat2 transpose(const Mat2 &m)$/;"	f	namespace:gfx
transpose	include/gfx/mat3.h	/^inline Mat3 transpose(const Mat3& m)$/;"	f	namespace:gfx
transpose	include/gfx/mat4.h	/^inline Mat4 transpose(const Mat4& m)$/;"	f	namespace:gfx
transpose	include/gfx/symmat2.h	/^inline SymMat2 transpose(const SymMat2& m) { return m; }$/;"	f	namespace:gfx
transpose	include/gfx/symmat3.h	/^inline SymMat3 transpose(const SymMat3& m) { return m; }$/;"	f	namespace:gfx
transpose	include/gfx/symmat4.h	/^inline SymMat4 transpose(const SymMat4& m) { return m; }$/;"	f	namespace:gfx
triangle_area	include/gfx/geom3d.h	/^    triangle_area(const Vec& v1,const Vec& v2,const Vec& v3)$/;"	f	namespace:gfx
triangle_compactness	include/gfx/geom3d.h	/^    triangle_compactness(const Vec& v1, const Vec& v2, const Vec& v3)$/;"	f	namespace:gfx
triangle_normal	include/gfx/geom3d.h	/^inline Vec triangle_normal(const Vec& v1, const Vec& v2, const Vec& v3)$/;"	f	namespace:gfx
triangle_plane	include/gfx/geom3d.h	/^inline Plane triangle_plane(const Vec& v1, const Vec& v2, const Vec& v3)$/;"	f	namespace:gfx
triangle_raw_normal	include/gfx/geom3d.h	/^inline Vec triangle_raw_normal(const Vec& v1, const Vec& v2, const Vec& v3)$/;"	f	namespace:gfx
triangle_raw_plane	include/gfx/geom3d.h	/^inline Plane triangle_raw_plane(const Vec& v1, const Vec& v2, const Vec& v3)$/;"	f	namespace:gfx
true	include/gfx/gfx.h	/^const bool true = 1;$/;"	v
uInt	include/zconf.h	/^typedef unsigned int   uInt;  \/* 16 bits or more *\/$/;"	t
uInt	include/zconf.h	51;"	d
uIntf	include/zconf.h	/^typedef uInt  FAR uIntf;$/;"	t
uIntf	include/zconf.h	56;"	d
uLong	include/zconf.h	/^typedef unsigned long  uLong; \/* 32 bits or more *\/$/;"	t
uLong	include/zconf.h	52;"	d
uLongf	include/zconf.h	/^typedef uLong FAR uLongf;$/;"	t
uLongf	include/zconf.h	57;"	d
uncompress	include/zconf.h	40;"	d
unitize	include/gfx/quat.h	/^inline Quat& unitize(Quat& q)  { q \/= sqrt(norm(q)); return q; }$/;"	f	namespace:gfx
unitize	include/gfx/vec2.h	/^template<class T> inline void unitize(TVec2<T>& v)$/;"	f	namespace:gfx
unitize	include/gfx/vec3.h	/^template<class T> inline void unitize(TVec3<T>& v)$/;"	f	namespace:gfx
unitize	include/gfx/vec4.h	/^template<class T> inline void unitize(TVec4<T>& v)$/;"	f	namespace:gfx
unknown_chunk	include/png.h	/^   png_unknown_chunk unknown_chunk;$/;"	m	struct:png_struct_def
unknown_chunks	include/png.h	/^   png_unknown_chunkp unknown_chunks;$/;"	m	struct:png_info_struct
unknown_chunks_num	include/png.h	/^   png_size_t unknown_chunks_num;$/;"	m	struct:png_info_struct
up_row	include/png.h	/^   png_bytep up_row;          \/* buffer to save "up" row when filtering *\/$/;"	m	struct:png_struct_def
update_bbox	include/gfx/geom3d.h	/^void update_bbox(Vec& min, Vec& max, const List& items)$/;"	f	namespace:gfx
user_chunk_ptr	include/png.h	/^   png_voidp user_chunk_ptr;$/;"	m	struct:png_struct_def
user_height_max	include/png.h	/^   png_uint_32 user_height_max;$/;"	m	struct:png_struct_def
user_transform_channels	include/png.h	/^   png_byte user_transform_channels; \/* channels in user transformed pixels *\/$/;"	m	struct:png_struct_def
user_transform_depth	include/png.h	/^   png_byte user_transform_depth;    \/* bit depth of user transformed pixels *\/$/;"	m	struct:png_struct_def
user_transform_ptr	include/png.h	/^   png_voidp user_transform_ptr; \/* user supplied struct for user transform *\/$/;"	m	struct:png_struct_def
user_width_max	include/png.h	/^   png_uint_32 user_width_max;$/;"	m	struct:png_struct_def
usr_bit_depth	include/png.h	/^   png_byte usr_bit_depth;    \/* bit depth of users row *\/$/;"	m	struct:png_struct_def
usr_channels	include/png.h	/^   png_byte usr_channels;     \/* channels at start of write *\/$/;"	m	struct:png_struct_def
usr_width	include/png.h	/^   png_uint_32 usr_width;     \/* width of row at start of write *\/$/;"	m	struct:png_struct_def
v	include/gfx/quat.h	/^    Vec3 v;			\/\/ Vector component$/;"	m	class:gfx::Quat
valid	include/png.h	/^   png_uint_32 valid;       \/* valid chunk data (see PNG_INFO_ below) *\/$/;"	m	struct:png_info_struct
value_type	include/gfx/mat2.h	/^    typedef double value_type;$/;"	t	class:gfx::Mat2
value_type	include/gfx/mat3.h	/^    typedef double value_type;$/;"	t	class:gfx::Mat3
value_type	include/gfx/mat4.h	/^    typedef double value_type;$/;"	t	class:gfx::Mat4
value_type	include/gfx/symmat2.h	/^    typedef double value_type;$/;"	t	class:gfx::SymMat2
value_type	include/gfx/symmat3.h	/^    typedef double value_type;$/;"	t	class:gfx::SymMat3
value_type	include/gfx/symmat4.h	/^    typedef double value_type;$/;"	t	class:gfx::SymMat4
value_type	include/gfx/vec2.h	/^    typedef T value_type;$/;"	t	class:gfx::TVec2
value_type	include/gfx/vec3.h	/^    typedef T value_type;$/;"	t	class:gfx::TVec3
value_type	include/gfx/vec4.h	/^    typedef T value_type;$/;"	t	class:gfx::TVec4
vecAddEqual	particles/linearSolver.cpp	/^void vecAddEqual(int n, double r[], double v[])$/;"	f
vecAssign	particles/linearSolver.cpp	/^void vecAssign(int n, double v1[], double v2[])$/;"	f
vecDiffEqual	particles/linearSolver.cpp	/^void vecDiffEqual(int n, double r[], double v[])$/;"	f
vecDot	particles/linearSolver.cpp	/^double vecDot(int n, double v1[], double v2[])$/;"	f
vecSqrLen	particles/linearSolver.cpp	/^double vecSqrLen(int n, double v[])$/;"	f
vecTimesScalar	particles/linearSolver.cpp	/^void vecTimesScalar(int n, double v[], double s)$/;"	f
vector	include/gfx/quat.h	/^    Vec3&       vector()       { return v; }$/;"	f	class:gfx::Quat
vector	include/gfx/quat.h	/^    const Vec3& vector() const { return v; }$/;"	f	class:gfx::Quat
vector_type	include/gfx/mat2.h	/^    typedef Vec2 vector_type;$/;"	t	class:gfx::Mat2
vector_type	include/gfx/mat3.h	/^    typedef Vec3 vector_type;$/;"	t	class:gfx::Mat3
vector_type	include/gfx/mat4.h	/^    typedef Vec4 vector_type;$/;"	t	class:gfx::Mat4
vector_type	include/gfx/symmat2.h	/^    typedef Vec2 vector_type;$/;"	t	class:gfx::SymMat2
vector_type	include/gfx/symmat3.h	/^    typedef Vec3 vector_type;$/;"	t	class:gfx::SymMat3
vector_type	include/gfx/symmat4.h	/^    typedef Vec4 vector_type;$/;"	t	class:gfx::SymMat4
version_1_2_31	include/png.h	/^typedef png_structp version_1_2_31;$/;"	t
visc	StableFluids.cpp	/^static float dt, diff, visc;$/;"	v	file:
voidp	include/zconf.h	/^   typedef Byte       *voidp;$/;"	t
voidp	include/zconf.h	/^   typedef void       *voidp;$/;"	t
voidp	include/zconf.h	59;"	d
voidpc	include/zconf.h	/^   typedef Byte const *voidpc;$/;"	t
voidpc	include/zconf.h	/^   typedef void const *voidpc;$/;"	t
voidpf	include/zconf.h	/^   typedef Byte FAR   *voidpf;$/;"	t
voidpf	include/zconf.h	/^   typedef void FAR   *voidpf;$/;"	t
voidpf	include/zconf.h	58;"	d
vorticityConfinement	VectorField.cpp	/^void vorticityConfinement(VectorField *slachtoffer) {$/;"	f
warning_fn	include/png.h	/^   png_error_ptr warning_fn;  \/* function for printing warnings *\/$/;"	m	struct:png_struct_def
wglAllocateMemoryNV	include/GL/glprocs.h	2126;"	d
wglAssociateImageBufferEventsI3D	include/GL/glprocs.h	2154;"	d
wglBeginFrameTrackingI3D	include/GL/glprocs.h	2161;"	d
wglBindDisplayColorTableEXT	include/GL/glprocs.h	2111;"	d
wglBindTexImageARB	include/GL/glprocs.h	2106;"	d
wglChoosePixelFormatARB	include/GL/glprocs.h	2098;"	d
wglChoosePixelFormatEXT	include/GL/glprocs.h	2123;"	d
wglCreateBufferRegionARB	include/GL/glprocs.h	2091;"	d
wglCreateDisplayColorTableEXT	include/GL/glprocs.h	2109;"	d
wglCreateImageBufferI3D	include/GL/glprocs.h	2152;"	d
wglCreatePbufferARB	include/GL/glprocs.h	2101;"	d
wglCreatePbufferEXT	include/GL/glprocs.h	2116;"	d
wglDeleteBufferRegionARB	include/GL/glprocs.h	2092;"	d
wglDestroyDisplayColorTableEXT	include/GL/glprocs.h	2112;"	d
wglDestroyImageBufferI3D	include/GL/glprocs.h	2153;"	d
wglDestroyPbufferARB	include/GL/glprocs.h	2104;"	d
wglDestroyPbufferEXT	include/GL/glprocs.h	2119;"	d
wglDisableFrameLockI3D	include/GL/glprocs.h	2157;"	d
wglDisableGenlockI3D	include/GL/glprocs.h	2141;"	d
wglEnableFrameLockI3D	include/GL/glprocs.h	2156;"	d
wglEnableGenlockI3D	include/GL/glprocs.h	2140;"	d
wglEndFrameTrackingI3D	include/GL/glprocs.h	2162;"	d
wglFreeMemoryNV	include/GL/glprocs.h	2127;"	d
wglGenlockSampleRateI3D	include/GL/glprocs.h	2147;"	d
wglGenlockSourceDelayI3D	include/GL/glprocs.h	2149;"	d
wglGenlockSourceEdgeI3D	include/GL/glprocs.h	2145;"	d
wglGenlockSourceI3D	include/GL/glprocs.h	2143;"	d
wglGetCurrentReadDCARB	include/GL/glprocs.h	2100;"	d
wglGetCurrentReadDCEXT	include/GL/glprocs.h	2115;"	d
wglGetDigitalVideoParametersI3D	include/GL/glprocs.h	2134;"	d
wglGetExtensionsStringARB	include/GL/glprocs.h	2095;"	d
wglGetExtensionsStringEXT	include/GL/glprocs.h	2113;"	d
wglGetFrameUsageI3D	include/GL/glprocs.h	2160;"	d
wglGetGammaTableI3D	include/GL/glprocs.h	2138;"	d
wglGetGammaTableParametersI3D	include/GL/glprocs.h	2136;"	d
wglGetGenlockSampleRateI3D	include/GL/glprocs.h	2148;"	d
wglGetGenlockSourceDelayI3D	include/GL/glprocs.h	2150;"	d
wglGetGenlockSourceEdgeI3D	include/GL/glprocs.h	2146;"	d
wglGetGenlockSourceI3D	include/GL/glprocs.h	2144;"	d
wglGetMscRateOML	include/GL/glprocs.h	2129;"	d
wglGetPbufferDCARB	include/GL/glprocs.h	2102;"	d
wglGetPbufferDCEXT	include/GL/glprocs.h	2117;"	d
wglGetPixelFormatAttribfvARB	include/GL/glprocs.h	2097;"	d
wglGetPixelFormatAttribfvEXT	include/GL/glprocs.h	2122;"	d
wglGetPixelFormatAttribivARB	include/GL/glprocs.h	2096;"	d
wglGetPixelFormatAttribivEXT	include/GL/glprocs.h	2121;"	d
wglGetProcAddress	include/GL/glprocs.c	48;"	d	file:
wglGetSwapIntervalEXT	include/GL/glprocs.h	2125;"	d
wglGetSyncValuesOML	include/GL/glprocs.h	2128;"	d
wglIsEnabledFrameLockI3D	include/GL/glprocs.h	2158;"	d
wglIsEnabledGenlockI3D	include/GL/glprocs.h	2142;"	d
wglLoadDisplayColorTableEXT	include/GL/glprocs.h	2110;"	d
wglMakeContextCurrentARB	include/GL/glprocs.h	2099;"	d
wglMakeContextCurrentEXT	include/GL/glprocs.h	2114;"	d
wglQueryFrameLockMasterI3D	include/GL/glprocs.h	2159;"	d
wglQueryFrameTrackingI3D	include/GL/glprocs.h	2163;"	d
wglQueryGenlockMaxSourceDelayI3D	include/GL/glprocs.h	2151;"	d
wglQueryPbufferARB	include/GL/glprocs.h	2105;"	d
wglQueryPbufferEXT	include/GL/glprocs.h	2120;"	d
wglReleaseImageBufferEventsI3D	include/GL/glprocs.h	2155;"	d
wglReleasePbufferDCARB	include/GL/glprocs.h	2103;"	d
wglReleasePbufferDCEXT	include/GL/glprocs.h	2118;"	d
wglReleaseTexImageARB	include/GL/glprocs.h	2107;"	d
wglRestoreBufferRegionARB	include/GL/glprocs.h	2094;"	d
wglSaveBufferRegionARB	include/GL/glprocs.h	2093;"	d
wglSetDigitalVideoParametersI3D	include/GL/glprocs.h	2135;"	d
wglSetGammaTableI3D	include/GL/glprocs.h	2139;"	d
wglSetGammaTableParametersI3D	include/GL/glprocs.h	2137;"	d
wglSetPbufferAttribARB	include/GL/glprocs.h	2108;"	d
wglSwapBuffersMscOML	include/GL/glprocs.h	2130;"	d
wglSwapIntervalEXT	include/GL/glprocs.h	2124;"	d
wglSwapLayerBuffersMscOML	include/GL/glprocs.h	2131;"	d
wglWaitForMscOML	include/GL/glprocs.h	2132;"	d
wglWaitForSbcOML	include/GL/glprocs.h	2133;"	d
width	Rectangle.h	/^    float width;$/;"	m	class:Rectangle
width	include/png.h	/^   png_uint_32 width;         \/* width of image in pixels *\/$/;"	m	struct:png_struct_def
width	include/png.h	/^   png_uint_32 width;       \/* width of image in pixels (from IHDR) *\/$/;"	m	struct:png_info_struct
width	include/png.h	/^   png_uint_32 width; \/* width of row *\/$/;"	m	struct:png_row_info_struct
win_id	StableFluids.cpp	/^static int win_id;$/;"	v	file:
win_id	particles/TinkerToy.cpp	/^static int win_id;$/;"	v	file:
win_x	StableFluids.cpp	/^static int win_x, win_y;$/;"	v	file:
win_x	particles/TinkerToy.cpp	/^static int win_x, win_y;$/;"	v	file:
win_y	StableFluids.cpp	/^static int win_x, win_y;$/;"	v	file:
win_y	particles/TinkerToy.cpp	/^static int win_x, win_y;$/;"	v	file:
write_data_fn	include/png.h	/^   png_rw_ptr write_data_fn;  \/* function for writing output data *\/$/;"	m	struct:png_struct_def
write_row_fn	include/png.h	/^   png_write_status_ptr write_row_fn; \/* called after each row is encoded *\/$/;"	m	struct:png_struct_def
write_user_transform_fn	include/png.h	/^   png_user_transform_ptr write_user_transform_fn; \/* user write transform *\/$/;"	m	struct:png_struct_def
x_blue	include/png.h	/^   float x_blue;$/;"	m	struct:png_info_struct
x_green	include/png.h	/^   float x_green;$/;"	m	struct:png_info_struct
x_offset	include/png.h	/^   png_int_32 x_offset; \/* x offset on page *\/$/;"	m	struct:png_info_struct
x_pixels_per_unit	include/png.h	/^   png_uint_32 x_pixels_per_unit; \/* horizontal pixel density *\/$/;"	m	struct:png_info_struct
x_red	include/png.h	/^   float x_red;$/;"	m	struct:png_info_struct
x_white	include/png.h	/^   float x_white;$/;"	m	struct:png_info_struct
xflags	include/zlib.h	/^    int     xflags;     \/* extra flags (not used when writing a gzip file) *\/$/;"	m	struct:gz_header_s
y_blue	include/png.h	/^   float y_blue;$/;"	m	struct:png_info_struct
y_green	include/png.h	/^   float y_green;$/;"	m	struct:png_info_struct
y_offset	include/png.h	/^   png_int_32 y_offset; \/* y offset on page *\/$/;"	m	struct:png_info_struct
y_pixels_per_unit	include/png.h	/^   png_uint_32 y_pixels_per_unit; \/* vertical pixel density *\/$/;"	m	struct:png_info_struct
y_red	include/png.h	/^   float y_red;$/;"	m	struct:png_info_struct
y_white	include/png.h	/^   float y_white;$/;"	m	struct:png_info_struct
year	include/png.h	/^   png_uint_16 year; \/* full year, as in, 1995 *\/$/;"	m	struct:png_time_struct
zError	include/zconf.h	44;"	d
z_off_t	include/zconf.h	301;"	d
z_stream	include/zlib.h	/^} z_stream;$/;"	t	typeref:struct:z_stream_s
z_stream_s	include/zlib.h	/^typedef struct z_stream_s {$/;"	s
z_streamp	include/zlib.h	/^typedef z_stream FAR *z_streamp;$/;"	t
zalloc	include/zlib.h	/^    alloc_func zalloc;  \/* used to allocate the internal state *\/$/;"	m	struct:z_stream_s
zbuf	include/png.h	/^   png_bytep zbuf;            \/* buffer for zlib *\/$/;"	m	struct:png_struct_def
zbuf_size	include/png.h	/^   png_size_t zbuf_size;      \/* size of zbuf *\/$/;"	m	struct:png_struct_def
zfree	include/zlib.h	/^    free_func  zfree;   \/* used to free the internal state *\/$/;"	m	struct:z_stream_s
zlib_level	include/png.h	/^   int zlib_level;            \/* holds zlib compression level *\/$/;"	m	struct:png_struct_def
zlib_mem_level	include/png.h	/^   int zlib_mem_level;        \/* holds zlib compression memory level *\/$/;"	m	struct:png_struct_def
zlib_method	include/png.h	/^   int zlib_method;           \/* holds zlib compression method *\/$/;"	m	struct:png_struct_def
zlib_strategy	include/png.h	/^   int zlib_strategy;         \/* holds zlib compression strategy *\/$/;"	m	struct:png_struct_def
zlib_version	include/zlib.h	207;"	d
zlib_window_bits	include/png.h	/^   int zlib_window_bits;      \/* holds zlib compression window bits *\/$/;"	m	struct:png_struct_def
zstream	include/png.h	/^   z_stream zstream;          \/* pointer to decompression structure (below) *\/$/;"	m	struct:png_struct_def
~Constraint	particles/Constraint.h	/^    virtual ~Constraint() { }$/;"	f	class:Constraint
~FieldToolbox	FieldToolbox.cpp	/^FieldToolbox::~FieldToolbox(void) {$/;"	f	class:FieldToolbox
~Force	particles/Force.h	/^	virtual ~Force(){}$/;"	f	class:Force
~Particle	particles/Particle.cpp	/^Particle::~Particle(void)$/;"	f	class:Particle
~RigidBody	RigidBody.h	/^    virtual ~RigidBody() { }$/;"	f	class:RigidBody
~ScalarField	ScalarField.cpp	/^ScalarField::~ScalarField(void) {$/;"	f	class:ScalarField
~VectorField	VectorField.cpp	/^VectorField::~VectorField(void) {$/;"	f	class:VectorField
